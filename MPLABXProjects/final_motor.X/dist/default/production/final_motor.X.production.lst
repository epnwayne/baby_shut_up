

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Jan 05 00:28:59 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_ADC_Initialize
   384                           	FNCALL	_main,_ADC_Read
   385                           	FNCALL	_main,_Do
   386                           	FNCALL	_main,_Fa
   387                           	FNCALL	_main,_La
   388                           	FNCALL	_main,_Mi
   389                           	FNCALL	_main,_PWM1_Duty
   390                           	FNCALL	_main,_PWM1_Start
   391                           	FNCALL	_main,_Re
   392                           	FNCALL	_main,_Si
   393                           	FNCALL	_main,_So
   394                           	FNCALL	_main,___flmul
   395                           	FNCALL	_main,___fltol
   396                           	FNCALL	_main,___wmul
   397                           	FNCALL	_main,___xxtofl
   398                           	FNCALL	_So,_PWM1_Duty
   399                           	FNCALL	_So,_PWM1_Init
   400                           	FNCALL	_Si,_PWM1_Duty
   401                           	FNCALL	_Si,_PWM1_Init
   402                           	FNCALL	_Re,_PWM1_Duty
   403                           	FNCALL	_Re,_PWM1_Init
   404                           	FNCALL	_Mi,_PWM1_Duty
   405                           	FNCALL	_Mi,_PWM1_Init
   406                           	FNCALL	_La,_PWM1_Duty
   407                           	FNCALL	_La,_PWM1_Init
   408                           	FNCALL	_Fa,_PWM1_Duty
   409                           	FNCALL	_Fa,_PWM1_Init
   410                           	FNCALL	_Do,_PWM1_Duty
   411                           	FNCALL	_Do,_PWM1_Init
   412                           	FNROOT	_main
   413                           	global	_flag
   414                           	global	_n
   415                           psect	nvCOMRAM,class=COMRAM,space=1,noexec
   416                           global __pnvCOMRAM
   417                           __pnvCOMRAM:
   418  000046                     	global	_n
   419                           _n:
   420  000046                            ds      2
   421  000046                     	global	_LATAbits
   422                           _LATAbits	set	0xF89
   423  0000                     	global	_LATA
   424                           _LATA	set	0xF89
   425  0000                     	global	_PWM1CONbits
   426                           _PWM1CONbits	set	0xFB7
   427  0000                     	global	_TRISDbits
   428                           _TRISDbits	set	0xF95
   429  0000                     	global	_TRISCbits
   430                           _TRISCbits	set	0xF94
   431  0000                     	global	_OSCCONbits
   432                           _OSCCONbits	set	0xFD3
   433  0000                     	global	_T2CONbits
   434                           _T2CONbits	set	0xFCA
   435  0000                     	global	_CCPR1L
   436                           _CCPR1L	set	0xFBE
   437  0000                     	global	_TRISAbits
   438                           _TRISAbits	set	0xF92
   439  0000                     	global	_CCP1CONbits
   440                           _CCP1CONbits	set	0xFBD
   441  0000                     	global	_PR2
   442                           _PR2	set	0xFCB
   443  0000                     	global	_ADCON0bits
   444                           _ADCON0bits	set	0xFC2
   445  0000                     	global	_ADRESL
   446                           _ADRESL	set	0xFC3
   447  0000                     	global	_ADRESH
   448                           _ADRESH	set	0xFC4
   449  0000                     	global	_ADCON2bits
   450                           _ADCON2bits	set	0xFC0
   451  0000                     	global	_ADCON1
   452                           _ADCON1	set	0xFC1
   453  0000                     	global	_TRISA
   454                           _TRISA	set	0xF92
   455  0000                     	global	_RD5
   456                           _RD5	set	0x7C1D
   457  0000                     	global	_RD4
   458                           _RD4	set	0x7C1C
   459  0000                     	global	_RD0
   460                           _RD0	set	0x7C18
   461  0000                     	global	_RC3
   462                           _RC3	set	0x7C13
   463  0000                     	global	_RD3
   464                           _RD3	set	0x7C1B
   465  0000                     	global	_RD2
   466                           _RD2	set	0x7C1A
   467  0000                     	global	_RD1
   468                           _RD1	set	0x7C19
   469  0000                     	global	_ADFM
   470                           _ADFM	set	0x7E07
   471  0000                     ; #config settings
   472                           global __CFG_OSC$INTIO67
   473                           __CFG_OSC$INTIO67 equ 0x0
   474  0000                     global __CFG_PWRT$OFF
   475                           __CFG_PWRT$OFF equ 0x0
   476  0000                     global __CFG_BOREN$ON
   477                           __CFG_BOREN$ON equ 0x0
   478  0000                     global __CFG_WDT$OFF
   479                           __CFG_WDT$OFF equ 0x0
   480  0000                     global __CFG_LVP$OFF
   481                           __CFG_LVP$OFF equ 0x0
   482  0000                     global __CFG_CPD$OFF
   483                           __CFG_CPD$OFF equ 0x0
   484  0000                     	file	"C:\Users\wayne\AppData\Local\Temp\shk."
   485                           	line	#
   486                           psect	cinit,class=CODE,delta=1,reloc=2
   487                           global __pcinit
   488                           __pcinit:
   489  0070AE                     global start_initialization
   490                           start_initialization:
   491  0070AE                     
   492                           global __initialization
   493                           __initialization:
   494  0070AE                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   495                           global __pbssCOMRAM
   496                           __pbssCOMRAM:
   497  000048                     	global	_flag
   498                           _flag:
   499  000048                            ds      2
   500  000048                     	file	"C:\Users\wayne\AppData\Local\Temp\shk."
   501                           	line	#
   502                           psect	cinit
   503                           ; Clear objects allocated to COMRAM (2 bytes)
   504                           	global __pbssCOMRAM
   505                           clrf	(__pbssCOMRAM+1)&0xffh,c
   506  0070AE  6A49               clrf	(__pbssCOMRAM+0)&0xffh,c
   507  0070B0  6A48               psect cinit,class=CODE,delta=1
   508                           global end_of_initialization,__end_of__initialization
   509                           
   510                           ;End of C runtime variable initialization code
   511                           
   512                           end_of_initialization:
   513  0070B2                     __end_of__initialization:
   514  0070B2                     movlb 0
   515  0070B2  0100               goto _main	;jump to C main() function
   516  0070B4  EFC8  F03C         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   517                           global __pcstackCOMRAM
   518                           __pcstackCOMRAM:
   519  000001                     ?_ADC_Initialize:	; 1 bytes @ 0x0
   520  000001                     ??_ADC_Initialize:	; 1 bytes @ 0x0
   521  000001                     ?_PWM1_Init:	; 1 bytes @ 0x0
   522  000001                     ?_PWM1_Duty:	; 1 bytes @ 0x0
   523  000001                     ?_PWM1_Start:	; 1 bytes @ 0x0
   524  000001                     ??_PWM1_Start:	; 1 bytes @ 0x0
   525  000001                     ?_main:	; 1 bytes @ 0x0
   526  000001                     	global	?_ADC_Read
   527                           ?_ADC_Read:	; 2 bytes @ 0x0
   528  000001                     	global	?___wmul
   529                           ?___wmul:	; 2 bytes @ 0x0
   530  000001                     	global	ADC_Read@channel
   531                           ADC_Read@channel:	; 2 bytes @ 0x0
   532  000001                     	global	PWM1_Duty@duty
   533                           PWM1_Duty@duty:	; 2 bytes @ 0x0
   534  000001                     	global	___wmul@multiplier
   535                           ___wmul@multiplier:	; 2 bytes @ 0x0
   536  000001                     	global	PWM1_Init@setDuty
   537                           PWM1_Init@setDuty:	; 4 bytes @ 0x0
   538  000001                     	ds   2
   539  000001                     ??_ADC_Read:	; 1 bytes @ 0x2
   540  000003                     ??_PWM1_Duty:	; 1 bytes @ 0x2
   541  000003                     	global	___wmul@multiplicand
   542                           ___wmul@multiplicand:	; 2 bytes @ 0x2
   543  000003                     	ds   2
   544  000003                     ??_PWM1_Init:	; 1 bytes @ 0x4
   545  000005                     ?_Do:	; 1 bytes @ 0x4
   546  000005                     ?_Re:	; 1 bytes @ 0x4
   547  000005                     ?_Mi:	; 1 bytes @ 0x4
   548  000005                     ?_Fa:	; 1 bytes @ 0x4
   549  000005                     ?_So:	; 1 bytes @ 0x4
   550  000005                     ?_La:	; 1 bytes @ 0x4
   551  000005                     ?_Si:	; 1 bytes @ 0x4
   552  000005                     ??___wmul:	; 1 bytes @ 0x4
   553  000005                     	global	ADC_Read@digital
   554                           ADC_Read@digital:	; 2 bytes @ 0x4
   555  000005                     	global	Do@n
   556                           Do@n:	; 2 bytes @ 0x4
   557  000005                     	global	Re@n
   558                           Re@n:	; 2 bytes @ 0x4
   559  000005                     	global	Mi@n
   560                           Mi@n:	; 2 bytes @ 0x4
   561  000005                     	global	Fa@n
   562                           Fa@n:	; 2 bytes @ 0x4
   563  000005                     	global	So@n
   564                           So@n:	; 2 bytes @ 0x4
   565  000005                     	global	La@n
   566                           La@n:	; 2 bytes @ 0x4
   567  000005                     	global	Si@n
   568                           Si@n:	; 2 bytes @ 0x4
   569  000005                     	global	___wmul@product
   570                           ___wmul@product:	; 2 bytes @ 0x4
   571  000005                     	ds   2
   572  000005                     ??_Do:	; 1 bytes @ 0x6
   573  000007                     ??_Re:	; 1 bytes @ 0x6
   574  000007                     ??_Mi:	; 1 bytes @ 0x6
   575  000007                     ??_Fa:	; 1 bytes @ 0x6
   576  000007                     ??_So:	; 1 bytes @ 0x6
   577  000007                     ??_La:	; 1 bytes @ 0x6
   578  000007                     ??_Si:	; 1 bytes @ 0x6
   579  000007                     	global	?___xxtofl
   580                           ?___xxtofl:	; 4 bytes @ 0x6
   581  000007                     	global	___xxtofl@val
   582                           ___xxtofl@val:	; 4 bytes @ 0x6
   583  000007                     	ds   4
   584  000007                     ??___xxtofl:	; 1 bytes @ 0xA
   585  00000B                     	ds   4
   586  00000B                     	global	___xxtofl@sign
   587                           ___xxtofl@sign:	; 1 bytes @ 0xE
   588  00000F                     	ds   1
   589  00000F                     	global	___xxtofl@exp
   590                           ___xxtofl@exp:	; 1 bytes @ 0xF
   591  000010                     	ds   1
   592  000010                     	global	___xxtofl@arg
   593                           ___xxtofl@arg:	; 4 bytes @ 0x10
   594  000011                     	ds   4
   595  000011                     	global	?___flmul
   596                           ?___flmul:	; 4 bytes @ 0x14
   597  000015                     	global	___flmul@b
   598                           ___flmul@b:	; 4 bytes @ 0x14
   599  000015                     	ds   4
   600  000015                     	global	___flmul@a
   601                           ___flmul@a:	; 4 bytes @ 0x18
   602  000019                     	ds   4
   603  000019                     ??___flmul:	; 1 bytes @ 0x1C
   604  00001D                     	ds   4
   605  00001D                     	global	___flmul@sign
   606                           ___flmul@sign:	; 1 bytes @ 0x20
   607  000021                     	ds   1
   608  000021                     	global	___flmul@grs
   609                           ___flmul@grs:	; 4 bytes @ 0x21
   610  000022                     	ds   4
   611  000022                     	global	___flmul@aexp
   612                           ___flmul@aexp:	; 1 bytes @ 0x25
   613  000026                     	ds   1
   614  000026                     	global	___flmul@bexp
   615                           ___flmul@bexp:	; 1 bytes @ 0x26
   616  000027                     	ds   1
   617  000027                     	global	___flmul@prod
   618                           ___flmul@prod:	; 4 bytes @ 0x27
   619  000028                     	ds   4
   620  000028                     	global	___flmul@temp
   621                           ___flmul@temp:	; 2 bytes @ 0x2B
   622  00002C                     	ds   2
   623  00002C                     	global	?___fltol
   624                           ?___fltol:	; 4 bytes @ 0x2D
   625  00002E                     	global	___fltol@f1
   626                           ___fltol@f1:	; 4 bytes @ 0x2D
   627  00002E                     	ds   4
   628  00002E                     ??___fltol:	; 1 bytes @ 0x31
   629  000032                     	ds   4
   630  000032                     	global	___fltol@sign1
   631                           ___fltol@sign1:	; 1 bytes @ 0x35
   632  000036                     	ds   1
   633  000036                     	global	___fltol@exp1
   634                           ___fltol@exp1:	; 1 bytes @ 0x36
   635  000037                     	ds   1
   636  000037                     ??_main:	; 1 bytes @ 0x37
   637  000038                     	global	main@speed
   638                           main@speed:	; 4 bytes @ 0x37
   639  000038                     	ds   4
   640  000038                     	global	main@i
   641                           main@i:	; 2 bytes @ 0x3B
   642  00003C                     	ds   2
   643  00003C                     	global	main@j
   644                           main@j:	; 2 bytes @ 0x3D
   645  00003E                     	ds   2
   646  00003E                     	global	main@flag
   647                           main@flag:	; 2 bytes @ 0x3F
   648  000040                     	ds   2
   649  000040                     	global	main@digital
   650                           main@digital:	; 2 bytes @ 0x41
   651  000042                     	ds   2
   652  000042                     	global	main@voltage
   653                           main@voltage:	; 2 bytes @ 0x43
   654  000044                     	ds   2
   655  000044                     ;!
   656                           ;!Data Sizes:
   657                           ;!    Strings     0
   658                           ;!    Constant    0
   659                           ;!    Data        0
   660                           ;!    BSS         2
   661                           ;!    Persistent  2
   662                           ;!    Stack       0
   663                           ;!
   664                           ;!Auto Spaces:
   665                           ;!    Space          Size  Autos    Used
   666                           ;!    COMRAM          127     69      73
   667                           ;!    BANK0           128      0       0
   668                           ;!    BANK1           256      0       0
   669                           ;!    BANK2           256      0       0
   670                           ;!    BANK3           256      0       0
   671                           ;!    BANK4           256      0       0
   672                           ;!    BANK5           256      0       0
   673                           
   674                           ;!
   675                           ;!Pointer List with Targets:
   676                           ;!
   677                           ;!    None.
   678                           
   679                           
   680                           ;!
   681                           ;!Critical Paths under _main in COMRAM
   682                           ;!
   683                           ;!    _main->___fltol
   684                           ;!    ___xxtofl->___wmul
   685                           ;!    ___fltol->___flmul
   686                           ;!    ___flmul->___xxtofl
   687                           ;!    _So->_PWM1_Duty
   688                           ;!    _So->_PWM1_Init
   689                           ;!    _Si->_PWM1_Duty
   690                           ;!    _Si->_PWM1_Init
   691                           ;!    _Re->_PWM1_Duty
   692                           ;!    _Re->_PWM1_Init
   693                           ;!    _Mi->_PWM1_Duty
   694                           ;!    _Mi->_PWM1_Init
   695                           ;!    _La->_PWM1_Duty
   696                           ;!    _La->_PWM1_Init
   697                           ;!    _Fa->_PWM1_Duty
   698                           ;!    _Fa->_PWM1_Init
   699                           ;!    _Do->_PWM1_Duty
   700                           ;!    _Do->_PWM1_Init
   701                           ;!
   702                           ;!Critical Paths under _main in BANK0
   703                           ;!
   704                           ;!    None.
   705                           ;!
   706                           ;!Critical Paths under _main in BANK1
   707                           ;!
   708                           ;!    None.
   709                           ;!
   710                           ;!Critical Paths under _main in BANK2
   711                           ;!
   712                           ;!    None.
   713                           ;!
   714                           ;!Critical Paths under _main in BANK3
   715                           ;!
   716                           ;!    None.
   717                           ;!
   718                           ;!Critical Paths under _main in BANK4
   719                           ;!
   720                           ;!    None.
   721                           ;!
   722                           ;!Critical Paths under _main in BANK5
   723                           ;!
   724                           ;!    None.
   725                           
   726 ;;
   727 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   728 ;;
   729                           
   730                           ;!
   731                           ;!Call Graph Tables:
   732                           ;!
   733                           ;! ---------------------------------------------------------------------------------
   734                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   735                           ;! ---------------------------------------------------------------------------------
   736                           ;! (0) _main                                                14    14      0   33385
   737                           ;!                                             55 COMRAM    14    14      0
   738                           ;!                     _ADC_Initialize
   739                           ;!                           _ADC_Read
   740                           ;!                                 _Do
   741                           ;!                                 _Fa
   742                           ;!                                 _La
   743                           ;!                                 _Mi
   744                           ;!                          _PWM1_Duty
   745                           ;!                         _PWM1_Start
   746                           ;!                                 _Re
   747                           ;!                                 _Si
   748                           ;!                                 _So
   749                           ;!                            ___flmul
   750                           ;!                            ___fltol
   751                           ;!                             ___wmul
   752                           ;!                           ___xxtofl
   753                           ;! ---------------------------------------------------------------------------------
   754                           ;! (1) ___xxtofl                                            14    10      4     474
   755                           ;!                                              6 COMRAM    14    10      4
   756                           ;!                             ___wmul (ARG)
   757                           ;! ---------------------------------------------------------------------------------
   758                           ;! (1) ___wmul                                               6     2      4     311
   759                           ;!                                              0 COMRAM     6     2      4
   760                           ;! ---------------------------------------------------------------------------------
   761                           ;! (1) ___fltol                                             10     6      4     305
   762                           ;!                                             45 COMRAM    10     6      4
   763                           ;!                            ___flmul (ARG)
   764                           ;!                           ___xxtofl (ARG)
   765                           ;! ---------------------------------------------------------------------------------
   766                           ;! (1) ___flmul                                             25    17      8    1744
   767                           ;!                                             20 COMRAM    25    17      8
   768                           ;!                           ___xxtofl (ARG)
   769                           ;! ---------------------------------------------------------------------------------
   770                           ;! (1) _So                                                   2     0      2    4388
   771                           ;!                                              4 COMRAM     2     0      2
   772                           ;!                          _PWM1_Duty
   773                           ;!                          _PWM1_Init
   774                           ;! ---------------------------------------------------------------------------------
   775                           ;! (1) _Si                                                   2     0      2    3552
   776                           ;!                                              4 COMRAM     2     0      2
   777                           ;!                          _PWM1_Duty
   778                           ;!                          _PWM1_Init
   779                           ;! ---------------------------------------------------------------------------------
   780                           ;! (1) _Re                                                   2     0      2    4464
   781                           ;!                                              4 COMRAM     2     0      2
   782                           ;!                          _PWM1_Duty
   783                           ;!                          _PWM1_Init
   784                           ;! ---------------------------------------------------------------------------------
   785                           ;! (1) _PWM1_Start                                           0     0      0       0
   786                           ;! ---------------------------------------------------------------------------------
   787                           ;! (1) _Mi                                                   2     0      2    4768
   788                           ;!                                              4 COMRAM     2     0      2
   789                           ;!                          _PWM1_Duty
   790                           ;!                          _PWM1_Init
   791                           ;! ---------------------------------------------------------------------------------
   792                           ;! (1) _La                                                   2     0      2    3552
   793                           ;!                                              4 COMRAM     2     0      2
   794                           ;!                          _PWM1_Duty
   795                           ;!                          _PWM1_Init
   796                           ;! ---------------------------------------------------------------------------------
   797                           ;! (1) _Fa                                                   2     0      2    4008
   798                           ;!                                              4 COMRAM     2     0      2
   799                           ;!                          _PWM1_Duty
   800                           ;!                          _PWM1_Init
   801                           ;! ---------------------------------------------------------------------------------
   802                           ;! (1) _Do                                                   2     0      2    3856
   803                           ;!                                              4 COMRAM     2     0      2
   804                           ;!                          _PWM1_Duty
   805                           ;!                          _PWM1_Init
   806                           ;! ---------------------------------------------------------------------------------
   807                           ;! (2) _PWM1_Init                                            4     0      4    1618
   808                           ;!                                              0 COMRAM     4     0      4
   809                           ;! ---------------------------------------------------------------------------------
   810                           ;! (2) _PWM1_Duty                                            4     2      2    1792
   811                           ;!                                              0 COMRAM     4     2      2
   812                           ;! ---------------------------------------------------------------------------------
   813                           ;! (1) _ADC_Read                                             6     4      2      99
   814                           ;!                                              0 COMRAM     6     4      2
   815                           ;! ---------------------------------------------------------------------------------
   816                           ;! (1) _ADC_Initialize                                       0     0      0       0
   817                           ;! ---------------------------------------------------------------------------------
   818                           ;! Estimated maximum stack depth 2
   819                           ;! ---------------------------------------------------------------------------------
   820                           ;!
   821                           ;! Call Graph Graphs:
   822                           ;!
   823                           ;! _main (ROOT)
   824                           ;!   _ADC_Initialize
   825                           ;!   _ADC_Read
   826                           ;!   _Do
   827                           ;!     _PWM1_Duty
   828                           ;!     _PWM1_Init
   829                           ;!   _Fa
   830                           ;!     _PWM1_Duty
   831                           ;!     _PWM1_Init
   832                           ;!   _La
   833                           ;!     _PWM1_Duty
   834                           ;!     _PWM1_Init
   835                           ;!   _Mi
   836                           ;!     _PWM1_Duty
   837                           ;!     _PWM1_Init
   838                           ;!   _PWM1_Duty
   839                           ;!   _PWM1_Start
   840                           ;!   _Re
   841                           ;!     _PWM1_Duty
   842                           ;!     _PWM1_Init
   843                           ;!   _Si
   844                           ;!     _PWM1_Duty
   845                           ;!     _PWM1_Init
   846                           ;!   _So
   847                           ;!     _PWM1_Duty
   848                           ;!     _PWM1_Init
   849                           ;!   ___flmul
   850                           ;!     ___xxtofl (ARG)
   851                           ;!       ___wmul (ARG)
   852                           ;!   ___fltol
   853                           ;!     ___flmul (ARG)
   854                           ;!       ___xxtofl (ARG)
   855                           ;!         ___wmul (ARG)
   856                           ;!     ___xxtofl (ARG)
   857                           ;!       ___wmul (ARG)
   858                           ;!   ___wmul
   859                           ;!   ___xxtofl
   860                           ;!     ___wmul (ARG)
   861                           ;!
   862                           
   863                           ;! Address spaces:
   864                           
   865                           ;!Name               Size   Autos  Total    Cost      Usage
   866                           ;!BIGRAM             5FF      0       0      17        0.0%
   867                           ;!EEDATA             100      0       0       0        0.0%
   868                           ;!BITBANK5           100      0       0      16        0.0%
   869                           ;!BANK5              100      0       0      14        0.0%
   870                           ;!BITBANK4           100      0       0      12        0.0%
   871                           ;!BANK4              100      0       0      13        0.0%
   872                           ;!BITBANK3           100      0       0      10        0.0%
   873                           ;!BANK3              100      0       0      11        0.0%
   874                           ;!BITBANK2           100      0       0       8        0.0%
   875                           ;!BANK2              100      0       0       9        0.0%
   876                           ;!BITBANK1           100      0       0       6        0.0%
   877                           ;!BANK1              100      0       0       7        0.0%
   878                           ;!BITBANK0            80      0       0       4        0.0%
   879                           ;!BANK0               80      0       0       5        0.0%
   880                           ;!BITCOMRAM           7F      0       0       0        0.0%
   881                           ;!COMRAM              7F     45      49       1       57.5%
   882                           ;!BITSFR               0      0       0     200        0.0%
   883                           ;!SFR                  0      0       0     200        0.0%
   884                           ;!STACK                0      0       0       2        0.0%
   885                           ;!NULL                 0      0       0       0        0.0%
   886                           ;!ABS                  0      0      49      15        0.0%
   887                           ;!DATA                 0      0      49       3        0.0%
   888                           ;!CODE                 0      0       0       0        0.0%
   889                           
   890                           	global	_main
   891                           
   892 ;; *************** function _main *****************
   893 ;; Defined at:
   894 ;;		line 333 in file "motor2.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  speed           4   55[COMRAM] float 
   899 ;;  voltage         2   67[COMRAM] int 
   900 ;;  digital         2   65[COMRAM] int 
   901 ;;  flag            2   63[COMRAM] int 
   902 ;;  j               2   61[COMRAM] int 
   903 ;;  i               2   59[COMRAM] int 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   913 ;;      Params:         0       0       0       0       0       0       0
   914 ;;      Locals:        14       0       0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0
   916 ;;      Totals:        14       0       0       0       0       0       0
   917 ;;Total ram usage:       14 bytes
   918 ;; Hardware stack levels required when called:    2
   919 ;; This function calls:
   920 ;;		_ADC_Initialize
   921 ;;		_ADC_Read
   922 ;;		_Do
   923 ;;		_Fa
   924 ;;		_La
   925 ;;		_Mi
   926 ;;		_PWM1_Duty
   927 ;;		_PWM1_Start
   928 ;;		_Re
   929 ;;		_Si
   930 ;;		_So
   931 ;;		___flmul
   932 ;;		___fltol
   933 ;;		___wmul
   934 ;;		___xxtofl
   935 ;; This function is called by:
   936 ;;		Startup code after reset
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           psect	text0,class=CODE,space=0,reloc=2,group=0
   940                           	file	"motor2.c"
   941                           	line	333
   942                           global __ptext0
   943                           __ptext0:
   944  007990                     psect	text0
   945                           	file	"motor2.c"
   946                           	line	333
   947                           	global	__size_of_main
   948                           	__size_of_main	equ	__end_of_main-_main
   949  0000                     	
   950                           _main:
   951  007990                     ;incstack = 0
   952                           	opt	stack 29
   953                           	line	337
   954                           	
   955                           l3610:
   956  007990                     ;motor2.c: 337:     while(1)
   957                           	call	_PWM1_Start	;wreg free
   958  007990  EC68  F038         	line	338
   959                           	
   960                           l3612:
   961  007994                     ;motor2.c: 338:     {
   962                           	movlw	high(0)
   963  007994  0E00               	movwf	((c:main@i+1)),c
   964  007996  6E3D               	movlw	low(0)
   965  007998  0E00               	movwf	((c:main@i)),c
   966  00799A  6E3C               	
   967                           l3614:
   968  00799C                     	movlw	high(0)
   969  00799C  0E00               	movwf	((c:main@j+1)),c
   970  00799E  6E3F               	movlw	low(0)
   971  0079A0  0E00               	movwf	((c:main@j)),c
   972  0079A2  6E3E               	
   973                           l3616:
   974  0079A4                     	movlw	high(0)
   975  0079A4  0E00               	movwf	((c:main@flag+1)),c
   976  0079A6  6E41               	movlw	low(0)
   977  0079A8  0E00               	movwf	((c:main@flag)),c
   978  0079AA  6E40               	line	340
   979                           	
   980                           l3618:
   981  0079AC                     ;motor2.c: 340:         int digital = ADC_Read(0);
   982                           	bsf	((c:3989)),c,0	;volatile
   983  0079AC  8095               	line	341
   984                           	
   985                           l3620:
   986  0079AE                     ;motor2.c: 341:         int voltage = digital * ((float)3/1023);
   987                           	bsf	((c:3989)),c,1	;volatile
   988  0079AE  8295               	line	342
   989                           	
   990                           l3622:
   991  0079B0                     ;motor2.c: 342:         float speed = voltage*100;
   992                           	bsf	((c:3989)),c,2	;volatile
   993  0079B0  8495               	line	343
   994                           	
   995                           l3624:
   996  0079B2                     ;motor2.c: 343:         n = (int)voltage;
   997                           	bsf	((c:3989)),c,3	;volatile
   998  0079B2  8695               	line	344
   999                           	
  1000                           l3626:
  1001  0079B4                     ;motor2.c: 344: 
  1002                           	bsf	((c:3988)),c,3	;volatile
  1003  0079B4  8694               	line	345
  1004                           	
  1005                           l3628:
  1006  0079B6                     ;motor2.c: 345:         if(RD0 == 0)
  1007                           	bsf	((c:3989)),c,4	;volatile
  1008  0079B6  8895               	line	346
  1009                           	
  1010                           l3630:
  1011  0079B8                     ;motor2.c: 346:         {
  1012                           	bsf	((c:3989)),c,5	;volatile
  1013  0079B8  8A95               	line	351
  1014                           	
  1015                           l3632:
  1016  0079BA                     ;motor2.c: 351:         }
  1017                           	movlw	low(0)
  1018  0079BA  0E00               	movwf	((c:3986)),c	;volatile
  1019  0079BC  6E92               	line	352
  1020                           	
  1021                           l3634:
  1022  0079BE                     ;motor2.c: 352:         else if(RD1 == 0)
  1023                           	movlw	low(0)
  1024  0079BE  0E00               	movwf	((c:3977)),c	;volatile
  1025  0079C0  6E89               	line	354
  1026                           ;motor2.c: 354: 
  1027                           	call	_ADC_Initialize	;wreg free
  1028  0079C2  EC5C  F038         	goto	l3636
  1029  0079C6  EFE5  F03C         	line	356
  1030                           ;motor2.c: 356:             Do(n);
  1031                           	
  1032                           l263:
  1033  0079CA                     	line	359
  1034                           	
  1035                           l3636:
  1036  0079CA                     ;motor2.c: 357:         };motor2.c: 359:         else if(RC3 == 0)
  1037                           	movlw	high(0)
  1038  0079CA  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1039  0079CC  6E02               	movlw	low(0)
  1040  0079CE  0E00               	movwf	((c:ADC_Read@channel)),c
  1041  0079D0  6E01               	call	_ADC_Read	;wreg free
  1042  0079D2  ECA6  F038         	movff	0+?_ADC_Read,(c:main@digital)
  1043  0079D6  C001  F042         	movff	1+?_ADC_Read,(c:main@digital+1)
  1044  0079DA  C002  F043         	line	360
  1045                           	
  1046                           l3638:
  1047  0079DE                     ;motor2.c: 360:         {
  1048                           	movlw	low(normalize32(0x3b40300c))
  1049  0079DE  0E0C               	movwf	((c:___flmul@a)),c
  1050  0079E0  6E19               	movlw	high(normalize32(0x3b40300c))
  1051  0079E2  0E30               	movwf	((c:___flmul@a+1)),c
  1052  0079E4  6E1A               	movlw	low highword(normalize32(0x3b40300c))
  1053  0079E6  0E40               	movwf	((c:___flmul@a+2)),c
  1054  0079E8  6E1B               	movlw	high highword(normalize32(0x3b40300c))
  1055  0079EA  0E3B               	movwf	((c:___flmul@a+3)),c
  1056  0079EC  6E1C               	movff	(c:main@digital),(c:___xxtofl@val)
  1057  0079EE  C042  F007         	movff	(c:main@digital+1),(c:___xxtofl@val+1)
  1058  0079F2  C043  F008         	movlw	0
  1059  0079F6  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  1060  0079F8  BE08               	movlw	-1
  1061  0079FA  0EFF               	movwf	((c:___xxtofl@val+2)),c
  1062  0079FC  6E09               	movwf	((c:___xxtofl@val+3)),c
  1063  0079FE  6E0A               	movlw	(01h)&0ffh
  1064  007A00  0E01               	
  1065                           	call	___xxtofl
  1066  007A02  ECDA  F03B         	movff	0+?___xxtofl,(c:___flmul@b)
  1067  007A06  C007  F015         	movff	1+?___xxtofl,(c:___flmul@b+1)
  1068  007A0A  C008  F016         	movff	2+?___xxtofl,(c:___flmul@b+2)
  1069  007A0E  C009  F017         	movff	3+?___xxtofl,(c:___flmul@b+3)
  1070  007A12  C00A  F018         	
  1071                           	call	___flmul	;wreg free
  1072  007A16  ECC9  F03D         	movff	0+?___flmul,(c:___fltol@f1)
  1073  007A1A  C015  F02E         	movff	1+?___flmul,(c:___fltol@f1+1)
  1074  007A1E  C016  F02F         	movff	2+?___flmul,(c:___fltol@f1+2)
  1075  007A22  C017  F030         	movff	3+?___flmul,(c:___fltol@f1+3)
  1076  007A26  C018  F031         	
  1077                           	call	___fltol	;wreg free
  1078  007A2A  EC31  F03B         	movff	0+?___fltol,(c:main@voltage)
  1079  007A2E  C02E  F044         	movff	1+?___fltol,(c:main@voltage+1)
  1080  007A32  C02F  F045         	line	361
  1081                           	
  1082                           l3640:
  1083  007A36                     ;motor2.c: 361: 
  1084                           	movff	(c:main@voltage),(c:___wmul@multiplier)
  1085  007A36  C044  F001         	movff	(c:main@voltage+1),(c:___wmul@multiplier+1)
  1086  007A3A  C045  F002         	movlw	high(064h)
  1087  007A3E  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  1088  007A40  6E04               	movlw	low(064h)
  1089  007A42  0E64               	movwf	((c:___wmul@multiplicand)),c
  1090  007A44  6E03               	call	___wmul	;wreg free
  1091  007A46  EC78  F038         	movff	0+?___wmul,(c:___xxtofl@val)
  1092  007A4A  C001  F007         	movff	1+?___wmul,(c:___xxtofl@val+1)
  1093  007A4E  C002  F008         	movlw	0
  1094  007A52  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  1095  007A54  BE08               	movlw	-1
  1096  007A56  0EFF               	movwf	((c:___xxtofl@val+2)),c
  1097  007A58  6E09               	movwf	((c:___xxtofl@val+3)),c
  1098  007A5A  6E0A               	movlw	(01h)&0ffh
  1099  007A5C  0E01               	
  1100                           	call	___xxtofl
  1101  007A5E  ECDA  F03B         	movff	0+?___xxtofl,(c:main@speed)
  1102  007A62  C007  F038         	movff	1+?___xxtofl,(c:main@speed+1)
  1103  007A66  C008  F039         	movff	2+?___xxtofl,(c:main@speed+2)
  1104  007A6A  C009  F03A         	movff	3+?___xxtofl,(c:main@speed+3)
  1105  007A6E  C00A  F03B         	
  1106                           	line	362
  1107                           	
  1108                           l3642:
  1109  007A72                     ;motor2.c: 362:             LATAbits.LATA2 = 1;
  1110                           	movff	(c:main@voltage),(c:_n)
  1111  007A72  C044  F046         	movff	(c:main@voltage+1),(c:_n+1)
  1112  007A76  C045  F047         	line	364
  1113                           	
  1114                           l3644:
  1115  007A7A                     ;motor2.c: 364:         }
  1116                           	btfsc	c:(31768/8),(31768)&7	;volatile
  1117  007A7A  B083               	goto	u3601
  1118  007A7C  EF42  F03D         	goto	u3600
  1119  007A80  EF44  F03D         u3601:
  1120  007A84                     	goto	l264
  1121  007A84  EF4D  F03D         u3600:
  1122  007A88                     	line	367
  1123                           	
  1124                           l3646:
  1125  007A88                     ;motor2.c: 365:         else if(RD3 == 0);motor2.c: 367: 
  1126                           	bsf	((c:3977)),c,0	;volatile
  1127  007A88  8089               	line	368
  1128                           	
  1129                           l3648:
  1130  007A8A                     ;motor2.c: 368:             LATAbits.LATA3 = 1;
  1131                           	movff	(c:_n),(c:Re@n)
  1132  007A8A  C046  F005         	movff	(c:_n+1),(c:Re@n+1)
  1133  007A8E  C047  F006         	call	_Re	;wreg free
  1134  007A92  EC29  F03A         	line	370
  1135                           ;motor2.c: 370:         }
  1136                           	goto	l3636
  1137  007A96  EFE5  F03C         	line	371
  1138                           ;motor2.c: 371:         else if(RD2 == 0)
  1139                           	
  1140                           l264:
  1141  007A9A                     	btfsc	c:(31769/8),(31769)&7	;volatile
  1142  007A9A  B283               	goto	u3611
  1143  007A9C  EF52  F03D         	goto	u3610
  1144  007AA0  EF54  F03D         u3611:
  1145  007AA4                     	goto	l266
  1146  007AA4  EF5D  F03D         u3610:
  1147  007AA8                     	line	374
  1148                           	
  1149                           l3650:
  1150  007AA8                     ;motor2.c: 372:         {;motor2.c: 374:              LATAbits.LATA4 = 1;
  1151                           	bsf	((c:3977)),c,1	;volatile
  1152  007AA8  8289               	line	375
  1153                           	
  1154                           l3652:
  1155  007AAA                     ;motor2.c: 375:              So(n);
  1156                           	movff	(c:_n),(c:Do@n)
  1157  007AAA  C046  F005         	movff	(c:_n+1),(c:Do@n+1)
  1158  007AAE  C047  F006         	call	_Do	;wreg free
  1159  007AB2  ECC9  F038         	line	376
  1160                           ;motor2.c: 376: 
  1161                           	goto	l3636
  1162  007AB6  EFE5  F03C         	line	378
  1163                           ;motor2.c: 378:         else if(RD4 == 0)
  1164                           	
  1165                           l266:
  1166  007ABA                     	btfsc	c:(31763/8),(31763)&7	;volatile
  1167  007ABA  B682               	goto	u3621
  1168  007ABC  EF62  F03D         	goto	u3620
  1169  007AC0  EF64  F03D         u3621:
  1170  007AC4                     	goto	l268
  1171  007AC4  EF6D  F03D         u3620:
  1172  007AC8                     	line	381
  1173                           	
  1174                           l3654:
  1175  007AC8                     ;motor2.c: 379:         {;motor2.c: 381:              LATAbits.LATA5 = 1;
  1176                           	bsf	((c:3977)),c,2	;volatile
  1177  007AC8  8489               	line	382
  1178                           	
  1179                           l3656:
  1180  007ACA                     ;motor2.c: 382:              La(n);
  1181                           	movff	(c:_n),(c:Mi@n)
  1182  007ACA  C046  F005         	movff	(c:_n+1),(c:Mi@n+1)
  1183  007ACE  C047  F006         	call	_Mi	;wreg free
  1184  007AD2  ECD1  F039         	line	383
  1185                           ;motor2.c: 383: 
  1186                           	goto	l3636
  1187  007AD6  EFE5  F03C         	line	384
  1188                           ;motor2.c: 384:         }
  1189                           	
  1190                           l268:
  1191  007ADA                     	btfsc	c:(31771/8),(31771)&7	;volatile
  1192  007ADA  B683               	goto	u3631
  1193  007ADC  EF72  F03D         	goto	u3630
  1194  007AE0  EF74  F03D         u3631:
  1195  007AE4                     	goto	l270
  1196  007AE4  EF7D  F03D         u3630:
  1197  007AE8                     	line	387
  1198                           	
  1199                           l3658:
  1200  007AE8                     ;motor2.c: 385:         else if(RD5 == 0);motor2.c: 387: 
  1201                           	bsf	((c:3977)),c,3	;volatile
  1202  007AE8  8689               	line	388
  1203                           	
  1204                           l3660:
  1205  007AEA                     ;motor2.c: 388:              LATAbits.LATA6 = 1;
  1206                           	movff	(c:_n),(c:Fa@n)
  1207  007AEA  C046  F005         	movff	(c:_n+1),(c:Fa@n+1)
  1208  007AEE  C047  F006         	call	_Fa	;wreg free
  1209  007AF2  EC21  F039         	line	389
  1210                           ;motor2.c: 389:              Si(n);
  1211                           	goto	l3636
  1212  007AF6  EFE5  F03C         	line	390
  1213                           ;motor2.c: 390: 
  1214                           	
  1215                           l270:
  1216  007AFA                     	btfsc	c:(31770/8),(31770)&7	;volatile
  1217  007AFA  B483               	goto	u3641
  1218  007AFC  EF82  F03D         	goto	u3640
  1219  007B00  EF84  F03D         u3641:
  1220  007B04                     	goto	l272
  1221  007B04  EF8D  F03D         u3640:
  1222  007B08                     	line	393
  1223                           	
  1224                           l3662:
  1225  007B08                     ;motor2.c: 391:         };motor2.c: 393: 
  1226                           	bsf	((c:3977)),c,4	;volatile
  1227  007B08  8889               	line	394
  1228                           	
  1229                           l3664:
  1230  007B0A                     ;motor2.c: 394: 
  1231                           	movff	(c:_n),(c:So@n)
  1232  007B0A  C046  F005         	movff	(c:_n+1),(c:So@n+1)
  1233  007B0E  C047  F006         	call	_So	;wreg free
  1234  007B12  ECD9  F03A         	line	396
  1235                           ;motor2.c: 396:         else
  1236                           	goto	l3636
  1237  007B16  EFE5  F03C         	line	397
  1238                           ;motor2.c: 397:         {
  1239                           	
  1240                           l272:
  1241  007B1A                     	btfsc	c:(31772/8),(31772)&7	;volatile
  1242  007B1A  B883               	goto	u3651
  1243  007B1C  EF92  F03D         	goto	u3650
  1244  007B20  EF94  F03D         u3651:
  1245  007B24                     	goto	l274
  1246  007B24  EF9D  F03D         u3650:
  1247  007B28                     	line	400
  1248                           	
  1249                           l3666:
  1250  007B28                     ;motor2.c: 398: ;motor2.c: 400:             LATA = 0;
  1251                           	bsf	((c:3977)),c,5	;volatile
  1252  007B28  8A89               	line	401
  1253                           	
  1254                           l3668:
  1255  007B2A                     ;motor2.c: 401:         }
  1256                           	movff	(c:_n),(c:La@n)
  1257  007B2A  C046  F005         	movff	(c:_n+1),(c:La@n+1)
  1258  007B2E  C047  F006         	call	_La	;wreg free
  1259  007B32  EC79  F039         	line	403
  1260                           ;motor2.c: 403: }
  1261                           	goto	l3636
  1262  007B36  EFE5  F03C         	line	404
  1263                           	
  1264                           l274:
  1265  007B3A                     	btfsc	c:(31773/8),(31773)&7	;volatile
  1266  007B3A  BA83               	goto	u3661
  1267  007B3C  EFA2  F03D         	goto	u3660
  1268  007B40  EFA4  F03D         u3661:
  1269  007B44                     	goto	l3674
  1270  007B44  EFAD  F03D         u3660:
  1271  007B48                     	line	407
  1272                           	
  1273                           l3670:
  1274  007B48                     	bsf	((c:3977)),c,6	;volatile
  1275  007B48  8C89               	line	408
  1276                           	
  1277                           l3672:
  1278  007B4A                     	movff	(c:_n),(c:Si@n)
  1279  007B4A  C046  F005         	movff	(c:_n+1),(c:Si@n+1)
  1280  007B4E  C047  F006         	call	_Si	;wreg free
  1281  007B52  EC81  F03A         	line	410
  1282                           	goto	l3636
  1283  007B56  EFE5  F03C         	line	415
  1284                           	
  1285                           l276:
  1286  007B5A                     	line	418
  1287                           	
  1288                           l3674:
  1289  007B5A                     	movlw	high(0)
  1290  007B5A  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  1291  007B5C  6E02               	movlw	low(0)
  1292  007B5E  0E00               	movwf	((c:PWM1_Duty@duty)),c
  1293  007B60  6E01               	call	_PWM1_Duty	;wreg free
  1294  007B62  EC8D  F038         	line	419
  1295                           	
  1296                           l3676:
  1297  007B66                     	movlw	low(0)
  1298  007B66  0E00               	movwf	((c:3977)),c	;volatile
  1299  007B68  6E89               	goto	l3636
  1300  007B6A  EFE5  F03C         	line	420
  1301                           	
  1302                           l277:
  1303  007B6E                     	goto	l3636
  1304  007B6E  EFE5  F03C         	
  1305                           l275:
  1306  007B72                     	goto	l3636
  1307  007B72  EFE5  F03C         	
  1308                           l273:
  1309  007B76                     	goto	l3636
  1310  007B76  EFE5  F03C         	
  1311                           l271:
  1312  007B7A                     	goto	l3636
  1313  007B7A  EFE5  F03C         	
  1314                           l269:
  1315  007B7E                     	goto	l3636
  1316  007B7E  EFE5  F03C         	
  1317                           l267:
  1318  007B82                     	goto	l3636
  1319  007B82  EFE5  F03C         	
  1320                           l265:
  1321  007B86                     	goto	l3636
  1322  007B86  EFE5  F03C         	line	421
  1323                           	
  1324                           l278:
  1325  007B8A                     	goto	l3636
  1326  007B8A  EFE5  F03C         	
  1327                           l279:
  1328  007B8E                     	line	422
  1329                           	
  1330                           l280:
  1331  007B8E                     	global	start
  1332                           	goto	start
  1333  007B8E  EF00  F000         	opt stack 0
  1334                           GLOBAL	__end_of_main
  1335                           	__end_of_main:
  1336  007B92                     	signat	_main,89
  1337                           	global	___xxtofl
  1338                           
  1339 ;; *************** function ___xxtofl *****************
  1340 ;; Defined at:
  1341 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  sign            1    wreg     unsigned char 
  1344 ;;  val             4    6[COMRAM] long 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  sign            1   14[COMRAM] unsigned char 
  1347 ;;  arg             4   16[COMRAM] unsigned long 
  1348 ;;  exp             1   15[COMRAM] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  4    6[COMRAM] unsigned char 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1358 ;;      Params:         4       0       0       0       0       0       0
  1359 ;;      Locals:         6       0       0       0       0       0       0
  1360 ;;      Temps:          4       0       0       0       0       0       0
  1361 ;;      Totals:        14       0       0       0       0       0       0
  1362 ;;Total ram usage:       14 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           psect	text1,class=CODE,space=0,reloc=2,group=1
  1371                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  1372                           	line	10
  1373                           global __ptext1
  1374                           __ptext1:
  1375  0077B4                     psect	text1
  1376                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  1377                           	line	10
  1378                           	global	__size_of___xxtofl
  1379                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  1380  0000                     	
  1381                           ___xxtofl:
  1382  0077B4                     ;incstack = 0
  1383                           	opt	stack 30
  1384                           ;___xxtofl@sign stored from wreg
  1385                           	movwf	((c:___xxtofl@sign)),c
  1386  0077B4  6E0F               	line	15
  1387                           	
  1388                           l2660:
  1389  0077B6                     	movf	((c:___xxtofl@sign)),c,w
  1390  0077B6  500F               	btfsc	status,2
  1391  0077B8  B4D8               	goto	u2371
  1392  0077BA  EFE1  F03B         	goto	u2370
  1393  0077BE  EFE3  F03B         u2371:
  1394  0077C2                     	goto	l938
  1395  0077C2  EF05  F03C         u2370:
  1396  0077C6                     	
  1397                           l2662:
  1398  0077C6                     	btfsc	((c:___xxtofl@val+3)),c,7
  1399  0077C6  BE0A               	goto	u2380
  1400  0077C8  EFEA  F03B         	goto	u2381
  1401  0077CC  EFE8  F03B         
  1402                           u2381:
  1403  0077D0                     	goto	l938
  1404  0077D0  EF05  F03C         u2380:
  1405  0077D4                     	line	16
  1406                           	
  1407                           l2664:
  1408  0077D4                     	movff	(c:___xxtofl@val),??___xxtofl+0+0
  1409  0077D4  C007  F00B         	movff	(c:___xxtofl@val+1),??___xxtofl+0+0+1
  1410  0077D8  C008  F00C         	movff	(c:___xxtofl@val+2),??___xxtofl+0+0+2
  1411  0077DC  C009  F00D         	movff	(c:___xxtofl@val+3),??___xxtofl+0+0+3
  1412  0077E0  C00A  F00E         	comf	(??___xxtofl+0+0),c
  1413  0077E4  1E0B               	comf	(??___xxtofl+0+1),c
  1414  0077E6  1E0C               	comf	(??___xxtofl+0+2),c
  1415  0077E8  1E0D               	comf	(??___xxtofl+0+3),c
  1416  0077EA  1E0E               	incf	(??___xxtofl+0+0),c
  1417  0077EC  2A0B               	movlw	0
  1418  0077EE  0E00               	addwfc	(??___xxtofl+0+1),c
  1419  0077F0  220C               	addwfc	(??___xxtofl+0+2),c
  1420  0077F2  220D               	addwfc	(??___xxtofl+0+3),c
  1421  0077F4  220E               	movff	??___xxtofl+0+0,(c:___xxtofl@arg)
  1422  0077F6  C00B  F011         	movff	??___xxtofl+0+1,(c:___xxtofl@arg+1)
  1423  0077FA  C00C  F012         	movff	??___xxtofl+0+2,(c:___xxtofl@arg+2)
  1424  0077FE  C00D  F013         	movff	??___xxtofl+0+3,(c:___xxtofl@arg+3)
  1425  007802  C00E  F014         	line	17
  1426                           	goto	l2666
  1427  007806  EF0F  F03C         	line	18
  1428                           	
  1429                           l938:
  1430  00780A                     	line	19
  1431                           	movff	(c:___xxtofl@val),(c:___xxtofl@arg)
  1432  00780A  C007  F011         	movff	(c:___xxtofl@val+1),(c:___xxtofl@arg+1)
  1433  00780E  C008  F012         	movff	(c:___xxtofl@val+2),(c:___xxtofl@arg+2)
  1434  007812  C009  F013         	movff	(c:___xxtofl@val+3),(c:___xxtofl@arg+3)
  1435  007816  C00A  F014         	goto	l2666
  1436  00781A  EF0F  F03C         	line	20
  1437                           	
  1438                           l939:
  1439  00781E                     	line	21
  1440                           	
  1441                           l2666:
  1442  00781E                     	movf	((c:___xxtofl@val)),c,w
  1443  00781E  5007               iorwf	((c:___xxtofl@val+1)),c,w
  1444  007820  1008               iorwf	((c:___xxtofl@val+2)),c,w
  1445  007822  1009               iorwf	((c:___xxtofl@val+3)),c,w
  1446  007824  100A               	btfss	status,2
  1447  007826  A4D8               	goto	u2391
  1448  007828  EF18  F03C         	goto	u2390
  1449  00782C  EF1A  F03C         
  1450                           u2391:
  1451  007830                     	goto	l2672
  1452  007830  EF26  F03C         u2390:
  1453  007834                     	line	22
  1454                           	
  1455                           l2668:
  1456  007834                     	movlw	low(normalize32(0x0))
  1457  007834  0E00               	movwf	((c:?___xxtofl)),c
  1458  007836  6E07               	movlw	high(normalize32(0x0))
  1459  007838  0E00               	movwf	((c:?___xxtofl+1)),c
  1460  00783A  6E08               	movlw	low highword(normalize32(0x0))
  1461  00783C  0E00               	movwf	((c:?___xxtofl+2)),c
  1462  00783E  6E09               	movlw	high highword(normalize32(0x0))
  1463  007840  0E00               	movwf	((c:?___xxtofl+3)),c
  1464  007842  6E0A               	goto	l941
  1465  007844  EFC7  F03C         	
  1466                           l2670:
  1467  007848                     	goto	l941
  1468  007848  EFC7  F03C         	
  1469                           l940:
  1470  00784C                     	line	23
  1471                           	
  1472                           l2672:
  1473  00784C                     	movlw	low(096h)
  1474  00784C  0E96               	movwf	((c:___xxtofl@exp)),c
  1475  00784E  6E10               	line	24
  1476                           	goto	l2676
  1477  007850  EF32  F03C         	
  1478                           l943:
  1479  007854                     	line	25
  1480                           	
  1481                           l2674:
  1482  007854                     	incf	((c:___xxtofl@exp)),c
  1483  007854  2A10               	line	26
  1484                           	bcf	status,0
  1485  007856  90D8               	rrcf	((c:___xxtofl@arg+3)),c
  1486  007858  3214               	rrcf	((c:___xxtofl@arg+2)),c
  1487  00785A  3213               	rrcf	((c:___xxtofl@arg+1)),c
  1488  00785C  3212               	rrcf	((c:___xxtofl@arg)),c
  1489  00785E  3211               	goto	l2676
  1490  007860  EF32  F03C         	line	27
  1491                           	
  1492                           l942:
  1493  007864                     	line	24
  1494                           	
  1495                           l2676:
  1496  007864                     	movlw	0
  1497  007864  0E00               	andwf	((c:___xxtofl@arg)),c,w
  1498  007866  1411               	movwf	(??___xxtofl+0+0)&0ffh,c
  1499  007868  6E0B               	movlw	0
  1500  00786A  0E00               	andwf	((c:___xxtofl@arg+1)),c,w
  1501  00786C  1412               	movwf	1+(??___xxtofl+0+0)&0ffh,c
  1502  00786E  6E0C               	
  1503                           	movlw	0
  1504  007870  0E00               	andwf	((c:___xxtofl@arg+2)),c,w
  1505  007872  1413               	movwf	2+(??___xxtofl+0+0)&0ffh,c
  1506  007874  6E0D               	
  1507                           	movlw	0FEh
  1508  007876  0EFE               	andwf	((c:___xxtofl@arg+3)),c,w
  1509  007878  1414               	movwf	3+(??___xxtofl+0+0)&0ffh,c
  1510  00787A  6E0E               	movf	(??___xxtofl+0+0),c,w
  1511  00787C  500B               iorwf	(??___xxtofl+0+1),c,w
  1512  00787E  100C               iorwf	(??___xxtofl+0+2),c,w
  1513  007880  100D               iorwf	(??___xxtofl+0+3),c,w
  1514  007882  100E               	btfss	status,2
  1515  007884  A4D8               	goto	u2401
  1516  007886  EF47  F03C         	goto	u2400
  1517  00788A  EF49  F03C         
  1518                           u2401:
  1519  00788E                     	goto	l2674
  1520  00788E  EF2A  F03C         u2400:
  1521  007892                     	goto	l945
  1522  007892  EF59  F03C         	
  1523                           l944:
  1524  007896                     	line	28
  1525                           	goto	l945
  1526  007896  EF59  F03C         	
  1527                           l946:
  1528  00789A                     	line	29
  1529                           	
  1530                           l2678:
  1531  00789A                     	incf	((c:___xxtofl@exp)),c
  1532  00789A  2A10               	line	30
  1533                           	
  1534                           l2680:
  1535  00789C                     	movlw	low(01h)
  1536  00789C  0E01               	addwf	((c:___xxtofl@arg)),c
  1537  00789E  2611               	movlw	0
  1538  0078A0  0E00               	addwfc	((c:___xxtofl@arg+1)),c
  1539  0078A2  2212               	addwfc	((c:___xxtofl@arg+2)),c
  1540  0078A4  2213               	addwfc	((c:___xxtofl@arg+3)),c
  1541  0078A6  2214               	line	31
  1542                           	
  1543                           l2682:
  1544  0078A8                     	bcf	status,0
  1545  0078A8  90D8               	rrcf	((c:___xxtofl@arg+3)),c
  1546  0078AA  3214               	rrcf	((c:___xxtofl@arg+2)),c
  1547  0078AC  3213               	rrcf	((c:___xxtofl@arg+1)),c
  1548  0078AE  3212               	rrcf	((c:___xxtofl@arg)),c
  1549  0078B0  3211               	line	32
  1550                           	
  1551                           l945:
  1552  0078B2                     	line	28
  1553                           	movlw	0
  1554  0078B2  0E00               	andwf	((c:___xxtofl@arg)),c,w
  1555  0078B4  1411               	movwf	(??___xxtofl+0+0)&0ffh,c
  1556  0078B6  6E0B               	movlw	0
  1557  0078B8  0E00               	andwf	((c:___xxtofl@arg+1)),c,w
  1558  0078BA  1412               	movwf	1+(??___xxtofl+0+0)&0ffh,c
  1559  0078BC  6E0C               	
  1560                           	movlw	0
  1561  0078BE  0E00               	andwf	((c:___xxtofl@arg+2)),c,w
  1562  0078C0  1413               	movwf	2+(??___xxtofl+0+0)&0ffh,c
  1563  0078C2  6E0D               	
  1564                           	movlw	0FFh
  1565  0078C4  0EFF               	andwf	((c:___xxtofl@arg+3)),c,w
  1566  0078C6  1414               	movwf	3+(??___xxtofl+0+0)&0ffh,c
  1567  0078C8  6E0E               	movf	(??___xxtofl+0+0),c,w
  1568  0078CA  500B               iorwf	(??___xxtofl+0+1),c,w
  1569  0078CC  100C               iorwf	(??___xxtofl+0+2),c,w
  1570  0078CE  100D               iorwf	(??___xxtofl+0+3),c,w
  1571  0078D0  100E               	btfss	status,2
  1572  0078D2  A4D8               	goto	u2411
  1573  0078D4  EF6E  F03C         	goto	u2410
  1574  0078D8  EF70  F03C         
  1575                           u2411:
  1576  0078DC                     	goto	l2678
  1577  0078DC  EF4D  F03C         u2410:
  1578  0078E0                     	goto	l2686
  1579  0078E0  EF7C  F03C         	
  1580                           l947:
  1581  0078E4                     	line	33
  1582                           	goto	l2686
  1583  0078E4  EF7C  F03C         	
  1584                           l949:
  1585  0078E8                     	line	34
  1586                           	
  1587                           l2684:
  1588  0078E8                     	decf	((c:___xxtofl@exp)),c
  1589  0078E8  0610               	line	35
  1590                           	bcf	status,0
  1591  0078EA  90D8               	rlcf	((c:___xxtofl@arg)),c
  1592  0078EC  3611               	rlcf	((c:___xxtofl@arg+1)),c
  1593  0078EE  3612               	rlcf	((c:___xxtofl@arg+2)),c
  1594  0078F0  3613               	rlcf	((c:___xxtofl@arg+3)),c
  1595  0078F2  3614               	goto	l2686
  1596  0078F4  EF7C  F03C         	line	36
  1597                           	
  1598                           l948:
  1599  0078F8                     	line	33
  1600                           	
  1601                           l2686:
  1602  0078F8                     	
  1603                           	btfsc	((c:___xxtofl@arg+2)),c,(23)&7
  1604  0078F8  BE13               	goto	u2421
  1605  0078FA  EF81  F03C         	goto	u2420
  1606  0078FE  EF83  F03C         u2421:
  1607  007902                     	goto	l952
  1608  007902  EF8D  F03C         u2420:
  1609  007906                     	
  1610                           l2688:
  1611  007906                     		movlw	02h-0
  1612  007906  0E02               	cpfslt	((c:___xxtofl@exp)),c
  1613  007908  6010               	goto	u2431
  1614  00790A  EF89  F03C         	goto	u2430
  1615  00790E  EF8B  F03C         
  1616                           u2431:
  1617  007912                     	goto	l2684
  1618  007912  EF74  F03C         u2430:
  1619  007916                     	goto	l952
  1620  007916  EF8D  F03C         	
  1621                           l951:
  1622  00791A                     	
  1623                           l952:
  1624  00791A                     	line	37
  1625                           	
  1626                           	btfsc	((c:___xxtofl@exp)),c,(0)&7
  1627  00791A  B010               	goto	u2441
  1628  00791C  EF92  F03C         	goto	u2440
  1629  007920  EF94  F03C         u2441:
  1630  007924                     	goto	l2692
  1631  007924  EF97  F03C         u2440:
  1632  007928                     	line	38
  1633                           	
  1634                           l2690:
  1635  007928                     	bcf	(0+(23/8)+(c:___xxtofl@arg)),c,(23)&7
  1636  007928  9E13               	goto	l2692
  1637  00792A  EF97  F03C         	
  1638                           l953:
  1639  00792E                     	line	39
  1640                           	
  1641                           l2692:
  1642  00792E                     	bcf status,0
  1643  00792E  90D8               	rrcf	((c:___xxtofl@exp)),c
  1644  007930  3210               
  1645                           	line	40
  1646                           	
  1647                           l2694:
  1648  007932                     	movff	(c:___xxtofl@exp),??___xxtofl+0+0
  1649  007932  C010  F00B         	clrf	(??___xxtofl+0+0+1)&0ffh,c
  1650  007936  6A0C               	clrf	(??___xxtofl+0+0+2)&0ffh,c
  1651  007938  6A0D               	clrf	(??___xxtofl+0+0+3)&0ffh,c
  1652  00793A  6A0E               	movff	??___xxtofl+0+0,??___xxtofl+0+3
  1653  00793C  C00B  F00E         	clrf	(??___xxtofl+0+2),c
  1654  007940  6A0D               	clrf	(??___xxtofl+0+1),c
  1655  007942  6A0C               	clrf	(??___xxtofl+0+0),c
  1656  007944  6A0B               	movf	(??___xxtofl+0+0),c,w
  1657  007946  500B               	iorwf	((c:___xxtofl@arg)),c
  1658  007948  1211               	movf	(??___xxtofl+0+1),c,w
  1659  00794A  500C               	iorwf	((c:___xxtofl@arg+1)),c
  1660  00794C  1212               	movf	(??___xxtofl+0+2),c,w
  1661  00794E  500D               	iorwf	((c:___xxtofl@arg+2)),c
  1662  007950  1213               	movf	(??___xxtofl+0+3),c,w
  1663  007952  500E               	iorwf	((c:___xxtofl@arg+3)),c
  1664  007954  1214               
  1665                           	line	41
  1666                           	
  1667                           l2696:
  1668  007956                     	movf	((c:___xxtofl@sign)),c,w
  1669  007956  500F               	btfsc	status,2
  1670  007958  B4D8               	goto	u2451
  1671  00795A  EFB1  F03C         	goto	u2450
  1672  00795E  EFB3  F03C         u2451:
  1673  007962                     	goto	l2702
  1674  007962  EFBD  F03C         u2450:
  1675  007966                     	
  1676                           l2698:
  1677  007966                     	btfsc	((c:___xxtofl@val+3)),c,7
  1678  007966  BE0A               	goto	u2460
  1679  007968  EFBA  F03C         	goto	u2461
  1680  00796C  EFB8  F03C         
  1681                           u2461:
  1682  007970                     	goto	l2702
  1683  007970  EFBD  F03C         u2460:
  1684  007974                     	line	42
  1685                           	
  1686                           l2700:
  1687  007974                     	bsf	(0+(31/8)+(c:___xxtofl@arg)),c,(31)&7
  1688  007974  8E14               	goto	l2702
  1689  007976  EFBD  F03C         	
  1690                           l954:
  1691  00797A                     	line	43
  1692                           	
  1693                           l2702:
  1694  00797A                     	movff	(c:___xxtofl@arg),(c:?___xxtofl)
  1695  00797A  C011  F007         	movff	(c:___xxtofl@arg+1),(c:?___xxtofl+1)
  1696  00797E  C012  F008         	movff	(c:___xxtofl@arg+2),(c:?___xxtofl+2)
  1697  007982  C013  F009         	movff	(c:___xxtofl@arg+3),(c:?___xxtofl+3)
  1698  007986  C014  F00A         	goto	l941
  1699  00798A  EFC7  F03C         	
  1700                           l2704:
  1701  00798E                     	line	44
  1702                           	
  1703                           l941:
  1704  00798E                     	return	;funcret
  1705  00798E  0012               	opt stack 0
  1706                           GLOBAL	__end_of___xxtofl
  1707                           	__end_of___xxtofl:
  1708  007990                     	signat	___xxtofl,8316
  1709                           	global	___wmul
  1710                           
  1711 ;; *************** function ___wmul *****************
  1712 ;; Defined at:
  1713 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  multiplier      2    0[COMRAM] unsigned int 
  1716 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  product         2    4[COMRAM] unsigned int 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  2    0[COMRAM] unsigned int 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, prodl, prodh
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1728 ;;      Params:         4       0       0       0       0       0       0
  1729 ;;      Locals:         2       0       0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0
  1731 ;;      Totals:         6       0       0       0       0       0       0
  1732 ;;Total ram usage:        6 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           psect	text2,class=CODE,space=0,reloc=2,group=1
  1741                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  1742                           	line	15
  1743                           global __ptext2
  1744                           __ptext2:
  1745  0070F0                     psect	text2
  1746                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  1747                           	line	15
  1748                           	global	__size_of___wmul
  1749                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  1750  0000                     	
  1751                           ___wmul:
  1752  0070F0                     ;incstack = 0
  1753                           	opt	stack 30
  1754                           	line	37
  1755                           	
  1756                           l2480:
  1757  0070F0                     	movf	((c:___wmul@multiplier)),c,w
  1758  0070F0  5001               	mulwf	((c:___wmul@multiplicand)),c
  1759  0070F2  0203               	movff	prodl,(c:___wmul@product)
  1760  0070F4  CFF3 F005          	movff	prodh,(c:___wmul@product+1)
  1761  0070F8  CFF4 F006          	line	38
  1762                           	movf	((c:___wmul@multiplier)),c,w
  1763  0070FC  5001               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  1764  0070FE  0204               	movf	(prodl),c,w
  1765  007100  50F3               	addwf	((c:___wmul@product+1)),c
  1766  007102  2606               
  1767                           	line	39
  1768                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  1769  007104  5002               	mulwf	((c:___wmul@multiplicand)),c
  1770  007106  0203               	movf	(prodl),c,w
  1771  007108  50F3               	addwf	((c:___wmul@product+1)),c
  1772  00710A  2606               
  1773                           	line	52
  1774                           	
  1775                           l2482:
  1776  00710C                     	movff	(c:___wmul@product),(c:?___wmul)
  1777  00710C  C005  F001         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  1778  007110  C006  F002         	goto	l283
  1779  007114  EF8C  F038         	
  1780                           l2484:
  1781  007118                     	line	53
  1782                           	
  1783                           l283:
  1784  007118                     	return	;funcret
  1785  007118  0012               	opt stack 0
  1786                           GLOBAL	__end_of___wmul
  1787                           	__end_of___wmul:
  1788  00711A                     	signat	___wmul,8314
  1789                           	global	___fltol
  1790                           
  1791 ;; *************** function ___fltol *****************
  1792 ;; Defined at:
  1793 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  f1              4   45[COMRAM] unsigned int 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  exp1            1   54[COMRAM] unsigned char 
  1798 ;;  sign1           1   53[COMRAM] unsigned char 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  4   45[COMRAM] long 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1808 ;;      Params:         4       0       0       0       0       0       0
  1809 ;;      Locals:         2       0       0       0       0       0       0
  1810 ;;      Temps:          4       0       0       0       0       0       0
  1811 ;;      Totals:        10       0       0       0       0       0       0
  1812 ;;Total ram usage:       10 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           psect	text3,class=CODE,space=0,reloc=2,group=1
  1821                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  1822                           	line	43
  1823                           global __ptext3
  1824                           __ptext3:
  1825  007662                     psect	text3
  1826                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\fltol.c"
  1827                           	line	43
  1828                           	global	__size_of___fltol
  1829                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  1830  0000                     	
  1831                           ___fltol:
  1832  007662                     ;incstack = 0
  1833                           	opt	stack 30
  1834                           	line	47
  1835                           	
  1836                           l2616:
  1837  007662                     	rlcf	((c:___fltol@f1+2)),c,w
  1838  007662  3430               	rlcf	((c:___fltol@f1+3)),c,w
  1839  007664  3431               	movwf	((c:___fltol@exp1)),c
  1840  007666  6E37               	movf	((c:___fltol@exp1)),c,w
  1841  007668  5037               	btfss	status,2
  1842  00766A  A4D8               	goto	u2301
  1843  00766C  EF3A  F03B         	goto	u2300
  1844  007670  EF3C  F03B         u2301:
  1845  007674                     	goto	l2622
  1846  007674  EF48  F03B         u2300:
  1847  007678                     	line	48
  1848                           	
  1849                           l2618:
  1850  007678                     	movlw	low(0)
  1851  007678  0E00               	movwf	((c:?___fltol)),c
  1852  00767A  6E2E               	movlw	high(0)
  1853  00767C  0E00               	movwf	((c:?___fltol+1)),c
  1854  00767E  6E2F               	movlw	low highword(0)
  1855  007680  0E00               	movwf	((c:?___fltol+2)),c
  1856  007682  6E30               	movlw	high highword(0)
  1857  007684  0E00               	movwf	((c:?___fltol+3)),c
  1858  007686  6E31               	goto	l580
  1859  007688  EFD9  F03B         	
  1860                           l2620:
  1861  00768C                     	goto	l580
  1862  00768C  EFD9  F03B         	
  1863                           l579:
  1864  007690                     	line	49
  1865                           	
  1866                           l2622:
  1867  007690                     	movff	(c:___fltol@f1),??___fltol+0+0
  1868  007690  C02E  F032         	movff	(c:___fltol@f1+1),??___fltol+0+0+1
  1869  007694  C02F  F033         	movff	(c:___fltol@f1+2),??___fltol+0+0+2
  1870  007698  C030  F034         	movff	(c:___fltol@f1+3),??___fltol+0+0+3
  1871  00769C  C031  F035         	movlw	01Fh+1
  1872  0076A0  0E20               	goto	u2310
  1873  0076A2  EF58  F03B         u2315:
  1874  0076A6                     	bcf	status,0
  1875  0076A6  90D8               	rrcf	(??___fltol+0+3),c
  1876  0076A8  3235               	rrcf	(??___fltol+0+2),c
  1877  0076AA  3234               	rrcf	(??___fltol+0+1),c
  1878  0076AC  3233               	rrcf	(??___fltol+0+0),c
  1879  0076AE  3232               u2310:
  1880  0076B0                     	decfsz	wreg
  1881  0076B0  2EE8               	goto	u2315
  1882  0076B2  EF53  F03B         	movf	(??___fltol+0+0),c,w
  1883  0076B6  5032               	movwf	((c:___fltol@sign1)),c
  1884  0076B8  6E36               	line	50
  1885                           	
  1886                           l2624:
  1887  0076BA                     	bsf	(0+(23/8)+(c:___fltol@f1)),c,(23)&7
  1888  0076BA  8E30               	line	51
  1889                           	
  1890                           l2626:
  1891  0076BC                     	movlw	0FFh
  1892  0076BC  0EFF               	andwf	((c:___fltol@f1)),c
  1893  0076BE  162E               	movlw	0FFh
  1894  0076C0  0EFF               	andwf	((c:___fltol@f1+1)),c
  1895  0076C2  162F               	movlw	0FFh
  1896  0076C4  0EFF               	andwf	((c:___fltol@f1+2)),c
  1897  0076C6  1630               	movlw	0
  1898  0076C8  0E00               	andwf	((c:___fltol@f1+3)),c
  1899  0076CA  1631               	line	52
  1900                           	
  1901                           l2628:
  1902  0076CC                     	movlw	(096h)&0ffh
  1903  0076CC  0E96               	subwf	((c:___fltol@exp1)),c
  1904  0076CE  5E37               	line	53
  1905                           	
  1906                           l2630:
  1907  0076D0                     	btfsc	((c:___fltol@exp1)),c,7
  1908  0076D0  BE37               	goto	u2320
  1909  0076D2  EF6F  F03B         	goto	u2321
  1910  0076D6  EF6D  F03B         
  1911                           u2321:
  1912  0076DA                     	goto	l2642
  1913  0076DA  EF93  F03B         u2320:
  1914  0076DE                     	line	54
  1915                           	
  1916                           l2632:
  1917  0076DE                     		movf	((c:___fltol@exp1)),c,w
  1918  0076DE  5037               	xorlw	80h
  1919  0076E0  0A80               	addlw	-(80h^-23)
  1920  0076E2  0F97               	btfsc	status,0
  1921  0076E4  B0D8               	goto	u2331
  1922  0076E6  EF77  F03B         	goto	u2330
  1923  0076EA  EF79  F03B         
  1924                           u2331:
  1925  0076EE                     	goto	l2638
  1926  0076EE  EF87  F03B         u2330:
  1927  0076F2                     	line	55
  1928                           	
  1929                           l2634:
  1930  0076F2                     	movlw	low(0)
  1931  0076F2  0E00               	movwf	((c:?___fltol)),c
  1932  0076F4  6E2E               	movlw	high(0)
  1933  0076F6  0E00               	movwf	((c:?___fltol+1)),c
  1934  0076F8  6E2F               	movlw	low highword(0)
  1935  0076FA  0E00               	movwf	((c:?___fltol+2)),c
  1936  0076FC  6E30               	movlw	high highword(0)
  1937  0076FE  0E00               	movwf	((c:?___fltol+3)),c
  1938  007700  6E31               	goto	l580
  1939  007702  EFD9  F03B         	
  1940                           l2636:
  1941  007706                     	goto	l580
  1942  007706  EFD9  F03B         	
  1943                           l582:
  1944  00770A                     	goto	l2638
  1945  00770A  EF87  F03B         	line	56
  1946                           	
  1947                           l583:
  1948  00770E                     	line	57
  1949                           	
  1950                           l2638:
  1951  00770E                     	bcf	status,0
  1952  00770E  90D8               	rrcf	((c:___fltol@f1+3)),c
  1953  007710  3231               	rrcf	((c:___fltol@f1+2)),c
  1954  007712  3230               	rrcf	((c:___fltol@f1+1)),c
  1955  007714  322F               	rrcf	((c:___fltol@f1)),c
  1956  007716  322E               	
  1957                           l2640:
  1958  007718                     	incfsz	((c:___fltol@exp1)),c
  1959  007718  3E37               	
  1960                           	goto	l2638
  1961  00771A  EF87  F03B         	goto	l2652
  1962  00771E  EFBD  F03B         	
  1963                           l584:
  1964  007722                     	line	59
  1965                           	goto	l2652
  1966  007722  EFBD  F03B         	
  1967                           l581:
  1968  007726                     	line	60
  1969                           	
  1970                           l2642:
  1971  007726                     		movlw	020h-1
  1972  007726  0E1F               	cpfsgt	((c:___fltol@exp1)),c
  1973  007728  6437               	goto	u2341
  1974  00772A  EF99  F03B         	goto	u2340
  1975  00772E  EF9B  F03B         
  1976                           u2341:
  1977  007732                     	goto	l2650
  1978  007732  EFB1  F03B         u2340:
  1979  007736                     	line	61
  1980                           	
  1981                           l2644:
  1982  007736                     	movlw	low(0)
  1983  007736  0E00               	movwf	((c:?___fltol)),c
  1984  007738  6E2E               	movlw	high(0)
  1985  00773A  0E00               	movwf	((c:?___fltol+1)),c
  1986  00773C  6E2F               	movlw	low highword(0)
  1987  00773E  0E00               	movwf	((c:?___fltol+2)),c
  1988  007740  6E30               	movlw	high highword(0)
  1989  007742  0E00               	movwf	((c:?___fltol+3)),c
  1990  007744  6E31               	goto	l580
  1991  007746  EFD9  F03B         	
  1992                           l2646:
  1993  00774A                     	goto	l580
  1994  00774A  EFD9  F03B         	
  1995                           l586:
  1996  00774E                     	line	62
  1997                           	goto	l2650
  1998  00774E  EFB1  F03B         	
  1999                           l588:
  2000  007752                     	line	63
  2001                           	
  2002                           l2648:
  2003  007752                     	bcf	status,0
  2004  007752  90D8               	rlcf	((c:___fltol@f1)),c
  2005  007754  362E               	rlcf	((c:___fltol@f1+1)),c
  2006  007756  362F               	rlcf	((c:___fltol@f1+2)),c
  2007  007758  3630               	rlcf	((c:___fltol@f1+3)),c
  2008  00775A  3631               	line	64
  2009                           	decf	((c:___fltol@exp1)),c
  2010  00775C  0637               	goto	l2650
  2011  00775E  EFB1  F03B         	line	65
  2012                           	
  2013                           l587:
  2014  007762                     	line	62
  2015                           	
  2016                           l2650:
  2017  007762                     	movf	((c:___fltol@exp1)),c,w
  2018  007762  5037               	btfss	status,2
  2019  007764  A4D8               	goto	u2351
  2020  007766  EFB7  F03B         	goto	u2350
  2021  00776A  EFB9  F03B         u2351:
  2022  00776E                     	goto	l2648
  2023  00776E  EFA9  F03B         u2350:
  2024  007772                     	goto	l2652
  2025  007772  EFBD  F03B         	
  2026                           l589:
  2027  007776                     	goto	l2652
  2028  007776  EFBD  F03B         	line	66
  2029                           	
  2030                           l585:
  2031  00777A                     	line	67
  2032                           	
  2033                           l2652:
  2034  00777A                     	movf	((c:___fltol@sign1)),c,w
  2035  00777A  5036               	btfsc	status,2
  2036  00777C  B4D8               	goto	u2361
  2037  00777E  EFC3  F03B         	goto	u2360
  2038  007782  EFC5  F03B         u2361:
  2039  007786                     	goto	l2656
  2040  007786  EFCF  F03B         u2360:
  2041  00778A                     	line	68
  2042                           	
  2043                           l2654:
  2044  00778A                     	comf	((c:___fltol@f1+3)),c
  2045  00778A  1E31               	comf	((c:___fltol@f1+2)),c
  2046  00778C  1E30               	comf	((c:___fltol@f1+1)),c
  2047  00778E  1E2F               	negf	((c:___fltol@f1)),c
  2048  007790  6C2E               	movlw	0
  2049  007792  0E00               	addwfc	((c:___fltol@f1+1)),c
  2050  007794  222F               	addwfc	((c:___fltol@f1+2)),c
  2051  007796  2230               	addwfc	((c:___fltol@f1+3)),c
  2052  007798  2231               	goto	l2656
  2053  00779A  EFCF  F03B         	
  2054                           l590:
  2055  00779E                     	line	69
  2056                           	
  2057                           l2656:
  2058  00779E                     	movff	(c:___fltol@f1),(c:?___fltol)
  2059  00779E  C02E  F02E         	movff	(c:___fltol@f1+1),(c:?___fltol+1)
  2060  0077A2  C02F  F02F         	movff	(c:___fltol@f1+2),(c:?___fltol+2)
  2061  0077A6  C030  F030         	movff	(c:___fltol@f1+3),(c:?___fltol+3)
  2062  0077AA  C031  F031         	goto	l580
  2063  0077AE  EFD9  F03B         	
  2064                           l2658:
  2065  0077B2                     	line	70
  2066                           	
  2067                           l580:
  2068  0077B2                     	return	;funcret
  2069  0077B2  0012               	opt stack 0
  2070                           GLOBAL	__end_of___fltol
  2071                           	__end_of___fltol:
  2072  0077B4                     	signat	___fltol,4220
  2073                           	global	___flmul
  2074                           
  2075 ;; *************** function ___flmul *****************
  2076 ;; Defined at:
  2077 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  b               4   20[COMRAM] long 
  2080 ;;  a               4   24[COMRAM] long 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  prod            4   39[COMRAM] struct .
  2083 ;;  grs             4   33[COMRAM] unsigned long 
  2084 ;;  temp            2   43[COMRAM] struct .
  2085 ;;  bexp            1   38[COMRAM] unsigned char 
  2086 ;;  aexp            1   37[COMRAM] unsigned char 
  2087 ;;  sign            1   32[COMRAM] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  4   20[COMRAM] unsigned char 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, prodl, prodh
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2097 ;;      Params:         8       0       0       0       0       0       0
  2098 ;;      Locals:        13       0       0       0       0       0       0
  2099 ;;      Temps:          4       0       0       0       0       0       0
  2100 ;;      Totals:        25       0       0       0       0       0       0
  2101 ;;Total ram usage:       25 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_main
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           psect	text4,class=CODE,space=0,reloc=2,group=1
  2110                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  2111                           	line	8
  2112                           global __ptext4
  2113                           __ptext4:
  2114  007B92                     psect	text4
  2115                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcmul.c"
  2116                           	line	8
  2117                           	global	__size_of___flmul
  2118                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  2119  0000                     	
  2120                           ___flmul:
  2121  007B92                     ;incstack = 0
  2122                           	opt	stack 30
  2123                           	line	17
  2124                           	
  2125                           l2486:
  2126  007B92                     	movf	(0+((c:___flmul@b)+03h)),c,w
  2127  007B92  5018               	andlw	low(080h)
  2128  007B94  0B80               	movwf	((c:___flmul@sign)),c
  2129  007B96  6E21               	line	18
  2130                           	movf	(0+((c:___flmul@b)+03h)),c,w
  2131  007B98  5018               	addwf	(0+((c:___flmul@b)+03h)),c,w
  2132  007B9A  2418               	movwf	((c:___flmul@bexp)),c
  2133  007B9C  6E27               	line	19
  2134                           	
  2135                           l2488:
  2136  007B9E                     	
  2137                           	btfss	(0+((c:___flmul@b)+02h)),c,(7)&7
  2138  007B9E  AE17               	goto	u2111
  2139  007BA0  EFD4  F03D         	goto	u2110
  2140  007BA4  EFD6  F03D         u2111:
  2141  007BA8                     	goto	l2492
  2142  007BA8  EFD9  F03D         u2110:
  2143  007BAC                     	line	20
  2144                           	
  2145                           l2490:
  2146  007BAC                     	bsf	(0+(0/8)+(c:___flmul@bexp)),c,(0)&7
  2147  007BAC  8027               	goto	l2492
  2148  007BAE  EFD9  F03D         	line	21
  2149                           	
  2150                           l890:
  2151  007BB2                     	line	24
  2152                           	
  2153                           l2492:
  2154  007BB2                     	movf	((c:___flmul@bexp)),c,w
  2155  007BB2  5027               	btfsc	status,2
  2156  007BB4  B4D8               	goto	u2121
  2157  007BB6  EFDF  F03D         	goto	u2120
  2158  007BBA  EFE1  F03D         u2121:
  2159  007BBE                     	goto	l2500
  2160  007BBE  EFF6  F03D         u2120:
  2161  007BC2                     	line	26
  2162                           	
  2163                           l2494:
  2164  007BC2                     		incf	((c:___flmul@bexp)),c,w
  2165  007BC2  2827               	btfss	status,2
  2166  007BC4  A4D8               	goto	u2131
  2167  007BC6  EFE7  F03D         	goto	u2130
  2168  007BCA  EFE9  F03D         
  2169                           u2131:
  2170  007BCE                     	goto	l2498
  2171  007BCE  EFF3  F03D         u2130:
  2172  007BD2                     	line	28
  2173                           	
  2174                           l2496:
  2175  007BD2                     	movlw	low(normalize32(0x0))
  2176  007BD2  0E00               	movwf	((c:___flmul@b)),c
  2177  007BD4  6E15               	movlw	high(normalize32(0x0))
  2178  007BD6  0E00               	movwf	((c:___flmul@b+1)),c
  2179  007BD8  6E16               	movlw	low highword(normalize32(0x0))
  2180  007BDA  0E00               	movwf	((c:___flmul@b+2)),c
  2181  007BDC  6E17               	movlw	high highword(normalize32(0x0))
  2182  007BDE  0E00               	movwf	((c:___flmul@b+3)),c
  2183  007BE0  6E18               	goto	l2498
  2184  007BE2  EFF3  F03D         	line	29
  2185                           	
  2186                           l892:
  2187  007BE6                     	line	31
  2188                           	
  2189                           l2498:
  2190  007BE6                     	bsf	(0+(23/8)+(c:___flmul@b)),c,(23)&7
  2191  007BE6  8E17               	line	33
  2192                           	goto	l2502
  2193  007BE8  EF00  F03E         	line	34
  2194                           	
  2195                           l891:
  2196  007BEC                     	line	36
  2197                           	
  2198                           l2500:
  2199  007BEC                     	movlw	low(normalize32(0x0))
  2200  007BEC  0E00               	movwf	((c:___flmul@b)),c
  2201  007BEE  6E15               	movlw	high(normalize32(0x0))
  2202  007BF0  0E00               	movwf	((c:___flmul@b+1)),c
  2203  007BF2  6E16               	movlw	low highword(normalize32(0x0))
  2204  007BF4  0E00               	movwf	((c:___flmul@b+2)),c
  2205  007BF6  6E17               	movlw	high highword(normalize32(0x0))
  2206  007BF8  0E00               	movwf	((c:___flmul@b+3)),c
  2207  007BFA  6E18               	goto	l2502
  2208  007BFC  EF00  F03E         	line	37
  2209                           	
  2210                           l893:
  2211  007C00                     	line	39
  2212                           	
  2213                           l2502:
  2214  007C00                     	movf	(0+((c:___flmul@a)+03h)),c,w
  2215  007C00  501C               	andlw	low(080h)
  2216  007C02  0B80               	xorwf	((c:___flmul@sign)),c
  2217  007C04  1A21               	line	40
  2218                           	
  2219                           l2504:
  2220  007C06                     	movf	(0+((c:___flmul@a)+03h)),c,w
  2221  007C06  501C               	addwf	(0+((c:___flmul@a)+03h)),c,w
  2222  007C08  241C               	movwf	((c:___flmul@aexp)),c
  2223  007C0A  6E26               	line	41
  2224                           	
  2225                           l2506:
  2226  007C0C                     	
  2227                           	btfss	(0+((c:___flmul@a)+02h)),c,(7)&7
  2228  007C0C  AE1B               	goto	u2141
  2229  007C0E  EF0B  F03E         	goto	u2140
  2230  007C12  EF0D  F03E         u2141:
  2231  007C16                     	goto	l2510
  2232  007C16  EF10  F03E         u2140:
  2233  007C1A                     	line	42
  2234                           	
  2235                           l2508:
  2236  007C1A                     	bsf	(0+(0/8)+(c:___flmul@aexp)),c,(0)&7
  2237  007C1A  8026               	goto	l2510
  2238  007C1C  EF10  F03E         	line	43
  2239                           	
  2240                           l894:
  2241  007C20                     	line	45
  2242                           	
  2243                           l2510:
  2244  007C20                     	movf	((c:___flmul@aexp)),c,w
  2245  007C20  5026               	btfsc	status,2
  2246  007C22  B4D8               	goto	u2151
  2247  007C24  EF16  F03E         	goto	u2150
  2248  007C28  EF18  F03E         u2151:
  2249  007C2C                     	goto	l2518
  2250  007C2C  EF2D  F03E         u2150:
  2251  007C30                     	line	48
  2252                           	
  2253                           l2512:
  2254  007C30                     		incf	((c:___flmul@aexp)),c,w
  2255  007C30  2826               	btfss	status,2
  2256  007C32  A4D8               	goto	u2161
  2257  007C34  EF1E  F03E         	goto	u2160
  2258  007C38  EF20  F03E         
  2259                           u2161:
  2260  007C3C                     	goto	l2516
  2261  007C3C  EF2A  F03E         u2160:
  2262  007C40                     	line	50
  2263                           	
  2264                           l2514:
  2265  007C40                     	movlw	low(normalize32(0x0))
  2266  007C40  0E00               	movwf	((c:___flmul@a)),c
  2267  007C42  6E19               	movlw	high(normalize32(0x0))
  2268  007C44  0E00               	movwf	((c:___flmul@a+1)),c
  2269  007C46  6E1A               	movlw	low highword(normalize32(0x0))
  2270  007C48  0E00               	movwf	((c:___flmul@a+2)),c
  2271  007C4A  6E1B               	movlw	high highword(normalize32(0x0))
  2272  007C4C  0E00               	movwf	((c:___flmul@a+3)),c
  2273  007C4E  6E1C               	goto	l2516
  2274  007C50  EF2A  F03E         	line	51
  2275                           	
  2276                           l896:
  2277  007C54                     	line	53
  2278                           	
  2279                           l2516:
  2280  007C54                     	bsf	(0+(23/8)+(c:___flmul@a)),c,(23)&7
  2281  007C54  8E1B               	line	54
  2282                           	goto	l897
  2283  007C56  EF35  F03E         	line	55
  2284                           	
  2285                           l895:
  2286  007C5A                     	line	57
  2287                           	
  2288                           l2518:
  2289  007C5A                     	movlw	low(normalize32(0x0))
  2290  007C5A  0E00               	movwf	((c:___flmul@a)),c
  2291  007C5C  6E19               	movlw	high(normalize32(0x0))
  2292  007C5E  0E00               	movwf	((c:___flmul@a+1)),c
  2293  007C60  6E1A               	movlw	low highword(normalize32(0x0))
  2294  007C62  0E00               	movwf	((c:___flmul@a+2)),c
  2295  007C64  6E1B               	movlw	high highword(normalize32(0x0))
  2296  007C66  0E00               	movwf	((c:___flmul@a+3)),c
  2297  007C68  6E1C               	line	58
  2298                           	
  2299                           l897:
  2300  007C6A                     	line	65
  2301                           	movf	((c:___flmul@aexp)),c,w
  2302  007C6A  5026               	btfsc	status,2
  2303  007C6C  B4D8               	goto	u2171
  2304  007C6E  EF3B  F03E         	goto	u2170
  2305  007C72  EF3D  F03E         u2171:
  2306  007C76                     	goto	l2522
  2307  007C76  EF47  F03E         u2170:
  2308  007C7A                     	
  2309                           l2520:
  2310  007C7A                     	movf	((c:___flmul@bexp)),c,w
  2311  007C7A  5027               	btfss	status,2
  2312  007C7C  A4D8               	goto	u2181
  2313  007C7E  EF43  F03E         	goto	u2180
  2314  007C82  EF45  F03E         u2181:
  2315  007C86                     	goto	l2526
  2316  007C86  EF53  F03E         u2180:
  2317  007C8A                     	goto	l2522
  2318  007C8A  EF47  F03E         	
  2319                           l900:
  2320  007C8E                     	line	66
  2321                           	
  2322                           l2522:
  2323  007C8E                     	movlw	low(normalize32(0x0))
  2324  007C8E  0E00               	movwf	((c:?___flmul)),c
  2325  007C90  6E15               	movlw	high(normalize32(0x0))
  2326  007C92  0E00               	movwf	((c:?___flmul+1)),c
  2327  007C94  6E16               	movlw	low highword(normalize32(0x0))
  2328  007C96  0E00               	movwf	((c:?___flmul+2)),c
  2329  007C98  6E17               	movlw	high highword(normalize32(0x0))
  2330  007C9A  0E00               	movwf	((c:?___flmul+3)),c
  2331  007C9C  6E18               	goto	l901
  2332  007C9E  EFFF  F03F         	
  2333                           l2524:
  2334  007CA2                     	goto	l901
  2335  007CA2  EFFF  F03F         	line	67
  2336                           	
  2337                           l898:
  2338  007CA6                     	line	95
  2339                           	
  2340                           l2526:
  2341  007CA6                     	movf	(0+((c:___flmul@a)+02h)),c,w
  2342  007CA6  501B               	mulwf	((c:___flmul@b)),c
  2343  007CA8  0215               	movff	prodl,(c:___flmul@temp)
  2344  007CAA  CFF3 F02C          	movff	prodh,(c:___flmul@temp+1)
  2345  007CAE  CFF4 F02D          	line	96
  2346                           	
  2347                           l2528:
  2348  007CB2                     	movf	((c:___flmul@temp)),c,w
  2349  007CB2  502C               	movwf	((c:___flmul@grs)),c
  2350  007CB4  6E22               	clrf	((c:___flmul@grs+1)),c
  2351  007CB6  6A23               	clrf	((c:___flmul@grs+2)),c
  2352  007CB8  6A24               	clrf	((c:___flmul@grs+3)),c
  2353  007CBA  6A25               
  2354                           	line	97
  2355                           	
  2356                           l2530:
  2357  007CBC                     	movf	(0+((c:___flmul@temp)+01h)),c,w
  2358  007CBC  502D               	movwf	((c:___flmul@prod)),c
  2359  007CBE  6E28               	clrf	((c:___flmul@prod+1)),c
  2360  007CC0  6A29               	clrf	((c:___flmul@prod+2)),c
  2361  007CC2  6A2A               	clrf	((c:___flmul@prod+3)),c
  2362  007CC4  6A2B               
  2363                           	line	98
  2364                           	movf	(0+((c:___flmul@a)+01h)),c,w
  2365  007CC6  501A               	mulwf	(0+((c:___flmul@b)+01h)),c
  2366  007CC8  0216               	movff	prodl,(c:___flmul@temp)
  2367  007CCA  CFF3 F02C          	movff	prodh,(c:___flmul@temp+1)
  2368  007CCE  CFF4 F02D          	line	99
  2369                           	
  2370                           l2532:
  2371  007CD2                     	movf	((c:___flmul@temp)),c,w
  2372  007CD2  502C               	addwf	((c:___flmul@grs)),c
  2373  007CD4  2622               	movlw	0
  2374  007CD6  0E00               	addwfc	((c:___flmul@grs+1)),c
  2375  007CD8  2223               	addwfc	((c:___flmul@grs+2)),c
  2376  007CDA  2224               	addwfc	((c:___flmul@grs+3)),c
  2377  007CDC  2225               	line	100
  2378                           	
  2379                           l2534:
  2380  007CDE                     	movf	(0+((c:___flmul@temp)+01h)),c,w
  2381  007CDE  502D               	addwf	((c:___flmul@prod)),c
  2382  007CE0  2628               	movlw	0
  2383  007CE2  0E00               	addwfc	((c:___flmul@prod+1)),c
  2384  007CE4  2229               	addwfc	((c:___flmul@prod+2)),c
  2385  007CE6  222A               	addwfc	((c:___flmul@prod+3)),c
  2386  007CE8  222B               	line	101
  2387                           	movf	((c:___flmul@a)),c,w
  2388  007CEA  5019               	mulwf	(0+((c:___flmul@b)+02h)),c
  2389  007CEC  0217               	movff	prodl,(c:___flmul@temp)
  2390  007CEE  CFF3 F02C          	movff	prodh,(c:___flmul@temp+1)
  2391  007CF2  CFF4 F02D          	line	102
  2392                           	
  2393                           l2536:
  2394  007CF6                     	movf	((c:___flmul@temp)),c,w
  2395  007CF6  502C               	addwf	((c:___flmul@grs)),c
  2396  007CF8  2622               	movlw	0
  2397  007CFA  0E00               	addwfc	((c:___flmul@grs+1)),c
  2398  007CFC  2223               	addwfc	((c:___flmul@grs+2)),c
  2399  007CFE  2224               	addwfc	((c:___flmul@grs+3)),c
  2400  007D00  2225               	line	103
  2401                           	
  2402                           l2538:
  2403  007D02                     	movf	(0+((c:___flmul@temp)+01h)),c,w
  2404  007D02  502D               	addwf	((c:___flmul@prod)),c
  2405  007D04  2628               	movlw	0
  2406  007D06  0E00               	addwfc	((c:___flmul@prod+1)),c
  2407  007D08  2229               	addwfc	((c:___flmul@prod+2)),c
  2408  007D0A  222A               	addwfc	((c:___flmul@prod+3)),c
  2409  007D0C  222B               	line	104
  2410                           	
  2411                           l2540:
  2412  007D0E                     	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
  2413  007D0E  C024  F025         	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
  2414  007D12  C023  F024         	movff	(c:___flmul@grs),(c:___flmul@grs+1)
  2415  007D16  C022  F023         	clrf	((c:___flmul@grs)),c
  2416  007D1A  6A22               	line	105
  2417                           	
  2418                           l2542:
  2419  007D1C                     	movf	((c:___flmul@a)),c,w
  2420  007D1C  5019               	mulwf	(0+((c:___flmul@b)+01h)),c
  2421  007D1E  0216               	movff	prodl,(c:___flmul@temp)
  2422  007D20  CFF3 F02C          	movff	prodh,(c:___flmul@temp+1)
  2423  007D24  CFF4 F02D          	line	106
  2424                           	
  2425                           l2544:
  2426  007D28                     	movf	((c:___flmul@temp)),c,w
  2427  007D28  502C               	addwf	((c:___flmul@grs)),c
  2428  007D2A  2622               	movf	((c:___flmul@temp+1)),c,w
  2429  007D2C  502D               	addwfc	((c:___flmul@grs+1)),c
  2430  007D2E  2223               	movlw	0
  2431  007D30  0E00               	addwfc	((c:___flmul@grs+2)),c
  2432  007D32  2224               	movlw	0
  2433  007D34  0E00               	addwfc	((c:___flmul@grs+3)),c
  2434  007D36  2225               
  2435                           	line	107
  2436                           	
  2437                           l2546:
  2438  007D38                     	movf	(0+((c:___flmul@a)+01h)),c,w
  2439  007D38  501A               	mulwf	((c:___flmul@b)),c
  2440  007D3A  0215               	movff	prodl,(c:___flmul@temp)
  2441  007D3C  CFF3 F02C          	movff	prodh,(c:___flmul@temp+1)
  2442  007D40  CFF4 F02D          	line	108
  2443                           	
  2444                           l2548:
  2445  007D44                     	movf	((c:___flmul@temp)),c,w
  2446  007D44  502C               	addwf	((c:___flmul@grs)),c
  2447  007D46  2622               	movf	((c:___flmul@temp+1)),c,w
  2448  007D48  502D               	addwfc	((c:___flmul@grs+1)),c
  2449  007D4A  2223               	movlw	0
  2450  007D4C  0E00               	addwfc	((c:___flmul@grs+2)),c
  2451  007D4E  2224               	movlw	0
  2452  007D50  0E00               	addwfc	((c:___flmul@grs+3)),c
  2453  007D52  2225               
  2454                           	line	109
  2455                           	
  2456                           l2550:
  2457  007D54                     	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
  2458  007D54  C024  F025         	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
  2459  007D58  C023  F024         	movff	(c:___flmul@grs),(c:___flmul@grs+1)
  2460  007D5C  C022  F023         	clrf	((c:___flmul@grs)),c
  2461  007D60  6A22               	line	110
  2462                           	movf	((c:___flmul@a)),c,w
  2463  007D62  5019               	mulwf	((c:___flmul@b)),c
  2464  007D64  0215               	movff	prodl,(c:___flmul@temp)
  2465  007D66  CFF3 F02C          	movff	prodh,(c:___flmul@temp+1)
  2466  007D6A  CFF4 F02D          	line	111
  2467                           	
  2468                           l2552:
  2469  007D6E                     	movf	((c:___flmul@temp)),c,w
  2470  007D6E  502C               	addwf	((c:___flmul@grs)),c
  2471  007D70  2622               	movf	((c:___flmul@temp+1)),c,w
  2472  007D72  502D               	addwfc	((c:___flmul@grs+1)),c
  2473  007D74  2223               	movlw	0
  2474  007D76  0E00               	addwfc	((c:___flmul@grs+2)),c
  2475  007D78  2224               	movlw	0
  2476  007D7A  0E00               	addwfc	((c:___flmul@grs+3)),c
  2477  007D7C  2225               
  2478                           	line	112
  2479                           	
  2480                           l2554:
  2481  007D7E                     	movf	(0+((c:___flmul@a)+02h)),c,w
  2482  007D7E  501B               	mulwf	(0+((c:___flmul@b)+01h)),c
  2483  007D80  0216               	movff	prodl,(c:___flmul@temp)
  2484  007D82  CFF3 F02C          	movff	prodh,(c:___flmul@temp+1)
  2485  007D86  CFF4 F02D          	line	113
  2486                           	movf	((c:___flmul@temp)),c,w
  2487  007D8A  502C               	addwf	((c:___flmul@prod)),c
  2488  007D8C  2628               	movf	((c:___flmul@temp+1)),c,w
  2489  007D8E  502D               	addwfc	((c:___flmul@prod+1)),c
  2490  007D90  2229               	movlw	0
  2491  007D92  0E00               	addwfc	((c:___flmul@prod+2)),c
  2492  007D94  222A               	movlw	0
  2493  007D96  0E00               	addwfc	((c:___flmul@prod+3)),c
  2494  007D98  222B               
  2495                           	line	114
  2496                           	
  2497                           l2556:
  2498  007D9A                     	movf	(0+((c:___flmul@a)+01h)),c,w
  2499  007D9A  501A               	mulwf	(0+((c:___flmul@b)+02h)),c
  2500  007D9C  0217               	movff	prodl,(c:___flmul@temp)
  2501  007D9E  CFF3 F02C          	movff	prodh,(c:___flmul@temp+1)
  2502  007DA2  CFF4 F02D          	line	115
  2503                           	
  2504                           l2558:
  2505  007DA6                     	movf	((c:___flmul@temp)),c,w
  2506  007DA6  502C               	addwf	((c:___flmul@prod)),c
  2507  007DA8  2628               	movf	((c:___flmul@temp+1)),c,w
  2508  007DAA  502D               	addwfc	((c:___flmul@prod+1)),c
  2509  007DAC  2229               	movlw	0
  2510  007DAE  0E00               	addwfc	((c:___flmul@prod+2)),c
  2511  007DB0  222A               	movlw	0
  2512  007DB2  0E00               	addwfc	((c:___flmul@prod+3)),c
  2513  007DB4  222B               
  2514                           	line	116
  2515                           	movf	(0+((c:___flmul@a)+02h)),c,w
  2516  007DB6  501B               	mulwf	(0+((c:___flmul@b)+02h)),c
  2517  007DB8  0217               	movff	prodl,(c:___flmul@temp)
  2518  007DBA  CFF3 F02C          	movff	prodh,(c:___flmul@temp+1)
  2519  007DBE  CFF4 F02D          	line	117
  2520                           	
  2521                           l2560:
  2522  007DC2                     	movf	((c:___flmul@temp)),c,w
  2523  007DC2  502C               	movwf	(??___flmul+0+0)&0ffh,c
  2524  007DC4  6E1D               	movf	((c:___flmul@temp+1)),c,w
  2525  007DC6  502D               	movwf	1+(??___flmul+0+0)&0ffh,c
  2526  007DC8  6E1E               	
  2527                           	clrf	2+(??___flmul+0+0)&0ffh,c
  2528  007DCA  6A1F               	
  2529                           	clrf	3+(??___flmul+0+0)&0ffh,c
  2530  007DCC  6A20               	movff	??___flmul+0+2,??___flmul+0+3
  2531  007DCE  C01F  F020         	movff	??___flmul+0+1,??___flmul+0+2
  2532  007DD2  C01E  F01F         	movff	??___flmul+0+0,??___flmul+0+1
  2533  007DD6  C01D  F01E         	clrf	(??___flmul+0+0),c
  2534  007DDA  6A1D               	movf	(??___flmul+0+0),c,w
  2535  007DDC  501D               	addwf	((c:___flmul@prod)),c
  2536  007DDE  2628               	movf	(??___flmul+0+1),c,w
  2537  007DE0  501E               	addwfc	((c:___flmul@prod+1)),c
  2538  007DE2  2229               	movf	(??___flmul+0+2),c,w
  2539  007DE4  501F               	addwfc	((c:___flmul@prod+2)),c
  2540  007DE6  222A               	movf	(??___flmul+0+3),c,w
  2541  007DE8  5020               	addwfc	((c:___flmul@prod+3)),c
  2542  007DEA  222B               
  2543                           	line	145
  2544                           	
  2545                           l2562:
  2546  007DEC                     	movff	(c:___flmul@grs),??___flmul+0+0
  2547  007DEC  C022  F01D         	movff	(c:___flmul@grs+1),??___flmul+0+0+1
  2548  007DF0  C023  F01E         	movff	(c:___flmul@grs+2),??___flmul+0+0+2
  2549  007DF4  C024  F01F         	movff	(c:___flmul@grs+3),??___flmul+0+0+3
  2550  007DF8  C025  F020         	movlw	018h+1
  2551  007DFC  0E19               	goto	u2190
  2552  007DFE  EF06  F03F         u2195:
  2553  007E02                     	bcf	status,0
  2554  007E02  90D8               	rrcf	(??___flmul+0+3),c
  2555  007E04  3220               	rrcf	(??___flmul+0+2),c
  2556  007E06  321F               	rrcf	(??___flmul+0+1),c
  2557  007E08  321E               	rrcf	(??___flmul+0+0),c
  2558  007E0A  321D               u2190:
  2559  007E0C                     	decfsz	wreg
  2560  007E0C  2EE8               	goto	u2195
  2561  007E0E  EF01  F03F         	movf	(??___flmul+0+0),c,w
  2562  007E12  501D               	addwf	((c:___flmul@prod)),c
  2563  007E14  2628               	movf	(??___flmul+0+1),c,w
  2564  007E16  501E               	addwfc	((c:___flmul@prod+1)),c
  2565  007E18  2229               	movf	(??___flmul+0+2),c,w
  2566  007E1A  501F               	addwfc	((c:___flmul@prod+2)),c
  2567  007E1C  222A               	movf	(??___flmul+0+3),c,w
  2568  007E1E  5020               	addwfc	((c:___flmul@prod+3)),c
  2569  007E20  222B               
  2570                           	line	146
  2571                           	
  2572                           l2564:
  2573  007E22                     	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
  2574  007E22  C024  F025         	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
  2575  007E26  C023  F024         	movff	(c:___flmul@grs),(c:___flmul@grs+1)
  2576  007E2A  C022  F023         	clrf	((c:___flmul@grs)),c
  2577  007E2E  6A22               	line	149
  2578                           	
  2579                           l2566:
  2580  007E30                     	movf	((c:___flmul@aexp)),c,w
  2581  007E30  5026               	movff	(c:___flmul@bexp),??___flmul+0+0
  2582  007E32  C027  F01D         	clrf	(??___flmul+0+0+1)&0ffh,c
  2583  007E36  6A1E               	addwf	(??___flmul+0+0),c
  2584  007E38  261D               	movlw	0
  2585  007E3A  0E00               	addwfc	(??___flmul+0+1),c
  2586  007E3C  221E               	movlw	low(-126)
  2587  007E3E  0E82               	addwf	(??___flmul+0+0),c,w
  2588  007E40  241D               	movwf	((c:___flmul@temp)),c
  2589  007E42  6E2C               	movlw	high(-126)
  2590  007E44  0EFF               	addwfc	(??___flmul+0+1),c,w
  2591  007E46  201E               	movwf	1+((c:___flmul@temp)),c
  2592  007E48  6E2D               	line	152
  2593                           	goto	l2574
  2594  007E4A  EF3E  F03F         	
  2595                           l903:
  2596  007E4E                     	line	153
  2597                           	
  2598                           l2568:
  2599  007E4E                     	bcf	status,0
  2600  007E4E  90D8               	rlcf	((c:___flmul@prod)),c
  2601  007E50  3628               	rlcf	((c:___flmul@prod+1)),c
  2602  007E52  3629               	rlcf	((c:___flmul@prod+2)),c
  2603  007E54  362A               	rlcf	((c:___flmul@prod+3)),c
  2604  007E56  362B               	line	154
  2605                           	
  2606                           l2570:
  2607  007E58                     	
  2608                           	btfss	((c:___flmul@grs+3)),c,(31)&7
  2609  007E58  AE25               	goto	u2201
  2610  007E5A  EF31  F03F         	goto	u2200
  2611  007E5E  EF33  F03F         u2201:
  2612  007E62                     	goto	l904
  2613  007E62  EF34  F03F         u2200:
  2614  007E66                     	line	155
  2615                           	
  2616                           l2572:
  2617  007E66                     	bsf	(0+(0/8)+(c:___flmul@prod)),c,(0)&7
  2618  007E66  8028               	line	156
  2619                           	
  2620                           l904:
  2621  007E68                     	line	157
  2622                           	bcf	status,0
  2623  007E68  90D8               	rlcf	((c:___flmul@grs)),c
  2624  007E6A  3622               	rlcf	((c:___flmul@grs+1)),c
  2625  007E6C  3623               	rlcf	((c:___flmul@grs+2)),c
  2626  007E6E  3624               	rlcf	((c:___flmul@grs+3)),c
  2627  007E70  3625               	line	158
  2628                           	decf	((c:___flmul@temp)),c
  2629  007E72  062C               	btfss	status,0
  2630  007E74  A0D8               	decf	((c:___flmul@temp+1)),c
  2631  007E76  062D               	goto	l2574
  2632  007E78  EF3E  F03F         	line	159
  2633                           	
  2634                           l902:
  2635  007E7C                     	line	152
  2636                           	
  2637                           l2574:
  2638  007E7C                     	
  2639                           	btfss	((c:___flmul@prod+2)),c,(23)&7
  2640  007E7C  AE2A               	goto	u2211
  2641  007E7E  EF43  F03F         	goto	u2210
  2642  007E82  EF45  F03F         u2211:
  2643  007E86                     	goto	l2568
  2644  007E86  EF27  F03F         u2210:
  2645  007E8A                     	goto	l2576
  2646  007E8A  EF47  F03F         	
  2647                           l905:
  2648  007E8E                     	line	163
  2649                           	
  2650                           l2576:
  2651  007E8E                     	movlw	low(0)
  2652  007E8E  0E00               	movwf	((c:___flmul@aexp)),c
  2653  007E90  6E26               	line	164
  2654                           	
  2655                           l2578:
  2656  007E92                     	
  2657                           	btfss	((c:___flmul@grs+3)),c,(31)&7
  2658  007E92  AE25               	goto	u2221
  2659  007E94  EF4E  F03F         	goto	u2220
  2660  007E98  EF50  F03F         u2221:
  2661  007E9C                     	goto	l906
  2662  007E9C  EF78  F03F         u2220:
  2663  007EA0                     	line	165
  2664                           	
  2665                           l2580:
  2666  007EA0                     	movlw	0FFh
  2667  007EA0  0EFF               	andwf	((c:___flmul@grs)),c,w
  2668  007EA2  1422               	movwf	(??___flmul+0+0)&0ffh,c
  2669  007EA4  6E1D               	movlw	0FFh
  2670  007EA6  0EFF               	andwf	((c:___flmul@grs+1)),c,w
  2671  007EA8  1423               	movwf	1+(??___flmul+0+0)&0ffh,c
  2672  007EAA  6E1E               	
  2673                           	movlw	0FFh
  2674  007EAC  0EFF               	andwf	((c:___flmul@grs+2)),c,w
  2675  007EAE  1424               	movwf	2+(??___flmul+0+0)&0ffh,c
  2676  007EB0  6E1F               	
  2677                           	movlw	07Fh
  2678  007EB2  0E7F               	andwf	((c:___flmul@grs+3)),c,w
  2679  007EB4  1425               	movwf	3+(??___flmul+0+0)&0ffh,c
  2680  007EB6  6E20               	movf	(??___flmul+0+0),c,w
  2681  007EB8  501D               iorwf	(??___flmul+0+1),c,w
  2682  007EBA  101E               iorwf	(??___flmul+0+2),c,w
  2683  007EBC  101F               iorwf	(??___flmul+0+3),c,w
  2684  007EBE  1020               	btfsc	status,2
  2685  007EC0  B4D8               	goto	u2231
  2686  007EC2  EF65  F03F         	goto	u2230
  2687  007EC6  EF67  F03F         
  2688                           u2231:
  2689  007ECA                     	goto	l907
  2690  007ECA  EF6B  F03F         u2230:
  2691  007ECE                     	line	166
  2692                           	
  2693                           l2582:
  2694  007ECE                     	movlw	low(01h)
  2695  007ECE  0E01               	movwf	((c:___flmul@aexp)),c
  2696  007ED0  6E26               	line	167
  2697                           	goto	l906
  2698  007ED2  EF78  F03F         	line	168
  2699                           	
  2700                           l907:
  2701  007ED6                     	line	169
  2702                           	
  2703                           	btfss	((c:___flmul@prod)),c,(0)&7
  2704  007ED6  A028               	goto	u2241
  2705  007ED8  EF70  F03F         	goto	u2240
  2706  007EDC  EF72  F03F         u2241:
  2707  007EE0                     	goto	l906
  2708  007EE0  EF78  F03F         u2240:
  2709  007EE4                     	line	170
  2710                           	
  2711                           l2584:
  2712  007EE4                     	movlw	low(01h)
  2713  007EE4  0E01               	movwf	((c:___flmul@aexp)),c
  2714  007EE6  6E26               	goto	l906
  2715  007EE8  EF78  F03F         	line	171
  2716                           	
  2717                           l909:
  2718  007EEC                     	goto	l906
  2719  007EEC  EF78  F03F         	line	172
  2720                           	
  2721                           l908:
  2722  007EF0                     	line	173
  2723                           	
  2724                           l906:
  2725  007EF0                     	line	174
  2726                           	movf	((c:___flmul@aexp)),c,w
  2727  007EF0  5026               	btfsc	status,2
  2728  007EF2  B4D8               	goto	u2251
  2729  007EF4  EF7E  F03F         	goto	u2250
  2730  007EF8  EF80  F03F         u2251:
  2731  007EFC                     	goto	l2594
  2732  007EFC  EFA8  F03F         u2250:
  2733  007F00                     	line	175
  2734                           	
  2735                           l2586:
  2736  007F00                     	movlw	low(01h)
  2737  007F00  0E01               	addwf	((c:___flmul@prod)),c
  2738  007F02  2628               	movlw	0
  2739  007F04  0E00               	addwfc	((c:___flmul@prod+1)),c
  2740  007F06  2229               	addwfc	((c:___flmul@prod+2)),c
  2741  007F08  222A               	addwfc	((c:___flmul@prod+3)),c
  2742  007F0A  222B               	line	176
  2743                           	
  2744                           l2588:
  2745  007F0C                     	
  2746                           	btfss	((c:___flmul@prod+3)),c,(24)&7
  2747  007F0C  A02B               	goto	u2261
  2748  007F0E  EF8B  F03F         	goto	u2260
  2749  007F12  EF8D  F03F         u2261:
  2750  007F16                     	goto	l2594
  2751  007F16  EFA8  F03F         u2260:
  2752  007F1A                     	line	177
  2753                           	
  2754                           l2590:
  2755  007F1A                     	movff	(c:___flmul@prod),??___flmul+0+0
  2756  007F1A  C028  F01D         	movff	(c:___flmul@prod+1),??___flmul+0+0+1
  2757  007F1E  C029  F01E         	movff	(c:___flmul@prod+2),??___flmul+0+0+2
  2758  007F22  C02A  F01F         	movff	(c:___flmul@prod+3),??___flmul+0+0+3
  2759  007F26  C02B  F020         	rlcf	(??___flmul+0+3),c,w
  2760  007F2A  3420               	rrcf	(??___flmul+0+3),c
  2761  007F2C  3220               	rrcf	(??___flmul+0+2),c
  2762  007F2E  321F               	rrcf	(??___flmul+0+1),c
  2763  007F30  321E               	rrcf	(??___flmul+0+0),c
  2764  007F32  321D               	movff	??___flmul+0+0,(c:___flmul@prod)
  2765  007F34  C01D  F028         	movff	??___flmul+0+1,(c:___flmul@prod+1)
  2766  007F38  C01E  F029         	movff	??___flmul+0+2,(c:___flmul@prod+2)
  2767  007F3C  C01F  F02A         	movff	??___flmul+0+3,(c:___flmul@prod+3)
  2768  007F40  C020  F02B         	line	178
  2769                           	
  2770                           l2592:
  2771  007F44                     	infsnz	((c:___flmul@temp)),c
  2772  007F44  4A2C               	incf	((c:___flmul@temp+1)),c
  2773  007F46  2A2D               	goto	l2594
  2774  007F48  EFA8  F03F         	line	179
  2775                           	
  2776                           l911:
  2777  007F4C                     	goto	l2594
  2778  007F4C  EFA8  F03F         	line	180
  2779                           	
  2780                           l910:
  2781  007F50                     	line	183
  2782                           	
  2783                           l2594:
  2784  007F50                     	btfsc	((c:___flmul@temp+1)),c,7
  2785  007F50  BE2D               	goto	u2271
  2786  007F52  EFB3  F03F         	movf	((c:___flmul@temp+1)),c,w
  2787  007F56  502D               	bnz	u2270
  2788  007F58  E108               	incf	((c:___flmul@temp)),c,w
  2789  007F5A  282C               	btfss	status,0
  2790  007F5C  A0D8               	goto	u2271
  2791  007F5E  EFB3  F03F         	goto	u2270
  2792  007F62  EFB5  F03F         
  2793                           u2271:
  2794  007F66                     	goto	l2598
  2795  007F66  EFBF  F03F         u2270:
  2796  007F6A                     	line	184
  2797                           	
  2798                           l2596:
  2799  007F6A                     	movlw	low(07F800000h)
  2800  007F6A  0E00               	movwf	((c:___flmul@prod)),c
  2801  007F6C  6E28               	movlw	high(07F800000h)
  2802  007F6E  0E00               	movwf	((c:___flmul@prod+1)),c
  2803  007F70  6E29               	movlw	low highword(07F800000h)
  2804  007F72  0E80               	movwf	((c:___flmul@prod+2)),c
  2805  007F74  6E2A               	movlw	high highword(07F800000h)
  2806  007F76  0E7F               	movwf	((c:___flmul@prod+3)),c
  2807  007F78  6E2B               	line	185
  2808                           	goto	l2610
  2809  007F7A  EFF3  F03F         	line	187
  2810                           	
  2811                           l912:
  2812  007F7E                     	
  2813                           l2598:
  2814  007F7E                     	btfsc	((c:___flmul@temp+1)),c,7
  2815  007F7E  BE2D               	goto	u2280
  2816  007F80  EFCC  F03F         	movf	((c:___flmul@temp+1)),c,w
  2817  007F84  502D               	bnz	u2281
  2818  007F86  E106               	decf	((c:___flmul@temp)),c,w
  2819  007F88  042C               	btfsc	status,0
  2820  007F8A  B0D8               	goto	u2281
  2821  007F8C  EFCA  F03F         	goto	u2280
  2822  007F90  EFCC  F03F         
  2823                           u2281:
  2824  007F94                     	goto	l914
  2825  007F94  EFD8  F03F         u2280:
  2826  007F98                     	line	188
  2827                           	
  2828                           l2600:
  2829  007F98                     	movlw	low(0)
  2830  007F98  0E00               	movwf	((c:___flmul@prod)),c
  2831  007F9A  6E28               	movlw	high(0)
  2832  007F9C  0E00               	movwf	((c:___flmul@prod+1)),c
  2833  007F9E  6E29               	movlw	low highword(0)
  2834  007FA0  0E00               	movwf	((c:___flmul@prod+2)),c
  2835  007FA2  6E2A               	movlw	high highword(0)
  2836  007FA4  0E00               	movwf	((c:___flmul@prod+3)),c
  2837  007FA6  6E2B               	line	190
  2838                           	movlw	low(0)
  2839  007FA8  0E00               	movwf	((c:___flmul@sign)),c
  2840  007FAA  6E21               	line	191
  2841                           	goto	l2610
  2842  007FAC  EFF3  F03F         	line	192
  2843                           	
  2844                           l914:
  2845  007FB0                     	line	194
  2846                           	movff	(c:___flmul@temp),(c:___flmul@bexp)
  2847  007FB0  C02C  F027         	line	195
  2848                           	
  2849                           l2602:
  2850  007FB4                     	movlw	0FFh
  2851  007FB4  0EFF               	andwf	((c:___flmul@prod)),c
  2852  007FB6  1628               	movlw	0FFh
  2853  007FB8  0EFF               	andwf	((c:___flmul@prod+1)),c
  2854  007FBA  1629               	movlw	07Fh
  2855  007FBC  0E7F               	andwf	((c:___flmul@prod+2)),c
  2856  007FBE  162A               	movlw	0
  2857  007FC0  0E00               	andwf	((c:___flmul@prod+3)),c
  2858  007FC2  162B               	line	196
  2859                           	
  2860                           l2604:
  2861  007FC4                     	
  2862                           	btfss	((c:___flmul@bexp)),c,(0)&7
  2863  007FC4  A027               	goto	u2291
  2864  007FC6  EFE7  F03F         	goto	u2290
  2865  007FCA  EFE9  F03F         u2291:
  2866  007FCE                     	goto	l2608
  2867  007FCE  EFEC  F03F         u2290:
  2868  007FD2                     	line	197
  2869                           	
  2870                           l2606:
  2871  007FD2                     	bsf	(0+(7/8)+0+((c:___flmul@prod)+02h)),c,(7)&7
  2872  007FD2  8E2A               	goto	l2608
  2873  007FD4  EFEC  F03F         	line	198
  2874                           	
  2875                           l916:
  2876  007FD8                     	line	199
  2877                           	
  2878                           l2608:
  2879  007FD8                     	bcf	status,0
  2880  007FD8  90D8               	rrcf	((c:___flmul@bexp)),c,w
  2881  007FDA  3027               	movwf	(0+((c:___flmul@prod)+03h)),c
  2882  007FDC  6E2B               	goto	l2610
  2883  007FDE  EFF3  F03F         	line	200
  2884                           	
  2885                           l915:
  2886  007FE2                     	goto	l2610
  2887  007FE2  EFF3  F03F         	
  2888                           l913:
  2889  007FE6                     	line	201
  2890                           	
  2891                           l2610:
  2892  007FE6                     	movf	((c:___flmul@sign)),c,w
  2893  007FE6  5021               	iorwf	(0+((c:___flmul@prod)+03h)),c
  2894  007FE8  122B               	line	203
  2895                           	
  2896                           l2612:
  2897  007FEA                     	movff	(c:___flmul@prod),(c:?___flmul)
  2898  007FEA  C028  F015         	movff	(c:___flmul@prod+1),(c:?___flmul+1)
  2899  007FEE  C029  F016         	movff	(c:___flmul@prod+2),(c:?___flmul+2)
  2900  007FF2  C02A  F017         	movff	(c:___flmul@prod+3),(c:?___flmul+3)
  2901  007FF6  C02B  F018         	goto	l901
  2902  007FFA  EFFF  F03F         	
  2903                           l2614:
  2904  007FFE                     	line	205
  2905                           	
  2906                           l901:
  2907  007FFE                     	return	;funcret
  2908  007FFE  0012               	opt stack 0
  2909                           GLOBAL	__end_of___flmul
  2910                           	__end_of___flmul:
  2911  008000                     	signat	___flmul,8316
  2912                           	global	_So
  2913                           
  2914 ;; *************** function _So *****************
  2915 ;; Defined at:
  2916 ;;		line 168 in file "motor2.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  n               2    4[COMRAM] int 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2930 ;;      Params:         2       0       0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0
  2933 ;;      Totals:         2       0       0       0       0       0       0
  2934 ;;Total ram usage:        2 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    1
  2937 ;; This function calls:
  2938 ;;		_PWM1_Duty
  2939 ;;		_PWM1_Init
  2940 ;; This function is called by:
  2941 ;;		_main
  2942 ;;		_small_bee
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           psect	text5,class=CODE,space=0,reloc=2,group=0
  2946                           	file	"motor2.c"
  2947                           	line	168
  2948                           global __ptext5
  2949                           __ptext5:
  2950  0075B2                     psect	text5
  2951                           	file	"motor2.c"
  2952                           	line	168
  2953                           	global	__size_of_So
  2954                           	__size_of_So	equ	__end_of_So-_So
  2955  0000                     	
  2956                           _So:
  2957  0075B2                     ;incstack = 0
  2958                           	opt	stack 29
  2959                           	line	171
  2960                           	
  2961                           l2424:
  2962  0075B2                     ;motor2.c: 168:    if(n == 1){;motor2.c: 169:         PWM1_Init(250);;motor2.c: 171:    
                                 }
  2963                           		decf	((c:So@n)),c,w
  2964  0075B2  0405               iorwf	((c:So@n+1)),c,w
  2965  0075B4  1006               	btfss	status,2
  2966  0075B6  A4D8               	goto	u2021
  2967  0075B8  EFE0  F03A         	goto	u2020
  2968  0075BC  EFE2  F03A         
  2969                           u2021:
  2970  0075C0                     	goto	l2430
  2971  0075C0  EFF4  F03A         u2020:
  2972  0075C4                     	line	172
  2973                           	
  2974                           l2426:
  2975  0075C4                     ;motor2.c: 172:    else if(n == 2){
  2976                           	movlw	low(0FAh)
  2977  0075C4  0EFA               	movwf	((c:PWM1_Init@setDuty)),c
  2978  0075C6  6E01               	movlw	high(0FAh)
  2979  0075C8  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  2980  0075CA  6E02               	movlw	low highword(0FAh)
  2981  0075CC  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  2982  0075CE  6E03               	movlw	high highword(0FAh)
  2983  0075D0  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  2984  0075D2  6E04               	call	_PWM1_Init	;wreg free
  2985  0075D4  EC54  F038         	line	173
  2986                           	
  2987                           l2428:
  2988  0075D8                     ;motor2.c: 173:         PWM1_Init(200);
  2989                           	movlw	high(0FAh)
  2990  0075D8  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  2991  0075DA  6E02               	movlw	low(0FAh)
  2992  0075DC  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  2993  0075DE  6E01               	call	_PWM1_Duty	;wreg free
  2994  0075E0  EC8D  F038         	line	174
  2995                           ;motor2.c: 174:         PWM1_Duty(250);
  2996                           	goto	l115
  2997  0075E4  EF30  F03B         	line	175
  2998                           ;motor2.c: 175:    }
  2999                           	
  3000                           l110:
  3001  0075E8                     	
  3002                           l2430:
  3003  0075E8                     		movlw	2
  3004  0075E8  0E02               	xorwf	((c:So@n)),c,w
  3005  0075EA  1805               iorwf	((c:So@n+1)),c,w
  3006  0075EC  1006               	btfss	status,2
  3007  0075EE  A4D8               	goto	u2031
  3008  0075F0  EFFC  F03A         	goto	u2030
  3009  0075F4  EFFE  F03A         
  3010                           u2031:
  3011  0075F8                     	goto	l2436
  3012  0075F8  EF10  F03B         u2030:
  3013  0075FC                     	line	176
  3014                           	
  3015                           l2432:
  3016  0075FC                     ;motor2.c: 176:    else if(n == 3){
  3017                           	movlw	low(0C8h)
  3018  0075FC  0EC8               	movwf	((c:PWM1_Init@setDuty)),c
  3019  0075FE  6E01               	movlw	high(0C8h)
  3020  007600  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3021  007602  6E02               	movlw	low highword(0C8h)
  3022  007604  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3023  007606  6E03               	movlw	high highword(0C8h)
  3024  007608  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3025  00760A  6E04               	call	_PWM1_Init	;wreg free
  3026  00760C  EC54  F038         	line	177
  3027                           	
  3028                           l2434:
  3029  007610                     ;motor2.c: 177:         PWM1_Init(150);
  3030                           	movlw	high(0FAh)
  3031  007610  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3032  007612  6E02               	movlw	low(0FAh)
  3033  007614  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3034  007616  6E01               	call	_PWM1_Duty	;wreg free
  3035  007618  EC8D  F038         	line	178
  3036                           ;motor2.c: 178:         PWM1_Duty(250);
  3037                           	goto	l115
  3038  00761C  EF30  F03B         	line	179
  3039                           ;motor2.c: 179:    }
  3040                           	
  3041                           l112:
  3042  007620                     	
  3043                           l2436:
  3044  007620                     		movlw	3
  3045  007620  0E03               	xorwf	((c:So@n)),c,w
  3046  007622  1805               iorwf	((c:So@n+1)),c,w
  3047  007624  1006               	btfss	status,2
  3048  007626  A4D8               	goto	u2041
  3049  007628  EF18  F03B         	goto	u2040
  3050  00762C  EF1A  F03B         
  3051                           u2041:
  3052  007630                     	goto	l115
  3053  007630  EF30  F03B         u2040:
  3054  007634                     	line	180
  3055                           	
  3056                           l2438:
  3057  007634                     ;motor2.c: 180: }
  3058                           	movlw	low(096h)
  3059  007634  0E96               	movwf	((c:PWM1_Init@setDuty)),c
  3060  007636  6E01               	movlw	high(096h)
  3061  007638  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3062  00763A  6E02               	movlw	low highword(096h)
  3063  00763C  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3064  00763E  6E03               	movlw	high highword(096h)
  3065  007640  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3066  007642  6E04               	call	_PWM1_Init	;wreg free
  3067  007644  EC54  F038         	line	181
  3068                           	
  3069                           l2440:
  3070  007648                     ;motor2.c: 181: 
  3071                           	movlw	high(0FAh)
  3072  007648  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3073  00764A  6E02               	movlw	low(0FAh)
  3074  00764C  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3075  00764E  6E01               	call	_PWM1_Duty	;wreg free
  3076  007650  EC8D  F038         	goto	l115
  3077  007654  EF30  F03B         	line	182
  3078                           ;motor2.c: 182: void Si(int n)
  3079                           	
  3080                           l114:
  3081  007658                     	goto	l115
  3082  007658  EF30  F03B         	
  3083                           l113:
  3084  00765C                     	goto	l115
  3085  00765C  EF30  F03B         	
  3086                           l111:
  3087  007660                     	line	183
  3088                           	
  3089                           l115:
  3090  007660                     	return	;funcret
  3091  007660  0012               	opt stack 0
  3092                           GLOBAL	__end_of_So
  3093                           	__end_of_So:
  3094  007662                     	signat	_So,4217
  3095                           	global	_Si
  3096                           
  3097 ;; *************** function _Si *****************
  3098 ;; Defined at:
  3099 ;;		line 201 in file "motor2.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  n               2    4[COMRAM] int 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;		None
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3113 ;;      Params:         2       0       0       0       0       0       0
  3114 ;;      Locals:         0       0       0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0       0       0
  3116 ;;      Totals:         2       0       0       0       0       0       0
  3117 ;;Total ram usage:        2 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    1
  3120 ;; This function calls:
  3121 ;;		_PWM1_Duty
  3122 ;;		_PWM1_Init
  3123 ;; This function is called by:
  3124 ;;		_main
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           psect	text6,class=CODE,space=0,reloc=2,group=0
  3128                           	line	201
  3129                           global __ptext6
  3130                           __ptext6:
  3131  007502                     psect	text6
  3132                           	file	"motor2.c"
  3133                           	line	201
  3134                           	global	__size_of_Si
  3135                           	__size_of_Si	equ	__end_of_Si-_Si
  3136  0000                     	
  3137                           _Si:
  3138  007502                     ;incstack = 0
  3139                           	opt	stack 29
  3140                           	line	204
  3141                           	
  3142                           l2460:
  3143  007502                     ;motor2.c: 201: };motor2.c: 202: void delay();motor2.c: 204:     int i;
  3144                           		decf	((c:Si@n)),c,w
  3145  007502  0405               iorwf	((c:Si@n+1)),c,w
  3146  007504  1006               	btfss	status,2
  3147  007506  A4D8               	goto	u2081
  3148  007508  EF88  F03A         	goto	u2080
  3149  00750C  EF8A  F03A         
  3150                           u2081:
  3151  007510                     	goto	l2466
  3152  007510  EF9C  F03A         u2080:
  3153  007514                     	line	205
  3154                           	
  3155                           l2462:
  3156  007514                     ;motor2.c: 205:     for(i = 0; i < 5000; i++)
  3157                           	movlw	low(0FAh)
  3158  007514  0EFA               	movwf	((c:PWM1_Init@setDuty)),c
  3159  007516  6E01               	movlw	high(0FAh)
  3160  007518  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3161  00751A  6E02               	movlw	low highword(0FAh)
  3162  00751C  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3163  00751E  6E03               	movlw	high highword(0FAh)
  3164  007520  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3165  007522  6E04               	call	_PWM1_Init	;wreg free
  3166  007524  EC54  F038         	line	206
  3167                           	
  3168                           l2464:
  3169  007528                     ;motor2.c: 206:     {
  3170                           	movlw	high(0FAh)
  3171  007528  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3172  00752A  6E02               	movlw	low(0FAh)
  3173  00752C  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3174  00752E  6E01               	call	_PWM1_Duty	;wreg free
  3175  007530  EC8D  F038         	line	207
  3176                           ;motor2.c: 207:         if( RD1 == 0 || RD2 == 0 || RD3 == 0 || RC3 == 0 )
  3177                           	goto	l131
  3178  007534  EFD8  F03A         	line	208
  3179                           ;motor2.c: 208:             flag = 1;
  3180                           	
  3181                           l126:
  3182  007538                     	
  3183                           l2466:
  3184  007538                     		movlw	2
  3185  007538  0E02               	xorwf	((c:Si@n)),c,w
  3186  00753A  1805               iorwf	((c:Si@n+1)),c,w
  3187  00753C  1006               	btfss	status,2
  3188  00753E  A4D8               	goto	u2091
  3189  007540  EFA4  F03A         	goto	u2090
  3190  007544  EFA6  F03A         
  3191                           u2091:
  3192  007548                     	goto	l2472
  3193  007548  EFB8  F03A         u2090:
  3194  00754C                     	line	209
  3195                           	
  3196                           l2468:
  3197  00754C                     ;motor2.c: 209:     }
  3198                           	movlw	low(0C8h)
  3199  00754C  0EC8               	movwf	((c:PWM1_Init@setDuty)),c
  3200  00754E  6E01               	movlw	high(0C8h)
  3201  007550  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3202  007552  6E02               	movlw	low highword(0C8h)
  3203  007554  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3204  007556  6E03               	movlw	high highword(0C8h)
  3205  007558  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3206  00755A  6E04               	call	_PWM1_Init	;wreg free
  3207  00755C  EC54  F038         	line	210
  3208                           	
  3209                           l2470:
  3210  007560                     ;motor2.c: 210: }
  3211                           	movlw	high(0FAh)
  3212  007560  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3213  007562  6E02               	movlw	low(0FAh)
  3214  007564  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3215  007566  6E01               	call	_PWM1_Duty	;wreg free
  3216  007568  EC8D  F038         	line	211
  3217                           ;motor2.c: 211: 
  3218                           	goto	l131
  3219  00756C  EFD8  F03A         	line	212
  3220                           ;motor2.c: 212: void small_bee()
  3221                           	
  3222                           l128:
  3223  007570                     	
  3224                           l2472:
  3225  007570                     		movlw	3
  3226  007570  0E03               	xorwf	((c:Si@n)),c,w
  3227  007572  1805               iorwf	((c:Si@n+1)),c,w
  3228  007574  1006               	btfss	status,2
  3229  007576  A4D8               	goto	u2101
  3230  007578  EFC0  F03A         	goto	u2100
  3231  00757C  EFC2  F03A         
  3232                           u2101:
  3233  007580                     	goto	l131
  3234  007580  EFD8  F03A         u2100:
  3235  007584                     	line	213
  3236                           	
  3237                           l2474:
  3238  007584                     ;motor2.c: 213: {
  3239                           	movlw	low(096h)
  3240  007584  0E96               	movwf	((c:PWM1_Init@setDuty)),c
  3241  007586  6E01               	movlw	high(096h)
  3242  007588  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3243  00758A  6E02               	movlw	low highword(096h)
  3244  00758C  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3245  00758E  6E03               	movlw	high highword(096h)
  3246  007590  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3247  007592  6E04               	call	_PWM1_Init	;wreg free
  3248  007594  EC54  F038         	line	214
  3249                           	
  3250                           l2476:
  3251  007598                     ;motor2.c: 214:     So(n); delay();if(flag == 1){flag = 0;return;}
  3252                           	movlw	high(0FAh)
  3253  007598  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3254  00759A  6E02               	movlw	low(0FAh)
  3255  00759C  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3256  00759E  6E01               	call	_PWM1_Duty	;wreg free
  3257  0075A0  EC8D  F038         	goto	l131
  3258  0075A4  EFD8  F03A         	line	215
  3259                           ;motor2.c: 215:     Quiet(); delay();if(flag == 1){flag = 0;return;}
  3260                           	
  3261                           l130:
  3262  0075A8                     	goto	l131
  3263  0075A8  EFD8  F03A         	
  3264                           l129:
  3265  0075AC                     	goto	l131
  3266  0075AC  EFD8  F03A         	
  3267                           l127:
  3268  0075B0                     	line	216
  3269                           	
  3270                           l131:
  3271  0075B0                     	return	;funcret
  3272  0075B0  0012               	opt stack 0
  3273                           GLOBAL	__end_of_Si
  3274                           	__end_of_Si:
  3275  0075B2                     	signat	_Si,4217
  3276                           	global	_Re
  3277                           
  3278 ;; *************** function _Re *****************
  3279 ;; Defined at:
  3280 ;;		line 120 in file "motor2.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  n               2    4[COMRAM] int 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3294 ;;      Params:         2       0       0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0
  3297 ;;      Totals:         2       0       0       0       0       0       0
  3298 ;;Total ram usage:        2 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    1
  3301 ;; This function calls:
  3302 ;;		_PWM1_Duty
  3303 ;;		_PWM1_Init
  3304 ;; This function is called by:
  3305 ;;		_main
  3306 ;;		_small_bee
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           psect	text7,class=CODE,space=0,reloc=2,group=0
  3310                           	line	120
  3311                           global __ptext7
  3312                           __ptext7:
  3313  007452                     psect	text7
  3314                           	file	"motor2.c"
  3315                           	line	120
  3316                           	global	__size_of_Re
  3317                           	__size_of_Re	equ	__end_of_Re-_Re
  3318  0000                     	
  3319                           _Re:
  3320  007452                     ;incstack = 0
  3321                           	opt	stack 29
  3322                           	line	123
  3323                           	
  3324                           l2370:
  3325  007452                     ;motor2.c: 120:    if(n == 1){;motor2.c: 121:         PWM1_Init(175);;motor2.c: 123:    
                                 }
  3326                           		decf	((c:Re@n)),c,w
  3327  007452  0405               iorwf	((c:Re@n+1)),c,w
  3328  007454  1006               	btfss	status,2
  3329  007456  A4D8               	goto	u1931
  3330  007458  EF30  F03A         	goto	u1930
  3331  00745C  EF32  F03A         
  3332                           u1931:
  3333  007460                     	goto	l2376
  3334  007460  EF44  F03A         u1930:
  3335  007464                     	line	124
  3336                           	
  3337                           l2372:
  3338  007464                     ;motor2.c: 124:    else if(n == 2){
  3339                           	movlw	low(0C7h)
  3340  007464  0EC7               	movwf	((c:PWM1_Init@setDuty)),c
  3341  007466  6E01               	movlw	high(0C7h)
  3342  007468  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3343  00746A  6E02               	movlw	low highword(0C7h)
  3344  00746C  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3345  00746E  6E03               	movlw	high highword(0C7h)
  3346  007470  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3347  007472  6E04               	call	_PWM1_Init	;wreg free
  3348  007474  EC54  F038         	line	125
  3349                           	
  3350                           l2374:
  3351  007478                     ;motor2.c: 125:         PWM1_Init(165);
  3352                           	movlw	high(0FAh)
  3353  007478  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3354  00747A  6E02               	movlw	low(0FAh)
  3355  00747C  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3356  00747E  6E01               	call	_PWM1_Duty	;wreg free
  3357  007480  EC8D  F038         	line	126
  3358                           ;motor2.c: 126:         PWM1_Duty(250);
  3359                           	goto	l91
  3360  007484  EF80  F03A         	line	127
  3361                           ;motor2.c: 127:    }
  3362                           	
  3363                           l86:
  3364  007488                     	
  3365                           l2376:
  3366  007488                     		movlw	2
  3367  007488  0E02               	xorwf	((c:Re@n)),c,w
  3368  00748A  1805               iorwf	((c:Re@n+1)),c,w
  3369  00748C  1006               	btfss	status,2
  3370  00748E  A4D8               	goto	u1941
  3371  007490  EF4C  F03A         	goto	u1940
  3372  007494  EF4E  F03A         
  3373                           u1941:
  3374  007498                     	goto	l2382
  3375  007498  EF60  F03A         u1940:
  3376  00749C                     	line	128
  3377                           	
  3378                           l2378:
  3379  00749C                     ;motor2.c: 128:    else if(n == 3){
  3380                           	movlw	low(0AFh)
  3381  00749C  0EAF               	movwf	((c:PWM1_Init@setDuty)),c
  3382  00749E  6E01               	movlw	high(0AFh)
  3383  0074A0  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3384  0074A2  6E02               	movlw	low highword(0AFh)
  3385  0074A4  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3386  0074A6  6E03               	movlw	high highword(0AFh)
  3387  0074A8  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3388  0074AA  6E04               	call	_PWM1_Init	;wreg free
  3389  0074AC  EC54  F038         	line	129
  3390                           	
  3391                           l2380:
  3392  0074B0                     ;motor2.c: 129:         PWM1_Init(145);
  3393                           	movlw	high(0FAh)
  3394  0074B0  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3395  0074B2  6E02               	movlw	low(0FAh)
  3396  0074B4  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3397  0074B6  6E01               	call	_PWM1_Duty	;wreg free
  3398  0074B8  EC8D  F038         	line	130
  3399                           ;motor2.c: 130:         PWM1_Duty(250);
  3400                           	goto	l91
  3401  0074BC  EF80  F03A         	line	131
  3402                           ;motor2.c: 131:    }
  3403                           	
  3404                           l88:
  3405  0074C0                     	
  3406                           l2382:
  3407  0074C0                     		movlw	3
  3408  0074C0  0E03               	xorwf	((c:Re@n)),c,w
  3409  0074C2  1805               iorwf	((c:Re@n+1)),c,w
  3410  0074C4  1006               	btfss	status,2
  3411  0074C6  A4D8               	goto	u1951
  3412  0074C8  EF68  F03A         	goto	u1950
  3413  0074CC  EF6A  F03A         
  3414                           u1951:
  3415  0074D0                     	goto	l91
  3416  0074D0  EF80  F03A         u1950:
  3417  0074D4                     	line	132
  3418                           	
  3419                           l2384:
  3420  0074D4                     ;motor2.c: 132: }
  3421                           	movlw	low(0A5h)
  3422  0074D4  0EA5               	movwf	((c:PWM1_Init@setDuty)),c
  3423  0074D6  6E01               	movlw	high(0A5h)
  3424  0074D8  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3425  0074DA  6E02               	movlw	low highword(0A5h)
  3426  0074DC  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3427  0074DE  6E03               	movlw	high highword(0A5h)
  3428  0074E0  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3429  0074E2  6E04               	call	_PWM1_Init	;wreg free
  3430  0074E4  EC54  F038         	line	133
  3431                           	
  3432                           l2386:
  3433  0074E8                     ;motor2.c: 133: void Fa(int n)
  3434                           	movlw	high(0FAh)
  3435  0074E8  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3436  0074EA  6E02               	movlw	low(0FAh)
  3437  0074EC  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3438  0074EE  6E01               	call	_PWM1_Duty	;wreg free
  3439  0074F0  EC8D  F038         	goto	l91
  3440  0074F4  EF80  F03A         	line	134
  3441                           ;motor2.c: 134: {
  3442                           	
  3443                           l90:
  3444  0074F8                     	goto	l91
  3445  0074F8  EF80  F03A         	
  3446                           l89:
  3447  0074FC                     	goto	l91
  3448  0074FC  EF80  F03A         	
  3449                           l87:
  3450  007500                     	line	135
  3451                           	
  3452                           l91:
  3453  007500                     	return	;funcret
  3454  007500  0012               	opt stack 0
  3455                           GLOBAL	__end_of_Re
  3456                           	__end_of_Re:
  3457  007502                     	signat	_Re,4217
  3458                           	global	_PWM1_Start
  3459                           
  3460 ;; *************** function _PWM1_Start *****************
  3461 ;; Defined at:
  3462 ;;		line 77 in file "motor2.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;		None
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		None
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3476 ;;      Params:         0       0       0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0
  3479 ;;      Totals:         0       0       0       0       0       0       0
  3480 ;;Total ram usage:        0 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_main
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           psect	text8,class=CODE,space=0,reloc=2,group=0
  3489                           	line	77
  3490                           global __ptext8
  3491                           __ptext8:
  3492  0070D0                     psect	text8
  3493                           	file	"motor2.c"
  3494                           	line	77
  3495                           	global	__size_of_PWM1_Start
  3496                           	__size_of_PWM1_Start	equ	__end_of_PWM1_Start-_PWM1_Start
  3497  0000                     	
  3498                           _PWM1_Start:
  3499  0070D0                     ;incstack = 0
  3500                           	opt	stack 30
  3501                           	line	80
  3502                           	
  3503                           l982:
  3504  0070D0                     ;motor2.c: 80:         PWM1CONbits.PRSEN = 1;
  3505                           	bcf	((c:4029)),c,0	;volatile
  3506  0070D0  90BD               	line	81
  3507                           ;motor2.c: 81: 
  3508                           	bcf	((c:4029)),c,1	;volatile
  3509  0070D2  92BD               	line	82
  3510                           ;motor2.c: 82: }
  3511                           	bsf	((c:4029)),c,2	;volatile
  3512  0070D4  84BD               	line	83
  3513                           ;motor2.c: 83: 
  3514                           	bsf	((c:4029)),c,3	;volatile
  3515  0070D6  86BD               	line	85
  3516                           ;motor2.c: 85: {
  3517                           	bsf	((c:4042)),c,2	;volatile
  3518  0070D8  84CA               	line	87
  3519                           ;motor2.c: 87: 
  3520                           	bcf	((c:4051)),c,4	;volatile
  3521  0070DA  98D3               	line	88
  3522                           ;motor2.c: 88:    if(n == 1){
  3523                           	bsf	((c:4051)),c,5	;volatile
  3524  0070DC  8AD3               	line	89
  3525                           ;motor2.c: 89:         PWM1_Init(224);
  3526                           	bsf	((c:4051)),c,6	;volatile
  3527  0070DE  8CD3               	line	91
  3528                           ;motor2.c: 91:    }
  3529                           	bcf	((c:3988)),c,2	;volatile
  3530  0070E0  9494               	line	92
  3531                           ;motor2.c: 92:    else if(n == 2){
  3532                           	bcf	((c:3989)),c,7	;volatile
  3533  0070E2  9E95               	line	93
  3534                           ;motor2.c: 93:         PWM1_Init(199);
  3535                           	bcf	((c:3989)),c,6	;volatile
  3536  0070E4  9C95               	line	94
  3537                           ;motor2.c: 94:         PWM1_Duty(250);
  3538                           	bcf	((c:3989)),c,5	;volatile
  3539  0070E6  9A95               	line	96
  3540                           ;motor2.c: 96:    else if(n == 3){
  3541                           	bcf	((c:4042)),c,0	;volatile
  3542  0070E8  90CA               	line	97
  3543                           ;motor2.c: 97:         PWM1_Init(175);
  3544                           	bsf	((c:4042)),c,1	;volatile
  3545  0070EA  82CA               	line	99
  3546                           ;motor2.c: 99:    }
  3547                           	bsf	((c:4023)),c,7	;volatile
  3548  0070EC  8EB7               	line	101
  3549                           	
  3550                           l75:
  3551  0070EE                     	return	;funcret
  3552  0070EE  0012               	opt stack 0
  3553                           GLOBAL	__end_of_PWM1_Start
  3554                           	__end_of_PWM1_Start:
  3555  0070F0                     	signat	_PWM1_Start,89
  3556                           	global	_Mi
  3557                           
  3558 ;; *************** function _Mi *****************
  3559 ;; Defined at:
  3560 ;;		line 136 in file "motor2.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  n               2    4[COMRAM] int 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;		None
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3574 ;;      Params:         2       0       0       0       0       0       0
  3575 ;;      Locals:         0       0       0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0
  3577 ;;      Totals:         2       0       0       0       0       0       0
  3578 ;;Total ram usage:        2 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    1
  3581 ;; This function calls:
  3582 ;;		_PWM1_Duty
  3583 ;;		_PWM1_Init
  3584 ;; This function is called by:
  3585 ;;		_main
  3586 ;;		_small_bee
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           psect	text9,class=CODE,space=0,reloc=2,group=0
  3590                           	line	136
  3591                           global __ptext9
  3592                           __ptext9:
  3593  0073A2                     psect	text9
  3594                           	file	"motor2.c"
  3595                           	line	136
  3596                           	global	__size_of_Mi
  3597                           	__size_of_Mi	equ	__end_of_Mi-_Mi
  3598  0000                     	
  3599                           _Mi:
  3600  0073A2                     ;incstack = 0
  3601                           	opt	stack 29
  3602                           	line	139
  3603                           	
  3604                           l2388:
  3605  0073A2                     ;motor2.c: 136:    if(n == 1){;motor2.c: 137:         PWM1_Init(165);;motor2.c: 139:    
                                 }
  3606                           		decf	((c:Mi@n)),c,w
  3607  0073A2  0405               iorwf	((c:Mi@n+1)),c,w
  3608  0073A4  1006               	btfss	status,2
  3609  0073A6  A4D8               	goto	u1961
  3610  0073A8  EFD8  F039         	goto	u1960
  3611  0073AC  EFDA  F039         
  3612                           u1961:
  3613  0073B0                     	goto	l2394
  3614  0073B0  EFEC  F039         u1960:
  3615  0073B4                     	line	140
  3616                           	
  3617                           l2390:
  3618  0073B4                     ;motor2.c: 140:    else if(n == 2){
  3619                           	movlw	low(0AFh)
  3620  0073B4  0EAF               	movwf	((c:PWM1_Init@setDuty)),c
  3621  0073B6  6E01               	movlw	high(0AFh)
  3622  0073B8  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3623  0073BA  6E02               	movlw	low highword(0AFh)
  3624  0073BC  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3625  0073BE  6E03               	movlw	high highword(0AFh)
  3626  0073C0  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3627  0073C2  6E04               	call	_PWM1_Init	;wreg free
  3628  0073C4  EC54  F038         	line	141
  3629                           	
  3630                           l2392:
  3631  0073C8                     ;motor2.c: 141:         PWM1_Init(145);
  3632                           	movlw	high(0FAh)
  3633  0073C8  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3634  0073CA  6E02               	movlw	low(0FAh)
  3635  0073CC  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3636  0073CE  6E01               	call	_PWM1_Duty	;wreg free
  3637  0073D0  EC8D  F038         	line	142
  3638                           ;motor2.c: 142:         PWM1_Duty(250);
  3639                           	goto	l99
  3640  0073D4  EF28  F03A         	line	143
  3641                           ;motor2.c: 143:    }
  3642                           	
  3643                           l94:
  3644  0073D8                     	
  3645                           l2394:
  3646  0073D8                     		movlw	2
  3647  0073D8  0E02               	xorwf	((c:Mi@n)),c,w
  3648  0073DA  1805               iorwf	((c:Mi@n+1)),c,w
  3649  0073DC  1006               	btfss	status,2
  3650  0073DE  A4D8               	goto	u1971
  3651  0073E0  EFF4  F039         	goto	u1970
  3652  0073E4  EFF6  F039         
  3653                           u1971:
  3654  0073E8                     	goto	l2400
  3655  0073E8  EF08  F03A         u1970:
  3656  0073EC                     	line	144
  3657                           	
  3658                           l2396:
  3659  0073EC                     ;motor2.c: 144:    else if(n == 3){
  3660                           	movlw	low(0A5h)
  3661  0073EC  0EA5               	movwf	((c:PWM1_Init@setDuty)),c
  3662  0073EE  6E01               	movlw	high(0A5h)
  3663  0073F0  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3664  0073F2  6E02               	movlw	low highword(0A5h)
  3665  0073F4  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3666  0073F6  6E03               	movlw	high highword(0A5h)
  3667  0073F8  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3668  0073FA  6E04               	call	_PWM1_Init	;wreg free
  3669  0073FC  EC54  F038         	line	145
  3670                           	
  3671                           l2398:
  3672  007400                     ;motor2.c: 145:         PWM1_Init(165);
  3673                           	movlw	high(0FAh)
  3674  007400  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3675  007402  6E02               	movlw	low(0FAh)
  3676  007404  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3677  007406  6E01               	call	_PWM1_Duty	;wreg free
  3678  007408  EC8D  F038         	line	146
  3679                           ;motor2.c: 146:         PWM1_Duty(250);
  3680                           	goto	l99
  3681  00740C  EF28  F03A         	line	147
  3682                           ;motor2.c: 147:    }
  3683                           	
  3684                           l96:
  3685  007410                     	
  3686                           l2400:
  3687  007410                     		movlw	3
  3688  007410  0E03               	xorwf	((c:Mi@n)),c,w
  3689  007412  1805               iorwf	((c:Mi@n+1)),c,w
  3690  007414  1006               	btfss	status,2
  3691  007416  A4D8               	goto	u1981
  3692  007418  EF10  F03A         	goto	u1980
  3693  00741C  EF12  F03A         
  3694                           u1981:
  3695  007420                     	goto	l99
  3696  007420  EF28  F03A         u1980:
  3697  007424                     	line	148
  3698                           	
  3699                           l2402:
  3700  007424                     ;motor2.c: 148: }
  3701                           	movlw	low(091h)
  3702  007424  0E91               	movwf	((c:PWM1_Init@setDuty)),c
  3703  007426  6E01               	movlw	high(091h)
  3704  007428  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3705  00742A  6E02               	movlw	low highword(091h)
  3706  00742C  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3707  00742E  6E03               	movlw	high highword(091h)
  3708  007430  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3709  007432  6E04               	call	_PWM1_Init	;wreg free
  3710  007434  EC54  F038         	line	149
  3711                           	
  3712                           l2404:
  3713  007438                     ;motor2.c: 149: void So(int n)
  3714                           	movlw	high(0FAh)
  3715  007438  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3716  00743A  6E02               	movlw	low(0FAh)
  3717  00743C  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3718  00743E  6E01               	call	_PWM1_Duty	;wreg free
  3719  007440  EC8D  F038         	goto	l99
  3720  007444  EF28  F03A         	line	150
  3721                           ;motor2.c: 150: {
  3722                           	
  3723                           l98:
  3724  007448                     	goto	l99
  3725  007448  EF28  F03A         	
  3726                           l97:
  3727  00744C                     	goto	l99
  3728  00744C  EF28  F03A         	
  3729                           l95:
  3730  007450                     	line	151
  3731                           	
  3732                           l99:
  3733  007450                     	return	;funcret
  3734  007450  0012               	opt stack 0
  3735                           GLOBAL	__end_of_Mi
  3736                           	__end_of_Mi:
  3737  007452                     	signat	_Mi,4217
  3738                           	global	_La
  3739                           
  3740 ;; *************** function _La *****************
  3741 ;; Defined at:
  3742 ;;		line 184 in file "motor2.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  n               2    4[COMRAM] int 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3756 ;;      Params:         2       0       0       0       0       0       0
  3757 ;;      Locals:         0       0       0       0       0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0
  3759 ;;      Totals:         2       0       0       0       0       0       0
  3760 ;;Total ram usage:        2 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    1
  3763 ;; This function calls:
  3764 ;;		_PWM1_Duty
  3765 ;;		_PWM1_Init
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           psect	text10,class=CODE,space=0,reloc=2,group=0
  3771                           	line	184
  3772                           global __ptext10
  3773                           __ptext10:
  3774  0072F2                     psect	text10
  3775                           	file	"motor2.c"
  3776                           	line	184
  3777                           	global	__size_of_La
  3778                           	__size_of_La	equ	__end_of_La-_La
  3779  0000                     	
  3780                           _La:
  3781  0072F2                     ;incstack = 0
  3782                           	opt	stack 29
  3783                           	line	187
  3784                           	
  3785                           l2442:
  3786  0072F2                     ;motor2.c: 184: ;motor2.c: 185:    if(n == 1){;motor2.c: 187:         PWM1_Duty(250);
  3787                           		decf	((c:La@n)),c,w
  3788  0072F2  0405               iorwf	((c:La@n+1)),c,w
  3789  0072F4  1006               	btfss	status,2
  3790  0072F6  A4D8               	goto	u2051
  3791  0072F8  EF80  F039         	goto	u2050
  3792  0072FC  EF82  F039         
  3793                           u2051:
  3794  007300                     	goto	l2448
  3795  007300  EF94  F039         u2050:
  3796  007304                     	line	188
  3797                           	
  3798                           l2444:
  3799  007304                     ;motor2.c: 188:    }
  3800                           	movlw	low(0FAh)
  3801  007304  0EFA               	movwf	((c:PWM1_Init@setDuty)),c
  3802  007306  6E01               	movlw	high(0FAh)
  3803  007308  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3804  00730A  6E02               	movlw	low highword(0FAh)
  3805  00730C  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3806  00730E  6E03               	movlw	high highword(0FAh)
  3807  007310  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3808  007312  6E04               	call	_PWM1_Init	;wreg free
  3809  007314  EC54  F038         	line	189
  3810                           	
  3811                           l2446:
  3812  007318                     ;motor2.c: 189:    else if(n == 2){
  3813                           	movlw	high(0FAh)
  3814  007318  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3815  00731A  6E02               	movlw	low(0FAh)
  3816  00731C  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3817  00731E  6E01               	call	_PWM1_Duty	;wreg free
  3818  007320  EC8D  F038         	line	190
  3819                           ;motor2.c: 190:         PWM1_Init(200);
  3820                           	goto	l123
  3821  007324  EFD0  F039         	line	191
  3822                           ;motor2.c: 191:         PWM1_Duty(250);
  3823                           	
  3824                           l118:
  3825  007328                     	
  3826                           l2448:
  3827  007328                     		movlw	2
  3828  007328  0E02               	xorwf	((c:La@n)),c,w
  3829  00732A  1805               iorwf	((c:La@n+1)),c,w
  3830  00732C  1006               	btfss	status,2
  3831  00732E  A4D8               	goto	u2061
  3832  007330  EF9C  F039         	goto	u2060
  3833  007334  EF9E  F039         
  3834                           u2061:
  3835  007338                     	goto	l2454
  3836  007338  EFB0  F039         u2060:
  3837  00733C                     	line	192
  3838                           	
  3839                           l2450:
  3840  00733C                     ;motor2.c: 192:    }
  3841                           	movlw	low(0C8h)
  3842  00733C  0EC8               	movwf	((c:PWM1_Init@setDuty)),c
  3843  00733E  6E01               	movlw	high(0C8h)
  3844  007340  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3845  007342  6E02               	movlw	low highword(0C8h)
  3846  007344  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3847  007346  6E03               	movlw	high highword(0C8h)
  3848  007348  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3849  00734A  6E04               	call	_PWM1_Init	;wreg free
  3850  00734C  EC54  F038         	line	193
  3851                           	
  3852                           l2452:
  3853  007350                     ;motor2.c: 193:    else if(n == 3){
  3854                           	movlw	high(0FAh)
  3855  007350  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3856  007352  6E02               	movlw	low(0FAh)
  3857  007354  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3858  007356  6E01               	call	_PWM1_Duty	;wreg free
  3859  007358  EC8D  F038         	line	194
  3860                           ;motor2.c: 194:         PWM1_Init(150);
  3861                           	goto	l123
  3862  00735C  EFD0  F039         	line	195
  3863                           ;motor2.c: 195:         PWM1_Duty(250);
  3864                           	
  3865                           l120:
  3866  007360                     	
  3867                           l2454:
  3868  007360                     		movlw	3
  3869  007360  0E03               	xorwf	((c:La@n)),c,w
  3870  007362  1805               iorwf	((c:La@n+1)),c,w
  3871  007364  1006               	btfss	status,2
  3872  007366  A4D8               	goto	u2071
  3873  007368  EFB8  F039         	goto	u2070
  3874  00736C  EFBA  F039         
  3875                           u2071:
  3876  007370                     	goto	l123
  3877  007370  EFD0  F039         u2070:
  3878  007374                     	line	196
  3879                           	
  3880                           l2456:
  3881  007374                     ;motor2.c: 196:    }
  3882                           	movlw	low(096h)
  3883  007374  0E96               	movwf	((c:PWM1_Init@setDuty)),c
  3884  007376  6E01               	movlw	high(096h)
  3885  007378  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3886  00737A  6E02               	movlw	low highword(096h)
  3887  00737C  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3888  00737E  6E03               	movlw	high highword(096h)
  3889  007380  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3890  007382  6E04               	call	_PWM1_Init	;wreg free
  3891  007384  EC54  F038         	line	197
  3892                           	
  3893                           l2458:
  3894  007388                     ;motor2.c: 197: }
  3895                           	movlw	high(0FAh)
  3896  007388  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3897  00738A  6E02               	movlw	low(0FAh)
  3898  00738C  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3899  00738E  6E01               	call	_PWM1_Duty	;wreg free
  3900  007390  EC8D  F038         	goto	l123
  3901  007394  EFD0  F039         	line	198
  3902                           ;motor2.c: 198: void Quiet()
  3903                           	
  3904                           l122:
  3905  007398                     	goto	l123
  3906  007398  EFD0  F039         	
  3907                           l121:
  3908  00739C                     	goto	l123
  3909  00739C  EFD0  F039         	
  3910                           l119:
  3911  0073A0                     	line	199
  3912                           	
  3913                           l123:
  3914  0073A0                     	return	;funcret
  3915  0073A0  0012               	opt stack 0
  3916                           GLOBAL	__end_of_La
  3917                           	__end_of_La:
  3918  0073A2                     	signat	_La,4217
  3919                           	global	_Fa
  3920                           
  3921 ;; *************** function _Fa *****************
  3922 ;; Defined at:
  3923 ;;		line 152 in file "motor2.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;  n               2    4[COMRAM] int 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, status,2, status,0, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3937 ;;      Params:         2       0       0       0       0       0       0
  3938 ;;      Locals:         0       0       0       0       0       0       0
  3939 ;;      Temps:          0       0       0       0       0       0       0
  3940 ;;      Totals:         2       0       0       0       0       0       0
  3941 ;;Total ram usage:        2 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    1
  3944 ;; This function calls:
  3945 ;;		_PWM1_Duty
  3946 ;;		_PWM1_Init
  3947 ;; This function is called by:
  3948 ;;		_main
  3949 ;;		_small_bee
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           psect	text11,class=CODE,space=0,reloc=2,group=0
  3953                           	line	152
  3954                           global __ptext11
  3955                           __ptext11:
  3956  007242                     psect	text11
  3957                           	file	"motor2.c"
  3958                           	line	152
  3959                           	global	__size_of_Fa
  3960                           	__size_of_Fa	equ	__end_of_Fa-_Fa
  3961  0000                     	
  3962                           _Fa:
  3963  007242                     ;incstack = 0
  3964                           	opt	stack 29
  3965                           	line	155
  3966                           	
  3967                           l2406:
  3968  007242                     ;motor2.c: 152:    if(n == 1){;motor2.c: 153:         PWM1_Init(250);;motor2.c: 155:    
                                 }
  3969                           		decf	((c:Fa@n)),c,w
  3970  007242  0405               iorwf	((c:Fa@n+1)),c,w
  3971  007244  1006               	btfss	status,2
  3972  007246  A4D8               	goto	u1991
  3973  007248  EF28  F039         	goto	u1990
  3974  00724C  EF2A  F039         
  3975                           u1991:
  3976  007250                     	goto	l2412
  3977  007250  EF3C  F039         u1990:
  3978  007254                     	line	156
  3979                           	
  3980                           l2408:
  3981  007254                     ;motor2.c: 156:    else if(n == 2){
  3982                           	movlw	low(0A5h)
  3983  007254  0EA5               	movwf	((c:PWM1_Init@setDuty)),c
  3984  007256  6E01               	movlw	high(0A5h)
  3985  007258  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  3986  00725A  6E02               	movlw	low highword(0A5h)
  3987  00725C  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  3988  00725E  6E03               	movlw	high highword(0A5h)
  3989  007260  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  3990  007262  6E04               	call	_PWM1_Init	;wreg free
  3991  007264  EC54  F038         	line	157
  3992                           	
  3993                           l2410:
  3994  007268                     ;motor2.c: 157:         PWM1_Init(200);
  3995                           	movlw	high(0FAh)
  3996  007268  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  3997  00726A  6E02               	movlw	low(0FAh)
  3998  00726C  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  3999  00726E  6E01               	call	_PWM1_Duty	;wreg free
  4000  007270  EC8D  F038         	line	158
  4001                           ;motor2.c: 158:         PWM1_Duty(250);
  4002                           	goto	l107
  4003  007274  EF78  F039         	line	159
  4004                           ;motor2.c: 159:    }
  4005                           	
  4006                           l102:
  4007  007278                     	
  4008                           l2412:
  4009  007278                     		movlw	2
  4010  007278  0E02               	xorwf	((c:Fa@n)),c,w
  4011  00727A  1805               iorwf	((c:Fa@n+1)),c,w
  4012  00727C  1006               	btfss	status,2
  4013  00727E  A4D8               	goto	u2001
  4014  007280  EF44  F039         	goto	u2000
  4015  007284  EF46  F039         
  4016                           u2001:
  4017  007288                     	goto	l2418
  4018  007288  EF58  F039         u2000:
  4019  00728C                     	line	160
  4020                           	
  4021                           l2414:
  4022  00728C                     ;motor2.c: 160:    else if(n == 3){
  4023                           	movlw	low(091h)
  4024  00728C  0E91               	movwf	((c:PWM1_Init@setDuty)),c
  4025  00728E  6E01               	movlw	high(091h)
  4026  007290  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  4027  007292  6E02               	movlw	low highword(091h)
  4028  007294  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  4029  007296  6E03               	movlw	high highword(091h)
  4030  007298  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  4031  00729A  6E04               	call	_PWM1_Init	;wreg free
  4032  00729C  EC54  F038         	line	161
  4033                           	
  4034                           l2416:
  4035  0072A0                     ;motor2.c: 161:         PWM1_Init(150);
  4036                           	movlw	high(0FAh)
  4037  0072A0  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  4038  0072A2  6E02               	movlw	low(0FAh)
  4039  0072A4  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  4040  0072A6  6E01               	call	_PWM1_Duty	;wreg free
  4041  0072A8  EC8D  F038         	line	162
  4042                           ;motor2.c: 162:         PWM1_Duty(250);
  4043                           	goto	l107
  4044  0072AC  EF78  F039         	line	163
  4045                           ;motor2.c: 163:    }
  4046                           	
  4047                           l104:
  4048  0072B0                     	
  4049                           l2418:
  4050  0072B0                     		movlw	3
  4051  0072B0  0E03               	xorwf	((c:Fa@n)),c,w
  4052  0072B2  1805               iorwf	((c:Fa@n+1)),c,w
  4053  0072B4  1006               	btfss	status,2
  4054  0072B6  A4D8               	goto	u2011
  4055  0072B8  EF60  F039         	goto	u2010
  4056  0072BC  EF62  F039         
  4057                           u2011:
  4058  0072C0                     	goto	l107
  4059  0072C0  EF78  F039         u2010:
  4060  0072C4                     	line	164
  4061                           	
  4062                           l2420:
  4063  0072C4                     ;motor2.c: 164: }
  4064                           	movlw	low(0A5h)
  4065  0072C4  0EA5               	movwf	((c:PWM1_Init@setDuty)),c
  4066  0072C6  6E01               	movlw	high(0A5h)
  4067  0072C8  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  4068  0072CA  6E02               	movlw	low highword(0A5h)
  4069  0072CC  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  4070  0072CE  6E03               	movlw	high highword(0A5h)
  4071  0072D0  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  4072  0072D2  6E04               	call	_PWM1_Init	;wreg free
  4073  0072D4  EC54  F038         	line	165
  4074                           	
  4075                           l2422:
  4076  0072D8                     ;motor2.c: 165: void La(int n)
  4077                           	movlw	high(0FAh)
  4078  0072D8  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  4079  0072DA  6E02               	movlw	low(0FAh)
  4080  0072DC  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  4081  0072DE  6E01               	call	_PWM1_Duty	;wreg free
  4082  0072E0  EC8D  F038         	goto	l107
  4083  0072E4  EF78  F039         	line	166
  4084                           ;motor2.c: 166: {
  4085                           	
  4086                           l106:
  4087  0072E8                     	goto	l107
  4088  0072E8  EF78  F039         	
  4089                           l105:
  4090  0072EC                     	goto	l107
  4091  0072EC  EF78  F039         	
  4092                           l103:
  4093  0072F0                     	line	167
  4094                           	
  4095                           l107:
  4096  0072F0                     	return	;funcret
  4097  0072F0  0012               	opt stack 0
  4098                           GLOBAL	__end_of_Fa
  4099                           	__end_of_Fa:
  4100  0072F2                     	signat	_Fa,4217
  4101                           	global	_Do
  4102                           
  4103 ;; *************** function _Do *****************
  4104 ;; Defined at:
  4105 ;;		line 103 in file "motor2.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  n               2    4[COMRAM] int 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4119 ;;      Params:         2       0       0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0
  4122 ;;      Totals:         2       0       0       0       0       0       0
  4123 ;;Total ram usage:        2 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    1
  4126 ;; This function calls:
  4127 ;;		_PWM1_Duty
  4128 ;;		_PWM1_Init
  4129 ;; This function is called by:
  4130 ;;		_main
  4131 ;;		_small_bee
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           psect	text12,class=CODE,space=0,reloc=2,group=0
  4135                           	line	103
  4136                           global __ptext12
  4137                           __ptext12:
  4138  007192                     psect	text12
  4139                           	file	"motor2.c"
  4140                           	line	103
  4141                           	global	__size_of_Do
  4142                           	__size_of_Do	equ	__end_of_Do-_Do
  4143  0000                     	
  4144                           _Do:
  4145  007192                     ;incstack = 0
  4146                           	opt	stack 29
  4147                           	line	107
  4148                           	
  4149                           l2352:
  4150  007192                     ;motor2.c: 103: ;motor2.c: 104:    if(n == 1){;motor2.c: 107:    }
  4151                           		decf	((c:Do@n)),c,w
  4152  007192  0405               iorwf	((c:Do@n+1)),c,w
  4153  007194  1006               	btfss	status,2
  4154  007196  A4D8               	goto	u1901
  4155  007198  EFD0  F038         	goto	u1900
  4156  00719C  EFD2  F038         
  4157                           u1901:
  4158  0071A0                     	goto	l2358
  4159  0071A0  EFE4  F038         u1900:
  4160  0071A4                     	line	108
  4161                           	
  4162                           l2354:
  4163  0071A4                     ;motor2.c: 108:    else if(n == 2){
  4164                           	movlw	low(0E0h)
  4165  0071A4  0EE0               	movwf	((c:PWM1_Init@setDuty)),c
  4166  0071A6  6E01               	movlw	high(0E0h)
  4167  0071A8  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  4168  0071AA  6E02               	movlw	low highword(0E0h)
  4169  0071AC  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  4170  0071AE  6E03               	movlw	high highword(0E0h)
  4171  0071B0  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  4172  0071B2  6E04               	call	_PWM1_Init	;wreg free
  4173  0071B4  EC54  F038         	line	109
  4174                           	
  4175                           l2356:
  4176  0071B8                     ;motor2.c: 109:         PWM1_Init(175);
  4177                           	movlw	high(0FAh)
  4178  0071B8  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  4179  0071BA  6E02               	movlw	low(0FAh)
  4180  0071BC  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  4181  0071BE  6E01               	call	_PWM1_Duty	;wreg free
  4182  0071C0  EC8D  F038         	line	110
  4183                           ;motor2.c: 110:         PWM1_Duty(250);
  4184                           	goto	l83
  4185  0071C4  EF20  F039         	line	111
  4186                           ;motor2.c: 111:    }
  4187                           	
  4188                           l78:
  4189  0071C8                     	
  4190                           l2358:
  4191  0071C8                     		movlw	2
  4192  0071C8  0E02               	xorwf	((c:Do@n)),c,w
  4193  0071CA  1805               iorwf	((c:Do@n+1)),c,w
  4194  0071CC  1006               	btfss	status,2
  4195  0071CE  A4D8               	goto	u1911
  4196  0071D0  EFEC  F038         	goto	u1910
  4197  0071D4  EFEE  F038         
  4198                           u1911:
  4199  0071D8                     	goto	l2364
  4200  0071D8  EF00  F039         u1910:
  4201  0071DC                     	line	112
  4202                           	
  4203                           l2360:
  4204  0071DC                     ;motor2.c: 112:    else if(n == 3){
  4205                           	movlw	low(0C7h)
  4206  0071DC  0EC7               	movwf	((c:PWM1_Init@setDuty)),c
  4207  0071DE  6E01               	movlw	high(0C7h)
  4208  0071E0  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  4209  0071E2  6E02               	movlw	low highword(0C7h)
  4210  0071E4  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  4211  0071E6  6E03               	movlw	high highword(0C7h)
  4212  0071E8  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  4213  0071EA  6E04               	call	_PWM1_Init	;wreg free
  4214  0071EC  EC54  F038         	line	113
  4215                           	
  4216                           l2362:
  4217  0071F0                     ;motor2.c: 113:         PWM1_Init(165);
  4218                           	movlw	high(0FAh)
  4219  0071F0  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  4220  0071F2  6E02               	movlw	low(0FAh)
  4221  0071F4  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  4222  0071F6  6E01               	call	_PWM1_Duty	;wreg free
  4223  0071F8  EC8D  F038         	line	114
  4224                           ;motor2.c: 114:         PWM1_Duty(250);
  4225                           	goto	l83
  4226  0071FC  EF20  F039         	line	115
  4227                           ;motor2.c: 115:    }
  4228                           	
  4229                           l80:
  4230  007200                     	
  4231                           l2364:
  4232  007200                     		movlw	3
  4233  007200  0E03               	xorwf	((c:Do@n)),c,w
  4234  007202  1805               iorwf	((c:Do@n+1)),c,w
  4235  007204  1006               	btfss	status,2
  4236  007206  A4D8               	goto	u1921
  4237  007208  EF08  F039         	goto	u1920
  4238  00720C  EF0A  F039         
  4239                           u1921:
  4240  007210                     	goto	l83
  4241  007210  EF20  F039         u1920:
  4242  007214                     	line	116
  4243                           	
  4244                           l2366:
  4245  007214                     ;motor2.c: 116: }
  4246                           	movlw	low(0AFh)
  4247  007214  0EAF               	movwf	((c:PWM1_Init@setDuty)),c
  4248  007216  6E01               	movlw	high(0AFh)
  4249  007218  0E00               	movwf	((c:PWM1_Init@setDuty+1)),c
  4250  00721A  6E02               	movlw	low highword(0AFh)
  4251  00721C  0E00               	movwf	((c:PWM1_Init@setDuty+2)),c
  4252  00721E  6E03               	movlw	high highword(0AFh)
  4253  007220  0E00               	movwf	((c:PWM1_Init@setDuty+3)),c
  4254  007222  6E04               	call	_PWM1_Init	;wreg free
  4255  007224  EC54  F038         	line	117
  4256                           	
  4257                           l2368:
  4258  007228                     ;motor2.c: 117: void Mi(int n)
  4259                           	movlw	high(0FAh)
  4260  007228  0E00               	movwf	((c:PWM1_Duty@duty+1)),c
  4261  00722A  6E02               	movlw	low(0FAh)
  4262  00722C  0EFA               	movwf	((c:PWM1_Duty@duty)),c
  4263  00722E  6E01               	call	_PWM1_Duty	;wreg free
  4264  007230  EC8D  F038         	goto	l83
  4265  007234  EF20  F039         	line	118
  4266                           ;motor2.c: 118: {
  4267                           	
  4268                           l82:
  4269  007238                     	goto	l83
  4270  007238  EF20  F039         	
  4271                           l81:
  4272  00723C                     	goto	l83
  4273  00723C  EF20  F039         	
  4274                           l79:
  4275  007240                     	line	119
  4276                           	
  4277                           l83:
  4278  007240                     	return	;funcret
  4279  007240  0012               	opt stack 0
  4280                           GLOBAL	__end_of_Do
  4281                           	__end_of_Do:
  4282  007242                     	signat	_Do,4217
  4283                           	global	_PWM1_Init
  4284                           
  4285 ;; *************** function _PWM1_Init *****************
  4286 ;; Defined at:
  4287 ;;		line 50 in file "motor2.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  setDuty         4    0[COMRAM] long 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		None
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4301 ;;      Params:         4       0       0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0
  4304 ;;      Totals:         4       0       0       0       0       0       0
  4305 ;;Total ram usage:        4 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_Do
  4311 ;;		_Re
  4312 ;;		_Mi
  4313 ;;		_Fa
  4314 ;;		_So
  4315 ;;		_La
  4316 ;;		_Si
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           psect	text13,class=CODE,space=0,reloc=2,group=0
  4320                           	line	50
  4321                           global __ptext13
  4322                           __ptext13:
  4323  0070A8                     psect	text13
  4324                           	file	"motor2.c"
  4325                           	line	50
  4326                           	global	__size_of_PWM1_Init
  4327                           	__size_of_PWM1_Init	equ	__end_of_PWM1_Init-_PWM1_Init
  4328  0000                     	
  4329                           _PWM1_Init:
  4330  0070A8                     ;incstack = 0
  4331                           	opt	stack 29
  4332                           	line	52
  4333                           	
  4334                           l2334:
  4335  0070A8                     ;motor2.c: 50: ;motor2.c: 51: void PWM1_Duty2();motor2.c: 52: {
  4336                           	movff	(c:PWM1_Init@setDuty),(c:4043)	;volatile
  4337  0070A8  C001  FFCB         	line	55
  4338                           	
  4339                           l66:
  4340  0070AC                     	return	;funcret
  4341  0070AC  0012               	opt stack 0
  4342                           GLOBAL	__end_of_PWM1_Init
  4343                           	__end_of_PWM1_Init:
  4344  0070AE                     	signat	_PWM1_Init,4217
  4345                           	global	_PWM1_Duty
  4346                           
  4347 ;; *************** function _PWM1_Duty *****************
  4348 ;; Defined at:
  4349 ;;		line 57 in file "motor2.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  duty            2    0[COMRAM] int 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4363 ;;      Params:         2       0       0       0       0       0       0
  4364 ;;      Locals:         0       0       0       0       0       0       0
  4365 ;;      Temps:          2       0       0       0       0       0       0
  4366 ;;      Totals:         4       0       0       0       0       0       0
  4367 ;;Total ram usage:        4 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_Do
  4373 ;;		_Re
  4374 ;;		_Mi
  4375 ;;		_Fa
  4376 ;;		_So
  4377 ;;		_La
  4378 ;;		_Si
  4379 ;;		_main
  4380 ;;		_Quiet
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           psect	text14,class=CODE,space=0,reloc=2,group=0
  4384                           	line	57
  4385                           global __ptext14
  4386                           __ptext14:
  4387  00711A                     psect	text14
  4388                           	file	"motor2.c"
  4389                           	line	57
  4390                           	global	__size_of_PWM1_Duty
  4391                           	__size_of_PWM1_Duty	equ	__end_of_PWM1_Duty-_PWM1_Duty
  4392  0000                     	
  4393                           _PWM1_Duty:
  4394  00711A                     ;incstack = 0
  4395                           	opt	stack 29
  4396                           	line	60
  4397                           	
  4398                           l2336:
  4399  00711A                     ;motor2.c: 57: ;motor2.c: 58: void PWM1_Start();motor2.c: 60: 
  4400                           	movff	(c:PWM1_Duty@duty),(c:3986)	;volatile
  4401  00711A  C001  FF92         	line	61
  4402                           ;motor2.c: 61:     CCP1CONbits.CCP1M0 = 0;
  4403                           	btfss	((c:3986)),c,1	;volatile
  4404  00711E  A292               	bra	u1875
  4405  007120  D002               	bsf	((c:4029)),c,5	;volatile
  4406  007122  8ABD               	bra	u1877
  4407  007124  D001               	u1875:	
  4408  007126                     	bcf	((c:4029)),c,5	;volatile
  4409  007126  9ABD               	u1877:
  4410  007128                     	line	62
  4411                           ;motor2.c: 62:     CCP1CONbits.CCP1M1 = 0;
  4412                           	btfss	((c:3986)),c,0	;volatile
  4413  007128  A092               	bra	u1885
  4414  00712A  D002               	bsf	((c:4029)),c,4	;volatile
  4415  00712C  88BD               	bra	u1887
  4416  00712E  D001               	u1885:	
  4417  007130                     	bcf	((c:4029)),c,4	;volatile
  4418  007130  98BD               	u1887:
  4419  007132                     	line	65
  4420                           	
  4421                           l2338:
  4422  007132                     ;motor2.c: 65: 
  4423                           	movff	(c:PWM1_Duty@duty),??_PWM1_Duty+0+0
  4424  007132  C001  F003         	movff	(c:PWM1_Duty@duty+1),??_PWM1_Duty+0+0+1
  4425  007136  C002  F004         	rlcf	(??_PWM1_Duty+0+1),c,w
  4426  00713A  3404               	rrcf	(??_PWM1_Duty+0+1),c
  4427  00713C  3204               	rrcf	(??_PWM1_Duty+0+0),c
  4428  00713E  3203               	rlcf	(??_PWM1_Duty+0+1),c,w
  4429  007140  3404               	rrcf	(??_PWM1_Duty+0+1),c
  4430  007142  3204               	rrcf	(??_PWM1_Duty+0+0),c
  4431  007144  3203               	movf	(??_PWM1_Duty+0+0),c,w
  4432  007146  5003               	movwf	((c:4030)),c	;volatile
  4433  007148  6EBE               	line	68
  4434                           	
  4435                           l69:
  4436  00714A                     	return	;funcret
  4437  00714A  0012               	opt stack 0
  4438                           GLOBAL	__end_of_PWM1_Duty
  4439                           	__end_of_PWM1_Duty:
  4440  00714C                     	signat	_PWM1_Duty,4217
  4441                           	global	_ADC_Read
  4442                           
  4443 ;; *************** function _ADC_Read *****************
  4444 ;; Defined at:
  4445 ;;		line 35 in file "motor2.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  channel         2    0[COMRAM] int 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  digital         2    4[COMRAM] int 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  2    0[COMRAM] int 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4459 ;;      Params:         2       0       0       0       0       0       0
  4460 ;;      Locals:         2       0       0       0       0       0       0
  4461 ;;      Temps:          2       0       0       0       0       0       0
  4462 ;;      Totals:         6       0       0       0       0       0       0
  4463 ;;Total ram usage:        6 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_main
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           psect	text15,class=CODE,space=0,reloc=2,group=0
  4472                           	line	35
  4473                           global __ptext15
  4474                           __ptext15:
  4475  00714C                     psect	text15
  4476                           	file	"motor2.c"
  4477                           	line	35
  4478                           	global	__size_of_ADC_Read
  4479                           	__size_of_ADC_Read	equ	__end_of_ADC_Read-_ADC_Read
  4480  0000                     	
  4481                           _ADC_Read:
  4482  00714C                     ;incstack = 0
  4483                           	opt	stack 30
  4484                           	line	39
  4485                           	
  4486                           l2340:
  4487  00714C                     ;motor2.c: 35: ;motor2.c: 36: };motor2.c: 37: ;motor2.c: 39: {
  4488                           	movf	((c:4034)),c,w	;volatile
  4489  00714C  50C2               	andlw	not (((1<<4)-1)<<2)
  4490  00714E  0BC3               	iorlw	(07h & ((1<<4)-1))<<2
  4491  007150  091C               	movwf	((c:4034)),c	;volatile
  4492  007152  6EC2               	line	40
  4493                           	
  4494                           l2342:
  4495  007154                     ;motor2.c: 40: 
  4496                           	bsf	((c:4034)),c,1	;volatile
  4497  007154  82C2               	line	41
  4498                           	
  4499                           l2344:
  4500  007156                     ;motor2.c: 41:         TRISA = duty;
  4501                           	bsf	((c:4034)),c,0	;volatile
  4502  007156  80C2               	line	43
  4503                           ;motor2.c: 43:         CCP1CONbits.CCP1Y = TRISAbits.RA0;
  4504                           	goto	l60
  4505  007158  EFAE  F038         	
  4506                           l61:
  4507  00715C                     	
  4508                           l60:
  4509  00715C                     	btfsc	((c:4034)),c,1	;volatile
  4510  00715C  B2C2               	goto	u1891
  4511  00715E  EFB3  F038         	goto	u1890
  4512  007162  EFB5  F038         u1891:
  4513  007166                     	goto	l60
  4514  007166  EFAE  F038         u1890:
  4515  00716A                     	goto	l2346
  4516  00716A  EFB7  F038         	
  4517                           l62:
  4518  00716E                     	line	45
  4519                           	
  4520                           l2346:
  4521  00716E                     ;motor2.c: 45: 
  4522                           	movf	((c:4035)),c,w	;volatile
  4523  00716E  50C3               	movff	(c:4036),??_ADC_Read+0+0	;volatile
  4524  007170  CFC4 F003          	clrf	(??_ADC_Read+0+0+1)&0ffh,c
  4525  007174  6A04               	movff	??_ADC_Read+0+0,??_ADC_Read+0+1
  4526  007176  C003  F004         	clrf	(??_ADC_Read+0+0),c
  4527  00717A  6A03               	iorwf	(??_ADC_Read+0+0),c,w
  4528  00717C  1003               	movwf	((c:ADC_Read@digital)),c
  4529  00717E  6E05               	movf	(??_ADC_Read+0+1),c,w
  4530  007180  5004               	movwf	1+((c:ADC_Read@digital)),c
  4531  007182  6E06               	line	46
  4532                           	
  4533                           l2348:
  4534  007184                     ;motor2.c: 46:         CCPR1L = duty >> 2;
  4535                           	movff	(c:ADC_Read@digital),(c:?_ADC_Read)
  4536  007184  C005  F001         	movff	(c:ADC_Read@digital+1),(c:?_ADC_Read+1)
  4537  007188  C006  F002         	goto	l63
  4538  00718C  EFC8  F038         	
  4539                           l2350:
  4540  007190                     	line	47
  4541                           	
  4542                           l63:
  4543  007190                     	return	;funcret
  4544  007190  0012               	opt stack 0
  4545                           GLOBAL	__end_of_ADC_Read
  4546                           	__end_of_ADC_Read:
  4547  007192                     	signat	_ADC_Read,4218
  4548                           	global	_ADC_Initialize
  4549                           
  4550 ;; *************** function _ADC_Initialize *****************
  4551 ;; Defined at:
  4552 ;;		line 25 in file "motor2.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;		None
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;		None
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4566 ;;      Params:         0       0       0       0       0       0       0
  4567 ;;      Locals:         0       0       0       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0
  4569 ;;      Totals:         0       0       0       0       0       0       0
  4570 ;;Total ram usage:        0 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_main
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           psect	text16,class=CODE,space=0,reloc=2,group=0
  4579                           	line	25
  4580                           global __ptext16
  4581                           __ptext16:
  4582  0070B8                     psect	text16
  4583                           	file	"motor2.c"
  4584                           	line	25
  4585                           	global	__size_of_ADC_Initialize
  4586                           	__size_of_ADC_Initialize	equ	__end_of_ADC_Initialize-_ADC_Initialize
  4587  0000                     	
  4588                           _ADC_Initialize:
  4589  0070B8                     ;incstack = 0
  4590                           	opt	stack 30
  4591                           	line	26
  4592                           	
  4593                           l962:
  4594  0070B8                     ;motor2.c: 26:     digital = (ADRESH*256) | (ADRESL);
  4595                           	setf	((c:3986)),c	;volatile
  4596  0070B8  6892               	line	27
  4597                           	
  4598                           l964:
  4599  0070BA                     ;motor2.c: 27:     return(digital);
  4600                           	movlw	low(0Eh)
  4601  0070BA  0E0E               	movwf	((c:4033)),c	;volatile
  4602  0070BC  6EC1               	line	29
  4603                           	
  4604                           l966:
  4605  0070BE                     ;motor2.c: 29: 
  4606                           	bsf	c:(32263/8),(32263)&7	;volatile
  4607  0070BE  8EC0               	line	30
  4608                           	
  4609                           l968:
  4610  0070C0                     ;motor2.c: 30: void piano();
  4611                           		
  4612                           	bsf	((c:4032)),c, 0+0	;volatile
  4613  0070C0  80C0               	bsf	((c:4032)),c, 0+1	;volatile
  4614  0070C2  82C0               	bsf	((c:4032)),c, 0+2	;volatile
  4615  0070C4  84C0               
  4616                           	line	31
  4617                           ;motor2.c: 31: void PWM1_Init(long setDuty)
  4618                           	movlw	low(0)
  4619  0070C6  0E00               	movwf	((c:4036)),c	;volatile
  4620  0070C8  6EC4               	line	32
  4621                           ;motor2.c: 32: {
  4622                           	movlw	low(0)
  4623  0070CA  0E00               	movwf	((c:4035)),c	;volatile
  4624  0070CC  6EC3               	line	33
  4625                           	
  4626                           l57:
  4627  0070CE                     	return	;funcret
  4628  0070CE  0012               	opt stack 0
  4629                           GLOBAL	__end_of_ADC_Initialize
  4630                           	__end_of_ADC_Initialize:
  4631  0070D0                     	signat	_ADC_Initialize,89
  4632                           	GLOBAL	__activetblptr
  4633                           __activetblptr	EQU	0
  4634  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  4635                           	PSECT	rparam,class=COMRAM,space=1,noexec
  4636                           	GLOBAL	__Lrparam
  4637                           	FNCONF	rparam,??,?
  4638                           	GLOBAL	___rparam_used
  4639                           	___rparam_used EQU 1
  4640  0000                     	GLOBAL	___param_bank
  4641                           	___param_bank EQU 0
  4642  0000                     GLOBAL	__Lparam, __Hparam
  4643                           GLOBAL	__Lrparam, __Hrparam
  4644                           __Lparam	EQU	__Lrparam
  4645  0000                     __Hparam	EQU	__Hrparam
  4646  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     69      73
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___fltol
    ___xxtofl->___wmul
    ___fltol->___flmul
    ___flmul->___xxtofl
    _So->_PWM1_Duty
    _So->_PWM1_Init
    _Si->_PWM1_Duty
    _Si->_PWM1_Init
    _Re->_PWM1_Duty
    _Re->_PWM1_Init
    _Mi->_PWM1_Duty
    _Mi->_PWM1_Init
    _La->_PWM1_Duty
    _La->_PWM1_Init
    _Fa->_PWM1_Duty
    _Fa->_PWM1_Init
    _Do->_PWM1_Duty
    _Do->_PWM1_Init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   33385
                                             55 COMRAM    14    14      0
                     _ADC_Initialize
                           _ADC_Read
                                 _Do
                                 _Fa
                                 _La
                                 _Mi
                          _PWM1_Duty
                         _PWM1_Start
                                 _Re
                                 _Si
                                 _So
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             45 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             20 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _So                                                   2     0      2    4388
                                              4 COMRAM     2     0      2
                          _PWM1_Duty
                          _PWM1_Init
 ---------------------------------------------------------------------------------
 (1) _Si                                                   2     0      2    3552
                                              4 COMRAM     2     0      2
                          _PWM1_Duty
                          _PWM1_Init
 ---------------------------------------------------------------------------------
 (1) _Re                                                   2     0      2    4464
                                              4 COMRAM     2     0      2
                          _PWM1_Duty
                          _PWM1_Init
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mi                                                   2     0      2    4768
                                              4 COMRAM     2     0      2
                          _PWM1_Duty
                          _PWM1_Init
 ---------------------------------------------------------------------------------
 (1) _La                                                   2     0      2    3552
                                              4 COMRAM     2     0      2
                          _PWM1_Duty
                          _PWM1_Init
 ---------------------------------------------------------------------------------
 (1) _Fa                                                   2     0      2    4008
                                              4 COMRAM     2     0      2
                          _PWM1_Duty
                          _PWM1_Init
 ---------------------------------------------------------------------------------
 (1) _Do                                                   2     0      2    3856
                                              4 COMRAM     2     0      2
                          _PWM1_Duty
                          _PWM1_Init
 ---------------------------------------------------------------------------------
 (2) _PWM1_Init                                            4     0      4    1618
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _PWM1_Duty                                            4     2      2    1792
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2      99
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _Do
     _PWM1_Duty
     _PWM1_Init
   _Fa
     _PWM1_Duty
     _PWM1_Init
   _La
     _PWM1_Duty
     _PWM1_Init
   _Mi
     _PWM1_Duty
     _PWM1_Init
   _PWM1_Duty
   _PWM1_Start
   _Re
     _PWM1_Duty
     _PWM1_Init
   _Si
     _PWM1_Duty
     _PWM1_Init
   _So
     _PWM1_Duty
     _PWM1_Init
   ___flmul
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___fltol
     ___flmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___wmul
   ___xxtofl
     ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     45      49       1       57.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      15        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Jan 05 00:28:59 2019

                      _n 0046                       l60 715C                       l61 715C  
                     l62 716E                       l63 7190                       l80 7200  
                     l57 70CE                       l81 723C                       l66 70AC  
                     l82 7238                       l90 74F8                       l83 7240  
                     l75 70EE                       l91 7500                       l69 714A  
                     l78 71C8                       l94 73D8                       l86 7488  
                     l79 7240                       l95 7450                       l87 7500  
                     l96 7410                       l88 74C0                       l97 744C  
                     l89 74FC                       l98 7448                       l99 7450  
                     _Fa 7242                       _Do 7192                       _La 72F2  
                     _Mi 73A2                       _Re 7452                       _Si 7502  
                     _So 75B2      ___wmul@multiplicand 0003                      ?_Fa 0005  
                    ?_Do 0005                      ?_La 0005                      ?_Mi 0005  
                    ?_Re 0005                      ?_Si 0005                      ?_So 0005  
                    Fa@n 0005                      l102 7278                      l110 75E8  
                    l103 72F0                      l111 7660                      l104 72B0  
                    l120 7360                      l112 7620                      l105 72EC  
                    l121 739C                      l113 765C                      l106 72E8  
                    l122 7398                      l130 75A8                      l114 7658  
                    l107 72F0                      l123 73A0                      l131 75B0  
                    l115 7660                      l118 7328                      l126 7538  
                    l119 73A0                      l127 75B0                      l128 7570  
                    l129 75AC                      l270 7AFA                      l271 7B7A  
                    l263 79CA                      l280 7B8E                      l272 7B1A  
                    l264 7A9A                      l265 7B86                      l273 7B76  
                    l274 7B3A                      l266 7ABA                      Do@n 0005  
                    l283 7118                      l267 7B82                      l275 7B72  
                    l276 7B5A                      l268 7ADA                      l269 7B7E  
                    l277 7B6E                      l278 7B8A                      l279 7B8E  
                    La@n 0005                      l900 7C8E                      l580 77B2  
                    l901 7FFE                      l581 7726                      l910 7F50  
                    l902 7E7C                      l590 779E                      l582 770A  
                    l911 7F4C                      l903 7E4E                      l583 770E  
                    l912 7F7E                      l904 7E68                      l584 7722  
                    l913 7FE6                      l905 7E8E                      l585 777A  
                    l914 7FB0                      l906 7EF0                      l586 774E  
                    l915 7FE2                      l907 7ED6                      l587 7762  
                    l579 7690                      l916 7FD8                      l908 7EF0  
                    l588 7752                      l940 784C                      l909 7EEC  
                    l589 7776                      l941 798E                      l942 7864  
                    l951 791A                      l943 7854                      l952 791A  
                    l944 7896                      l953 792E                      l945 78B2  
                    l962 70B8                      l890 7BB2                      l954 797A  
                    l946 789A                      l938 780A                      l891 7BEC  
                    l947 78E4                      l939 781E                      l964 70BA  
                    l892 7BE6                      l948 78F8                      l893 7C00  
                    l949 78E8                      l966 70BE                      l982 70D0  
                    l894 7C20                      l895 7C5A                      l968 70C0  
                    l896 7C54                      l897 7C6A                      l898 7CA6  
                    _RD0 007C18                      _RD1 007C19                      _RC3 007C13  
                    Mi@n 0005                      _RD2 007C1A                      _RD3 007C1B  
                    _RD4 007C1C                      _RD5 007C1D                      _PR2 000FCB  
                    Re@n 0005             __CFG_CPD$OFF 000000                      Si@n 0005  
                    So@n 0005                      wreg 000FE8             ___flmul@aexp 0026  
           ___flmul@bexp 0027             ___flmul@sign 0021             ___flmul@temp 002C  
           ___flmul@prod 0028                     ??_Fa 0007                     ??_Do 0007  
                   ??_La 0007                     ??_Mi 0007                     ??_Re 0007  
                   ??_Si 0007                     ??_So 0007              main@digital 0042  
           __CFG_LVP$OFF 000000             ___fltol@exp1 0037             __CFG_WDT$OFF 000000  
                   l2400 7410                     l2410 7268                     l2402 7424  
                   l2340 714C                     l2420 72C4                     l2412 7278  
                   l2404 7438                     l2500 7BEC                     l2350 7190  
                   l2342 7154                     l2334 70A8                     l2422 72D8  
                   l2414 728C                     l2406 7242                     l2430 75E8  
                   l2510 7C20                     l2502 7C00                     l2344 7156  
                   l2336 711A                     l2360 71DC                     l2352 7192  
                   l2416 72A0                     l2408 7254                     l2440 7648  
                   l2432 75FC                     l2424 75B2                     l2600 7F98  
                   l2520 7C7A                     l2512 7C30                     l2504 7C06  
                   l2346 716E                     l2338 7132                     l2362 71F0  
                   l2354 71A4                     l2418 72B0                     l2450 733C  
                   l2442 72F2                     l2370 7452                     l2434 7610  
                   l2426 75C4                     l2602 7FB4                     l2610 7FE6  
                   l2530 7CBC                     l2522 7C8E                     l2514 7C40  
                   l2506 7C0C                     l2348 7184                     l2364 7200  
                   l2356 71B8                     l2452 7350                     l2444 7304  
                   l2380 74B0                     l2372 7464                     l2460 7502  
                   l2436 7620                     l2428 75D8                     l2612 7FEA  
                   l2604 7FC4                     l2540 7D0E                     l2532 7CD2  
                   l2524 7CA2                     l2516 7C54                     l2508 7C1A  
                   l2620 768C                     l2700 7974                     l2366 7214  
                   l2358 71C8                     l2454 7360                     l2446 7318  
                   l2390 73B4                     l2382 74C0                     l2374 7478  
                   l2470 7560                     l2462 7514                     l2438 7634  
                   l2614 7FFE                     l2606 7FD2                     l2550 7D54  
                   l2542 7D1C                     l2534 7CDE                     l2526 7CA6  
                   l2518 7C5A                     l2630 76D0                     l2622 7690  
                   l2702 797A                     l2368 7228                     l2456 7374  
                   l2448 7328                     l2392 73C8                     l2384 74D4  
                   l2376 7488                     l2472 7570                     l2464 7528  
                   l2608 7FD8                     l2560 7DC2                     l2552 7D6E  
                   l2544 7D28                     l2536 7CF6                     l2528 7CB2  
                   l2640 7718                     l2632 76DE                     l2624 76BA  
                   l2616 7662                     l2480 70F0                     l2704 798E  
                   l2458 7388                     l2394 73D8                     l2386 74E8  
                   l2378 749C                     l2474 7584                     l2466 7538  
                   l2570 7E58                     l2562 7DEC                     l2554 7D7E  
                   l2546 7D38                     l2538 7D02                     l2490 7BAC  
                   l2650 7762                     l2634 76F2                     l2642 7726  
                   l2626 76BC                     l2618 7678                     l2482 710C  
                   l3610 7990                     l2396 73EC                     l2388 73A2  
                   l2476 7598                     l2468 754C                     l2580 7EA0  
                   l2572 7E66                     l2564 7E22                     l2556 7D9A  
                   l2548 7D44                     l2492 7BB2                     l2644 7736  
                   l2652 777A                     l2636 7706                     l2628 76CC  
                   l2484 7118                     l2660 77B6                     l3620 79AE  
                   l3612 7994                     l2398 7400                     l2590 7F1A  
                   l2582 7ECE                     l2574 7E7C                     l2566 7E30  
                   l2558 7DA6                     l2494 7BC2                     l2486 7B92  
                   l2654 778A                     l2646 774A                     l2638 770E  
                   l2670 7848                     l2662 77C6                     l3630 79B8  
                   l3622 79B0                     l3614 799C                     l2592 7F44  
                   l2584 7EE4                     l2576 7E8E                     l2568 7E4E  
                   l2496 7BD2                     l2488 7B9E                     l2656 779E  
                   l2648 7752                     l2680 789C                     l2672 784C  
                   l2664 77D4                     l3640 7A36                     l3632 79BA  
                   l3624 79B2                     l3616 79A4                     l2586 7F00  
                   l2594 7F50                     l2578 7E92                     l2498 7BE6  
                   l2658 77B2                     l2690 7928                     l2682 78A8  
                   l2674 7854                     l2666 781E                     l3650 7AA8  
                   l3642 7A72                     l3634 79BE                     l3626 79B4  
                   l3618 79AC                     l2596 7F6A                     l2588 7F0C  
                   l2692 792E                     l2684 78E8                     l2676 7864  
                   l2668 7834                     l3660 7AEA                     l3652 7AAA  
                   l3644 7A7A                     l3636 79CA                     l3628 79B6  
                   l2598 7F7E                     l2694 7932                     l2686 78F8  
                   l2678 789A                     l3670 7B48                     l3662 7B08  
                   l3654 7AC8                     l3646 7A88                     l3638 79DE  
                   l2696 7956                     l2688 7906                     l3672 7B4A  
                   l3664 7B0A                     l3656 7ACA                     l3648 7A8A  
                   l2698 7966                     l3674 7B5A                     l3666 7B28  
                   l3658 7AE8                     l3676 7B66                     l3668 7B2A  
                   _ADFM 007E07                     u2000 728C                     u2001 7288  
                   u2010 72C4                     u2011 72C0                     u2100 7584  
                   u2020 75C4                     u2101 7580                     u2021 75C0  
                   u2030 75FC                     u2110 7BAC                     u2031 75F8  
                   u2111 7BA8                     u2040 7634                     u2200 7E66  
                   u2120 7BC2                     u2041 7630                     u2201 7E62  
                   u2121 7BBE                     u2050 7304                     u2210 7E8A  
                   u2130 7BD2                     u2051 7300                     u2211 7E86  
                   u2131 7BCE                     u2060 733C                     u2220 7EA0  
                   u2140 7C1A                     u2300 7678                     u2061 7338  
                   u2221 7E9C                     u2141 7C16                     u2301 7674  
                   _LATA 000F89                     u2070 7374                     u2230 7ECE  
                   u2150 7C30                     u2310 76B0                     u2071 7370  
                   u2231 7ECA                     u2151 7C2C                     u2080 7514  
                   u2240 7EE4                     u2160 7C40                     u2320 76DE  
                   u2400 7892                     u2081 7510                     u2241 7EE0  
                   u2161 7C3C                     u2321 76DA                     u2401 788E  
                   u2090 754C                     u2250 7F00                     u2170 7C7A  
                   u2330 76F2                     u2410 78E0                     u2091 7548  
                   u2251 7EFC                     u2171 7C76                     u2331 76EE  
                   u2315 76A6                     u2411 78DC                     u2260 7F1A  
                   u2180 7C8A                     u2340 7736                     u2420 7906  
                   u2261 7F16                     u2181 7C86                     u2341 7732  
                   u2421 7902                     u2270 7F6A                     u2190 7E0C  
                   u2350 7772                     u2430 7916                     u2271 7F66  
                   u2351 776E                     u2431 7912                     u2280 7F98  
                   u2360 778A                     u2440 7928                     u2281 7F94  
                   u2361 7786                     u2441 7924                     u2290 7FD2  
                   u2450 7966                     u2370 77C6                     u2291 7FCE  
                   u2195 7E02                     u2451 7962                     u2371 77C2  
                   u1900 71A4                     u2460 7974                     u2380 77D4  
                   u1901 71A0                     u2461 7970                     u2381 77D0  
                   u1910 71DC                     u2390 7834                     u1911 71D8  
                   u2391 7830                     u1920 7214                     u3600 7A88  
                   u1921 7210                     u3601 7A84                     u1930 7464  
                   u3610 7AA8                     u1931 7460                     u3611 7AA4  
                   u1940 749C                     u3620 7AC8                     u1941 7498  
                   u3621 7AC4                     u1950 74D4                     u3630 7AE8  
                   u1951 74D0                     u3631 7AE4                     u1960 73B4  
                   u3640 7B08                     u1961 73B0                     u3641 7B04  
                   u1890 716A                     u1970 73EC                     u3650 7B28  
                   u1891 7166                     u1875 7126                     u1971 73E8  
                   u3651 7B24                     u1980 7424                     u3660 7B48  
                   u1885 7130                     u1877 7128                     u1981 7420  
                   u3661 7B44                     u1990 7254                     u1887 7132  
                   u1991 7250                     _flag 0048                     _main 7990  
       __end_of_ADC_Read 7192            __CFG_BOREN$ON 000000                     prodh 000FF4  
                   prodl 000FF3                     start 0000              main@voltage 0044  
           ___param_bank 000000            ___fltol@sign1 0036                    ?_main 0001  
        __end_of___flmul 8000          __end_of___fltol 77B4                    _TRISA 000F92  
          __CFG_PWRT$OFF 000000       __size_of_PWM1_Init 0006       __size_of_PWM1_Duty 0032  
            ?_PWM1_Start 0001                    main@i 003C                    main@j 003E  
                  status 000FD8          __initialization 70AE             __end_of_main 7B92  
                 ??_main 0038            __activetblptr 000000                   _ADCON1 000FC1  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CCPR1L 000FBE  
       __end_of___xxtofl 7990        __end_of_PWM1_Init 70AE        __end_of_PWM1_Duty 714C  
                 ___wmul 70F0      __size_of_PWM1_Start 0020                ??___flmul 001D  
              ??___fltol 0032          ADC_Read@channel 0001          ADC_Read@digital 0005  
              ?_ADC_Read 0001             ___xxtofl@arg 0011             ___xxtofl@exp 0010  
           ___xxtofl@val 0007               __accesstop 0080  __end_of__initialization 70B2  
          ___rparam_used 000001               ___fltol@f1 002E           __pcstackCOMRAM 0001  
             __end_of_Fa 72F2               __end_of_Do 7242               __end_of_La 73A2  
             __end_of_Mi 7452               __end_of_Re 7502               __end_of_Si 75B2  
             __end_of_So 7662               ??_ADC_Read 0003               __pnvCOMRAM 0046  
                ?___wmul 0001  __size_of_ADC_Initialize 0018                ?___xxtofl 0007  
           ??_PWM1_Start 0001                  __Hparam 0000                  __Lparam 0000  
                ___flmul 7B92                  ___fltol 7662          __size_of___wmul 002A  
     __end_of_PWM1_Start 70F0                  __pcinit 70AE                  __ramtop 0600  
                __ptext0 7990                  __ptext1 77B4                  __ptext2 70F0  
                __ptext3 7662                  __ptext4 7B92                  __ptext5 75B2  
                __ptext6 7502                  __ptext7 7452                  __ptext8 70D0  
                __ptext9 73A2                _T2CONbits 000FCA               ??___xxtofl 000B  
   end_of_initialization 70B2                _PWM1_Init 70A8                _PWM1_Duty 711A  
          ___xxtofl@sign 000F                _TRISAbits 000F92                _TRISCbits 000F94  
              _TRISDbits 000F95        __size_of_ADC_Read 0046              ___flmul@grs 0022  
            _CCP1CONbits 000FBD           __end_of___wmul 711A               ?_PWM1_Init 0001  
             ?_PWM1_Duty 0001           _ADC_Initialize 70B8      start_initialization 70AE  
       __CFG_OSC$INTIO67 000000                 ??___wmul 0005   __end_of_ADC_Initialize 70D0  
              ___flmul@a 0019                ___flmul@b 0015              __pbssCOMRAM 0048  
      __size_of___xxtofl 01DC                 ?___flmul 0015                 ?___fltol 002E  
        ?_ADC_Initialize 0001              ??_PWM1_Init 0005              ??_PWM1_Duty 0003  
               _ADC_Read 714C              __size_of_Fa 00B0              __size_of_Do 00B0  
            __size_of_La 00B0              __size_of_Mi 00B0              __size_of_Re 00B0  
            __size_of_Si 00B0              __size_of_So 00B0           ___wmul@product 0005  
               _LATAbits 000F89            PWM1_Duty@duty 0001               _ADCON0bits 000FC2  
             _ADCON2bits 000FC0        ___wmul@multiplier 0001                main@speed 0038  
               __Hrparam 0000         PWM1_Init@setDuty 0001                 __Lrparam 0000  
       __size_of___flmul 046E         __size_of___fltol 0152                 ___xxtofl 77B4  
               __ptext10 72F2                 __ptext11 7242                 __ptext12 7192  
               __ptext13 70A8                 __ptext14 711A                 __ptext15 714C  
               __ptext16 70B8            __size_of_main 0202                 main@flag 0040  
            _PWM1CONbits 000FB7         ??_ADC_Initialize 0001               _OSCCONbits 000FD3  
             _PWM1_Start 70D0  
